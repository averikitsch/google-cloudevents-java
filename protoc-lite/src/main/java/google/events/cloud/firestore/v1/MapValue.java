// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/firestore/v1/data.proto

package google.events.cloud.firestore.v1;

/**
 * <pre>
 * A map value.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.firestore.v1.MapValue}
 */
public  final class MapValue extends
    com.google.protobuf.GeneratedMessageLite<
        MapValue, MapValue.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.firestore.v1.MapValue)
    MapValueOrBuilder {
  private MapValue() {
  }
  public static final int FIELDS_FIELD_NUMBER = 1;
  private static final class FieldsDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, google.events.cloud.firestore.v1.Value> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, google.events.cloud.firestore.v1.Value>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                google.events.cloud.firestore.v1.Value.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, google.events.cloud.firestore.v1.Value> fields_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, google.events.cloud.firestore.v1.Value>
  internalGetFields() {
    return fields_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, google.events.cloud.firestore.v1.Value>
  internalGetMutableFields() {
    if (!fields_.isMutable()) {
      fields_ = fields_.mutableCopy();
    }
    return fields_;
  }
  @java.lang.Override

  public int getFieldsCount() {
    return internalGetFields().size();
  }
  /**
   * <pre>
   * The map's fields.
   * The map keys represent field names. Field names matching the regular
   * expression `__.*__` are reserved. Reserved field names are forbidden except
   * in certain documented contexts. The map keys, represented as UTF-8, must
   * not exceed 1,500 bytes and cannot be empty.
   * </pre>
   *
   * <code>map&lt;string, .google.events.cloud.firestore.v1.Value&gt; fields = 1;</code>
   */
  @java.lang.Override

  public boolean containsFields(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetFields().containsKey(key);
  }
  /**
   * Use {@link #getFieldsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, google.events.cloud.firestore.v1.Value> getFields() {
    return getFieldsMap();
  }
  /**
   * <pre>
   * The map's fields.
   * The map keys represent field names. Field names matching the regular
   * expression `__.*__` are reserved. Reserved field names are forbidden except
   * in certain documented contexts. The map keys, represented as UTF-8, must
   * not exceed 1,500 bytes and cannot be empty.
   * </pre>
   *
   * <code>map&lt;string, .google.events.cloud.firestore.v1.Value&gt; fields = 1;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, google.events.cloud.firestore.v1.Value> getFieldsMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetFields());
  }
  /**
   * <pre>
   * The map's fields.
   * The map keys represent field names. Field names matching the regular
   * expression `__.*__` are reserved. Reserved field names are forbidden except
   * in certain documented contexts. The map keys, represented as UTF-8, must
   * not exceed 1,500 bytes and cannot be empty.
   * </pre>
   *
   * <code>map&lt;string, .google.events.cloud.firestore.v1.Value&gt; fields = 1;</code>
   */
  @java.lang.Override

  public google.events.cloud.firestore.v1.Value getFieldsOrDefault(
      java.lang.String key,
      google.events.cloud.firestore.v1.Value defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, google.events.cloud.firestore.v1.Value> map =
        internalGetFields();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * The map's fields.
   * The map keys represent field names. Field names matching the regular
   * expression `__.*__` are reserved. Reserved field names are forbidden except
   * in certain documented contexts. The map keys, represented as UTF-8, must
   * not exceed 1,500 bytes and cannot be empty.
   * </pre>
   *
   * <code>map&lt;string, .google.events.cloud.firestore.v1.Value&gt; fields = 1;</code>
   */
  @java.lang.Override

  public google.events.cloud.firestore.v1.Value getFieldsOrThrow(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, google.events.cloud.firestore.v1.Value> map =
        internalGetFields();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * The map's fields.
   * The map keys represent field names. Field names matching the regular
   * expression `__.*__` are reserved. Reserved field names are forbidden except
   * in certain documented contexts. The map keys, represented as UTF-8, must
   * not exceed 1,500 bytes and cannot be empty.
   * </pre>
   *
   * <code>map&lt;string, .google.events.cloud.firestore.v1.Value&gt; fields = 1;</code>
   */
  private java.util.Map<java.lang.String, google.events.cloud.firestore.v1.Value>
  getMutableFieldsMap() {
    return internalGetMutableFields();
  }

  public static google.events.cloud.firestore.v1.MapValue parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.firestore.v1.MapValue parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.firestore.v1.MapValue parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.firestore.v1.MapValue parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.firestore.v1.MapValue parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.firestore.v1.MapValue parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.firestore.v1.MapValue parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.firestore.v1.MapValue parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.firestore.v1.MapValue parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.firestore.v1.MapValue parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.firestore.v1.MapValue parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.firestore.v1.MapValue parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.cloud.firestore.v1.MapValue prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A map value.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.firestore.v1.MapValue}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.cloud.firestore.v1.MapValue, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.firestore.v1.MapValue)
      google.events.cloud.firestore.v1.MapValueOrBuilder {
    // Construct using google.events.cloud.firestore.v1.MapValue.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    @java.lang.Override

    public int getFieldsCount() {
      return instance.getFieldsMap().size();
    }
    /**
     * <pre>
     * The map's fields.
     * The map keys represent field names. Field names matching the regular
     * expression `__.*__` are reserved. Reserved field names are forbidden except
     * in certain documented contexts. The map keys, represented as UTF-8, must
     * not exceed 1,500 bytes and cannot be empty.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.firestore.v1.Value&gt; fields = 1;</code>
     */
    @java.lang.Override

    public boolean containsFields(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getFieldsMap().containsKey(key);
    }

    public Builder clearFields() {
      copyOnWrite();
      instance.getMutableFieldsMap().clear();
      return this;
    }
    /**
     * <pre>
     * The map's fields.
     * The map keys represent field names. Field names matching the regular
     * expression `__.*__` are reserved. Reserved field names are forbidden except
     * in certain documented contexts. The map keys, represented as UTF-8, must
     * not exceed 1,500 bytes and cannot be empty.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.firestore.v1.Value&gt; fields = 1;</code>
     */

    public Builder removeFields(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableFieldsMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getFieldsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, google.events.cloud.firestore.v1.Value> getFields() {
      return getFieldsMap();
    }
    /**
     * <pre>
     * The map's fields.
     * The map keys represent field names. Field names matching the regular
     * expression `__.*__` are reserved. Reserved field names are forbidden except
     * in certain documented contexts. The map keys, represented as UTF-8, must
     * not exceed 1,500 bytes and cannot be empty.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.firestore.v1.Value&gt; fields = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, google.events.cloud.firestore.v1.Value> getFieldsMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getFieldsMap());
    }
    /**
     * <pre>
     * The map's fields.
     * The map keys represent field names. Field names matching the regular
     * expression `__.*__` are reserved. Reserved field names are forbidden except
     * in certain documented contexts. The map keys, represented as UTF-8, must
     * not exceed 1,500 bytes and cannot be empty.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.firestore.v1.Value&gt; fields = 1;</code>
     */
    @java.lang.Override

    public google.events.cloud.firestore.v1.Value getFieldsOrDefault(
        java.lang.String key,
        google.events.cloud.firestore.v1.Value defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, google.events.cloud.firestore.v1.Value> map =
          instance.getFieldsMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The map's fields.
     * The map keys represent field names. Field names matching the regular
     * expression `__.*__` are reserved. Reserved field names are forbidden except
     * in certain documented contexts. The map keys, represented as UTF-8, must
     * not exceed 1,500 bytes and cannot be empty.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.firestore.v1.Value&gt; fields = 1;</code>
     */
    @java.lang.Override

    public google.events.cloud.firestore.v1.Value getFieldsOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, google.events.cloud.firestore.v1.Value> map =
          instance.getFieldsMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * The map's fields.
     * The map keys represent field names. Field names matching the regular
     * expression `__.*__` are reserved. Reserved field names are forbidden except
     * in certain documented contexts. The map keys, represented as UTF-8, must
     * not exceed 1,500 bytes and cannot be empty.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.firestore.v1.Value&gt; fields = 1;</code>
     */
    public Builder putFields(
        java.lang.String key,
        google.events.cloud.firestore.v1.Value value) {
      java.lang.Class<?> keyClass = key.getClass();
      java.lang.Class<?> valueClass = value.getClass();
      copyOnWrite();
      instance.getMutableFieldsMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * The map's fields.
     * The map keys represent field names. Field names matching the regular
     * expression `__.*__` are reserved. Reserved field names are forbidden except
     * in certain documented contexts. The map keys, represented as UTF-8, must
     * not exceed 1,500 bytes and cannot be empty.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.firestore.v1.Value&gt; fields = 1;</code>
     */
    public Builder putAllFields(
        java.util.Map<java.lang.String, google.events.cloud.firestore.v1.Value> values) {
      copyOnWrite();
      instance.getMutableFieldsMap().putAll(values);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.firestore.v1.MapValue)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.cloud.firestore.v1.MapValue();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "fields_",
            FieldsDefaultEntryHolder.defaultEntry,
          };
          java.lang.String info =
              "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u00012";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.cloud.firestore.v1.MapValue> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.cloud.firestore.v1.MapValue.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.cloud.firestore.v1.MapValue>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.cloud.firestore.v1.MapValue)
  private static final google.events.cloud.firestore.v1.MapValue DEFAULT_INSTANCE;
  static {
    MapValue defaultInstance = new MapValue();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      MapValue.class, defaultInstance);
  }

  public static google.events.cloud.firestore.v1.MapValue getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<MapValue> PARSER;

  public static com.google.protobuf.Parser<MapValue> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

