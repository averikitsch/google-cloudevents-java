// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/cloudbuild/v1/data.proto

package google.events.cloud.cloudbuild.v1;

/**
 * <pre>
 * An image built by the pipeline.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.cloudbuild.v1.BuiltImage}
 */
public  final class BuiltImage extends
    com.google.protobuf.GeneratedMessageLite<
        BuiltImage, BuiltImage.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.cloudbuild.v1.BuiltImage)
    BuiltImageOrBuilder {
  private BuiltImage() {
    name_ = "";
    digest_ = "";
  }
  public static final int NAME_FIELD_NUMBER = 1;
  private java.lang.String name_;
  /**
   * <pre>
   * Name used to push the container image to Google Container Registry, as
   * presented to `docker push`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <pre>
   * Name used to push the container image to Google Container Registry, as
   * presented to `docker push`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <pre>
   * Name used to push the container image to Google Container Registry, as
   * presented to `docker push`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @param value The name to set.
   */
  private void setName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    name_ = value;
  }
  /**
   * <pre>
   * Name used to push the container image to Google Container Registry, as
   * presented to `docker push`.
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  private void clearName() {
    
    name_ = getDefaultInstance().getName();
  }
  /**
   * <pre>
   * Name used to push the container image to Google Container Registry, as
   * presented to `docker push`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @param value The bytes for name to set.
   */
  private void setNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    name_ = value.toStringUtf8();
    
  }

  public static final int DIGEST_FIELD_NUMBER = 3;
  private java.lang.String digest_;
  /**
   * <pre>
   * Docker Registry 2.0 digest.
   * </pre>
   *
   * <code>string digest = 3;</code>
   * @return The digest.
   */
  @java.lang.Override
  public java.lang.String getDigest() {
    return digest_;
  }
  /**
   * <pre>
   * Docker Registry 2.0 digest.
   * </pre>
   *
   * <code>string digest = 3;</code>
   * @return The bytes for digest.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDigestBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(digest_);
  }
  /**
   * <pre>
   * Docker Registry 2.0 digest.
   * </pre>
   *
   * <code>string digest = 3;</code>
   * @param value The digest to set.
   */
  private void setDigest(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    digest_ = value;
  }
  /**
   * <pre>
   * Docker Registry 2.0 digest.
   * </pre>
   *
   * <code>string digest = 3;</code>
   */
  private void clearDigest() {
    
    digest_ = getDefaultInstance().getDigest();
  }
  /**
   * <pre>
   * Docker Registry 2.0 digest.
   * </pre>
   *
   * <code>string digest = 3;</code>
   * @param value The bytes for digest to set.
   */
  private void setDigestBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    digest_ = value.toStringUtf8();
    
  }

  public static final int PUSH_TIMING_FIELD_NUMBER = 4;
  private google.events.cloud.cloudbuild.v1.TimeSpan pushTiming_;
  /**
   * <pre>
   * Stores timing information for pushing the specified image.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.TimeSpan push_timing = 4;</code>
   */
  @java.lang.Override
  public boolean hasPushTiming() {
    return pushTiming_ != null;
  }
  /**
   * <pre>
   * Stores timing information for pushing the specified image.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.TimeSpan push_timing = 4;</code>
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.TimeSpan getPushTiming() {
    return pushTiming_ == null ? google.events.cloud.cloudbuild.v1.TimeSpan.getDefaultInstance() : pushTiming_;
  }
  /**
   * <pre>
   * Stores timing information for pushing the specified image.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.TimeSpan push_timing = 4;</code>
   */
  private void setPushTiming(google.events.cloud.cloudbuild.v1.TimeSpan value) {
    value.getClass();
  pushTiming_ = value;
    
    }
  /**
   * <pre>
   * Stores timing information for pushing the specified image.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.TimeSpan push_timing = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergePushTiming(google.events.cloud.cloudbuild.v1.TimeSpan value) {
    value.getClass();
  if (pushTiming_ != null &&
        pushTiming_ != google.events.cloud.cloudbuild.v1.TimeSpan.getDefaultInstance()) {
      pushTiming_ =
        google.events.cloud.cloudbuild.v1.TimeSpan.newBuilder(pushTiming_).mergeFrom(value).buildPartial();
    } else {
      pushTiming_ = value;
    }
    
  }
  /**
   * <pre>
   * Stores timing information for pushing the specified image.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.TimeSpan push_timing = 4;</code>
   */
  private void clearPushTiming() {  pushTiming_ = null;
    
  }

  public static google.events.cloud.cloudbuild.v1.BuiltImage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.cloudbuild.v1.BuiltImage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuiltImage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.cloudbuild.v1.BuiltImage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuiltImage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.cloudbuild.v1.BuiltImage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuiltImage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.cloudbuild.v1.BuiltImage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuiltImage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.cloudbuild.v1.BuiltImage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuiltImage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.cloudbuild.v1.BuiltImage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.cloud.cloudbuild.v1.BuiltImage prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * An image built by the pipeline.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.cloudbuild.v1.BuiltImage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.cloud.cloudbuild.v1.BuiltImage, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.cloudbuild.v1.BuiltImage)
      google.events.cloud.cloudbuild.v1.BuiltImageOrBuilder {
    // Construct using google.events.cloud.cloudbuild.v1.BuiltImage.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Name used to push the container image to Google Container Registry, as
     * presented to `docker push`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <pre>
     * Name used to push the container image to Google Container Registry, as
     * presented to `docker push`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <pre>
     * Name used to push the container image to Google Container Registry, as
     * presented to `docker push`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <pre>
     * Name used to push the container image to Google Container Registry, as
     * presented to `docker push`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <pre>
     * Name used to push the container image to Google Container Registry, as
     * presented to `docker push`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Docker Registry 2.0 digest.
     * </pre>
     *
     * <code>string digest = 3;</code>
     * @return The digest.
     */
    @java.lang.Override
    public java.lang.String getDigest() {
      return instance.getDigest();
    }
    /**
     * <pre>
     * Docker Registry 2.0 digest.
     * </pre>
     *
     * <code>string digest = 3;</code>
     * @return The bytes for digest.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDigestBytes() {
      return instance.getDigestBytes();
    }
    /**
     * <pre>
     * Docker Registry 2.0 digest.
     * </pre>
     *
     * <code>string digest = 3;</code>
     * @param value The digest to set.
     * @return This builder for chaining.
     */
    public Builder setDigest(
        java.lang.String value) {
      copyOnWrite();
      instance.setDigest(value);
      return this;
    }
    /**
     * <pre>
     * Docker Registry 2.0 digest.
     * </pre>
     *
     * <code>string digest = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearDigest() {
      copyOnWrite();
      instance.clearDigest();
      return this;
    }
    /**
     * <pre>
     * Docker Registry 2.0 digest.
     * </pre>
     *
     * <code>string digest = 3;</code>
     * @param value The bytes for digest to set.
     * @return This builder for chaining.
     */
    public Builder setDigestBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDigestBytes(value);
      return this;
    }

    /**
     * <pre>
     * Stores timing information for pushing the specified image.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.TimeSpan push_timing = 4;</code>
     */
    @java.lang.Override
    public boolean hasPushTiming() {
      return instance.hasPushTiming();
    }
    /**
     * <pre>
     * Stores timing information for pushing the specified image.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.TimeSpan push_timing = 4;</code>
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.TimeSpan getPushTiming() {
      return instance.getPushTiming();
    }
    /**
     * <pre>
     * Stores timing information for pushing the specified image.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.TimeSpan push_timing = 4;</code>
     */
    public Builder setPushTiming(google.events.cloud.cloudbuild.v1.TimeSpan value) {
      copyOnWrite();
      instance.setPushTiming(value);
      return this;
      }
    /**
     * <pre>
     * Stores timing information for pushing the specified image.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.TimeSpan push_timing = 4;</code>
     */
    public Builder setPushTiming(
        google.events.cloud.cloudbuild.v1.TimeSpan.Builder builderForValue) {
      copyOnWrite();
      instance.setPushTiming(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Stores timing information for pushing the specified image.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.TimeSpan push_timing = 4;</code>
     */
    public Builder mergePushTiming(google.events.cloud.cloudbuild.v1.TimeSpan value) {
      copyOnWrite();
      instance.mergePushTiming(value);
      return this;
    }
    /**
     * <pre>
     * Stores timing information for pushing the specified image.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.TimeSpan push_timing = 4;</code>
     */
    public Builder clearPushTiming() {  copyOnWrite();
      instance.clearPushTiming();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.cloudbuild.v1.BuiltImage)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.cloud.cloudbuild.v1.BuiltImage();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "name_",
            "digest_",
            "pushTiming_",
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0004\u0003\u0000\u0000\u0000\u0001\u0208\u0003\u0208" +
              "\u0004\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.cloud.cloudbuild.v1.BuiltImage> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.cloud.cloudbuild.v1.BuiltImage.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.cloud.cloudbuild.v1.BuiltImage>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.cloud.cloudbuild.v1.BuiltImage)
  private static final google.events.cloud.cloudbuild.v1.BuiltImage DEFAULT_INSTANCE;
  static {
    BuiltImage defaultInstance = new BuiltImage();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      BuiltImage.class, defaultInstance);
  }

  public static google.events.cloud.cloudbuild.v1.BuiltImage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<BuiltImage> PARSER;

  public static com.google.protobuf.Parser<BuiltImage> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

