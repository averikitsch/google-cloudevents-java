// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/cloudbuild/v1/data.proto

package google.events.cloud.cloudbuild.v1;

/**
 * <pre>
 * Location of the source in a Google Cloud Source Repository.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.cloudbuild.v1.RepoSource}
 */
public  final class RepoSource extends
    com.google.protobuf.GeneratedMessageLite<
        RepoSource, RepoSource.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.cloudbuild.v1.RepoSource)
    RepoSourceOrBuilder {
  private RepoSource() {
    projectId_ = "";
    repoName_ = "";
    dir_ = "";
  }
  private int revisionCase_ = 0;
  private java.lang.Object revision_;
  public enum RevisionCase {
    BRANCH_NAME(3),
    TAG_NAME(4),
    COMMIT_SHA(5),
    REVISION_NOT_SET(0);
    private final int value;
    private RevisionCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RevisionCase valueOf(int value) {
      return forNumber(value);
    }

    public static RevisionCase forNumber(int value) {
      switch (value) {
        case 3: return BRANCH_NAME;
        case 4: return TAG_NAME;
        case 5: return COMMIT_SHA;
        case 0: return REVISION_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public RevisionCase
  getRevisionCase() {
    return RevisionCase.forNumber(
        revisionCase_);
  }

  private void clearRevision() {
    revisionCase_ = 0;
    revision_ = null;
  }

  public static final int PROJECT_ID_FIELD_NUMBER = 1;
  private java.lang.String projectId_;
  /**
   * <pre>
   * ID of the project that owns the Cloud Source Repository.
   * </pre>
   *
   * <code>string project_id = 1;</code>
   * @return The projectId.
   */
  @java.lang.Override
  public java.lang.String getProjectId() {
    return projectId_;
  }
  /**
   * <pre>
   * ID of the project that owns the Cloud Source Repository.
   * </pre>
   *
   * <code>string project_id = 1;</code>
   * @return The bytes for projectId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getProjectIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(projectId_);
  }
  /**
   * <pre>
   * ID of the project that owns the Cloud Source Repository.
   * </pre>
   *
   * <code>string project_id = 1;</code>
   * @param value The projectId to set.
   */
  private void setProjectId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    projectId_ = value;
  }
  /**
   * <pre>
   * ID of the project that owns the Cloud Source Repository.
   * </pre>
   *
   * <code>string project_id = 1;</code>
   */
  private void clearProjectId() {
    
    projectId_ = getDefaultInstance().getProjectId();
  }
  /**
   * <pre>
   * ID of the project that owns the Cloud Source Repository.
   * </pre>
   *
   * <code>string project_id = 1;</code>
   * @param value The bytes for projectId to set.
   */
  private void setProjectIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    projectId_ = value.toStringUtf8();
    
  }

  public static final int REPO_NAME_FIELD_NUMBER = 2;
  private java.lang.String repoName_;
  /**
   * <pre>
   * Name of the Cloud Source Repository.
   * </pre>
   *
   * <code>string repo_name = 2;</code>
   * @return The repoName.
   */
  @java.lang.Override
  public java.lang.String getRepoName() {
    return repoName_;
  }
  /**
   * <pre>
   * Name of the Cloud Source Repository.
   * </pre>
   *
   * <code>string repo_name = 2;</code>
   * @return The bytes for repoName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getRepoNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(repoName_);
  }
  /**
   * <pre>
   * Name of the Cloud Source Repository.
   * </pre>
   *
   * <code>string repo_name = 2;</code>
   * @param value The repoName to set.
   */
  private void setRepoName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    repoName_ = value;
  }
  /**
   * <pre>
   * Name of the Cloud Source Repository.
   * </pre>
   *
   * <code>string repo_name = 2;</code>
   */
  private void clearRepoName() {
    
    repoName_ = getDefaultInstance().getRepoName();
  }
  /**
   * <pre>
   * Name of the Cloud Source Repository.
   * </pre>
   *
   * <code>string repo_name = 2;</code>
   * @param value The bytes for repoName to set.
   */
  private void setRepoNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    repoName_ = value.toStringUtf8();
    
  }

  public static final int BRANCH_NAME_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Regex matching branches to build.
   * The syntax of the regular expressions accepted is the syntax accepted by
   * RE2 and described at https://github.com/google/re2/wiki/Syntax
   * </pre>
   *
   * <code>string branch_name = 3;</code>
   * @return Whether the branchName field is set.
   */
  @java.lang.Override
  public boolean hasBranchName() {
    return revisionCase_ == 3;
  }
  /**
   * <pre>
   * Regex matching branches to build.
   * The syntax of the regular expressions accepted is the syntax accepted by
   * RE2 and described at https://github.com/google/re2/wiki/Syntax
   * </pre>
   *
   * <code>string branch_name = 3;</code>
   * @return The branchName.
   */
  @java.lang.Override
  public java.lang.String getBranchName() {
    java.lang.String ref = "";
    if (revisionCase_ == 3) {
      ref = (java.lang.String) revision_;
    }
    return ref;
  }
  /**
   * <pre>
   * Regex matching branches to build.
   * The syntax of the regular expressions accepted is the syntax accepted by
   * RE2 and described at https://github.com/google/re2/wiki/Syntax
   * </pre>
   *
   * <code>string branch_name = 3;</code>
   * @return The bytes for branchName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBranchNameBytes() {
    java.lang.String ref = "";
    if (revisionCase_ == 3) {
      ref = (java.lang.String) revision_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Regex matching branches to build.
   * The syntax of the regular expressions accepted is the syntax accepted by
   * RE2 and described at https://github.com/google/re2/wiki/Syntax
   * </pre>
   *
   * <code>string branch_name = 3;</code>
   * @param value The branchName to set.
   */
  private void setBranchName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  revisionCase_ = 3;
    revision_ = value;
  }
  /**
   * <pre>
   * Regex matching branches to build.
   * The syntax of the regular expressions accepted is the syntax accepted by
   * RE2 and described at https://github.com/google/re2/wiki/Syntax
   * </pre>
   *
   * <code>string branch_name = 3;</code>
   */
  private void clearBranchName() {
    if (revisionCase_ == 3) {
      revisionCase_ = 0;
      revision_ = null;
    }
  }
  /**
   * <pre>
   * Regex matching branches to build.
   * The syntax of the regular expressions accepted is the syntax accepted by
   * RE2 and described at https://github.com/google/re2/wiki/Syntax
   * </pre>
   *
   * <code>string branch_name = 3;</code>
   * @param value The bytes for branchName to set.
   */
  private void setBranchNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    revision_ = value.toStringUtf8();
    revisionCase_ = 3;
  }

  public static final int TAG_NAME_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Regex matching tags to build.
   * The syntax of the regular expressions accepted is the syntax accepted by
   * RE2 and described at https://github.com/google/re2/wiki/Syntax
   * </pre>
   *
   * <code>string tag_name = 4;</code>
   * @return Whether the tagName field is set.
   */
  @java.lang.Override
  public boolean hasTagName() {
    return revisionCase_ == 4;
  }
  /**
   * <pre>
   * Regex matching tags to build.
   * The syntax of the regular expressions accepted is the syntax accepted by
   * RE2 and described at https://github.com/google/re2/wiki/Syntax
   * </pre>
   *
   * <code>string tag_name = 4;</code>
   * @return The tagName.
   */
  @java.lang.Override
  public java.lang.String getTagName() {
    java.lang.String ref = "";
    if (revisionCase_ == 4) {
      ref = (java.lang.String) revision_;
    }
    return ref;
  }
  /**
   * <pre>
   * Regex matching tags to build.
   * The syntax of the regular expressions accepted is the syntax accepted by
   * RE2 and described at https://github.com/google/re2/wiki/Syntax
   * </pre>
   *
   * <code>string tag_name = 4;</code>
   * @return The bytes for tagName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTagNameBytes() {
    java.lang.String ref = "";
    if (revisionCase_ == 4) {
      ref = (java.lang.String) revision_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Regex matching tags to build.
   * The syntax of the regular expressions accepted is the syntax accepted by
   * RE2 and described at https://github.com/google/re2/wiki/Syntax
   * </pre>
   *
   * <code>string tag_name = 4;</code>
   * @param value The tagName to set.
   */
  private void setTagName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  revisionCase_ = 4;
    revision_ = value;
  }
  /**
   * <pre>
   * Regex matching tags to build.
   * The syntax of the regular expressions accepted is the syntax accepted by
   * RE2 and described at https://github.com/google/re2/wiki/Syntax
   * </pre>
   *
   * <code>string tag_name = 4;</code>
   */
  private void clearTagName() {
    if (revisionCase_ == 4) {
      revisionCase_ = 0;
      revision_ = null;
    }
  }
  /**
   * <pre>
   * Regex matching tags to build.
   * The syntax of the regular expressions accepted is the syntax accepted by
   * RE2 and described at https://github.com/google/re2/wiki/Syntax
   * </pre>
   *
   * <code>string tag_name = 4;</code>
   * @param value The bytes for tagName to set.
   */
  private void setTagNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    revision_ = value.toStringUtf8();
    revisionCase_ = 4;
  }

  public static final int COMMIT_SHA_FIELD_NUMBER = 5;
  /**
   * <pre>
   * Explicit commit SHA to build.
   * </pre>
   *
   * <code>string commit_sha = 5;</code>
   * @return Whether the commitSha field is set.
   */
  @java.lang.Override
  public boolean hasCommitSha() {
    return revisionCase_ == 5;
  }
  /**
   * <pre>
   * Explicit commit SHA to build.
   * </pre>
   *
   * <code>string commit_sha = 5;</code>
   * @return The commitSha.
   */
  @java.lang.Override
  public java.lang.String getCommitSha() {
    java.lang.String ref = "";
    if (revisionCase_ == 5) {
      ref = (java.lang.String) revision_;
    }
    return ref;
  }
  /**
   * <pre>
   * Explicit commit SHA to build.
   * </pre>
   *
   * <code>string commit_sha = 5;</code>
   * @return The bytes for commitSha.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCommitShaBytes() {
    java.lang.String ref = "";
    if (revisionCase_ == 5) {
      ref = (java.lang.String) revision_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Explicit commit SHA to build.
   * </pre>
   *
   * <code>string commit_sha = 5;</code>
   * @param value The commitSha to set.
   */
  private void setCommitSha(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  revisionCase_ = 5;
    revision_ = value;
  }
  /**
   * <pre>
   * Explicit commit SHA to build.
   * </pre>
   *
   * <code>string commit_sha = 5;</code>
   */
  private void clearCommitSha() {
    if (revisionCase_ == 5) {
      revisionCase_ = 0;
      revision_ = null;
    }
  }
  /**
   * <pre>
   * Explicit commit SHA to build.
   * </pre>
   *
   * <code>string commit_sha = 5;</code>
   * @param value The bytes for commitSha to set.
   */
  private void setCommitShaBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    revision_ = value.toStringUtf8();
    revisionCase_ = 5;
  }

  public static final int DIR_FIELD_NUMBER = 7;
  private java.lang.String dir_;
  /**
   * <pre>
   * Directory, relative to the source root, in which to run the build.
   * This must be a relative path. If a step's `dir` is specified and is an
   * absolute path, this value is ignored for that step's execution.
   * </pre>
   *
   * <code>string dir = 7;</code>
   * @return The dir.
   */
  @java.lang.Override
  public java.lang.String getDir() {
    return dir_;
  }
  /**
   * <pre>
   * Directory, relative to the source root, in which to run the build.
   * This must be a relative path. If a step's `dir` is specified and is an
   * absolute path, this value is ignored for that step's execution.
   * </pre>
   *
   * <code>string dir = 7;</code>
   * @return The bytes for dir.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDirBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(dir_);
  }
  /**
   * <pre>
   * Directory, relative to the source root, in which to run the build.
   * This must be a relative path. If a step's `dir` is specified and is an
   * absolute path, this value is ignored for that step's execution.
   * </pre>
   *
   * <code>string dir = 7;</code>
   * @param value The dir to set.
   */
  private void setDir(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    dir_ = value;
  }
  /**
   * <pre>
   * Directory, relative to the source root, in which to run the build.
   * This must be a relative path. If a step's `dir` is specified and is an
   * absolute path, this value is ignored for that step's execution.
   * </pre>
   *
   * <code>string dir = 7;</code>
   */
  private void clearDir() {
    
    dir_ = getDefaultInstance().getDir();
  }
  /**
   * <pre>
   * Directory, relative to the source root, in which to run the build.
   * This must be a relative path. If a step's `dir` is specified and is an
   * absolute path, this value is ignored for that step's execution.
   * </pre>
   *
   * <code>string dir = 7;</code>
   * @param value The bytes for dir to set.
   */
  private void setDirBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    dir_ = value.toStringUtf8();
    
  }

  public static final int INVERT_REGEX_FIELD_NUMBER = 8;
  private boolean invertRegex_;
  /**
   * <pre>
   * Only trigger a build if the revision regex does NOT match the revision
   * regex.
   * </pre>
   *
   * <code>bool invert_regex = 8;</code>
   * @return The invertRegex.
   */
  @java.lang.Override
  public boolean getInvertRegex() {
    return invertRegex_;
  }
  /**
   * <pre>
   * Only trigger a build if the revision regex does NOT match the revision
   * regex.
   * </pre>
   *
   * <code>bool invert_regex = 8;</code>
   * @param value The invertRegex to set.
   */
  private void setInvertRegex(boolean value) {
    
    invertRegex_ = value;
  }
  /**
   * <pre>
   * Only trigger a build if the revision regex does NOT match the revision
   * regex.
   * </pre>
   *
   * <code>bool invert_regex = 8;</code>
   */
  private void clearInvertRegex() {
    
    invertRegex_ = false;
  }

  public static final int SUBSTITUTIONS_FIELD_NUMBER = 9;
  private static final class SubstitutionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.String> substitutions_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetSubstitutions() {
    return substitutions_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetMutableSubstitutions() {
    if (!substitutions_.isMutable()) {
      substitutions_ = substitutions_.mutableCopy();
    }
    return substitutions_;
  }
  @java.lang.Override

  public int getSubstitutionsCount() {
    return internalGetSubstitutions().size();
  }
  /**
   * <pre>
   * Substitutions to use in a triggered build.
   * Should only be used with RunBuildTrigger
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 9;</code>
   */
  @java.lang.Override

  public boolean containsSubstitutions(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetSubstitutions().containsKey(key);
  }
  /**
   * Use {@link #getSubstitutionsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getSubstitutions() {
    return getSubstitutionsMap();
  }
  /**
   * <pre>
   * Substitutions to use in a triggered build.
   * Should only be used with RunBuildTrigger
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 9;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getSubstitutionsMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetSubstitutions());
  }
  /**
   * <pre>
   * Substitutions to use in a triggered build.
   * Should only be used with RunBuildTrigger
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 9;</code>
   */
  @java.lang.Override

  public java.lang.String getSubstitutionsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetSubstitutions();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Substitutions to use in a triggered build.
   * Should only be used with RunBuildTrigger
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 9;</code>
   */
  @java.lang.Override

  public java.lang.String getSubstitutionsOrThrow(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetSubstitutions();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * Substitutions to use in a triggered build.
   * Should only be used with RunBuildTrigger
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 9;</code>
   */
  private java.util.Map<java.lang.String, java.lang.String>
  getMutableSubstitutionsMap() {
    return internalGetMutableSubstitutions();
  }

  public static google.events.cloud.cloudbuild.v1.RepoSource parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.cloudbuild.v1.RepoSource parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.RepoSource parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.cloudbuild.v1.RepoSource parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.RepoSource parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.cloudbuild.v1.RepoSource parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.RepoSource parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.cloudbuild.v1.RepoSource parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.RepoSource parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.cloudbuild.v1.RepoSource parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.RepoSource parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.cloudbuild.v1.RepoSource parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.cloud.cloudbuild.v1.RepoSource prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Location of the source in a Google Cloud Source Repository.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.cloudbuild.v1.RepoSource}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.cloud.cloudbuild.v1.RepoSource, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.cloudbuild.v1.RepoSource)
      google.events.cloud.cloudbuild.v1.RepoSourceOrBuilder {
    // Construct using google.events.cloud.cloudbuild.v1.RepoSource.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public RevisionCase
        getRevisionCase() {
      return instance.getRevisionCase();
    }

    public Builder clearRevision() {
      copyOnWrite();
      instance.clearRevision();
      return this;
    }


    /**
     * <pre>
     * ID of the project that owns the Cloud Source Repository.
     * </pre>
     *
     * <code>string project_id = 1;</code>
     * @return The projectId.
     */
    @java.lang.Override
    public java.lang.String getProjectId() {
      return instance.getProjectId();
    }
    /**
     * <pre>
     * ID of the project that owns the Cloud Source Repository.
     * </pre>
     *
     * <code>string project_id = 1;</code>
     * @return The bytes for projectId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProjectIdBytes() {
      return instance.getProjectIdBytes();
    }
    /**
     * <pre>
     * ID of the project that owns the Cloud Source Repository.
     * </pre>
     *
     * <code>string project_id = 1;</code>
     * @param value The projectId to set.
     * @return This builder for chaining.
     */
    public Builder setProjectId(
        java.lang.String value) {
      copyOnWrite();
      instance.setProjectId(value);
      return this;
    }
    /**
     * <pre>
     * ID of the project that owns the Cloud Source Repository.
     * </pre>
     *
     * <code>string project_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearProjectId() {
      copyOnWrite();
      instance.clearProjectId();
      return this;
    }
    /**
     * <pre>
     * ID of the project that owns the Cloud Source Repository.
     * </pre>
     *
     * <code>string project_id = 1;</code>
     * @param value The bytes for projectId to set.
     * @return This builder for chaining.
     */
    public Builder setProjectIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setProjectIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Name of the Cloud Source Repository.
     * </pre>
     *
     * <code>string repo_name = 2;</code>
     * @return The repoName.
     */
    @java.lang.Override
    public java.lang.String getRepoName() {
      return instance.getRepoName();
    }
    /**
     * <pre>
     * Name of the Cloud Source Repository.
     * </pre>
     *
     * <code>string repo_name = 2;</code>
     * @return The bytes for repoName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRepoNameBytes() {
      return instance.getRepoNameBytes();
    }
    /**
     * <pre>
     * Name of the Cloud Source Repository.
     * </pre>
     *
     * <code>string repo_name = 2;</code>
     * @param value The repoName to set.
     * @return This builder for chaining.
     */
    public Builder setRepoName(
        java.lang.String value) {
      copyOnWrite();
      instance.setRepoName(value);
      return this;
    }
    /**
     * <pre>
     * Name of the Cloud Source Repository.
     * </pre>
     *
     * <code>string repo_name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearRepoName() {
      copyOnWrite();
      instance.clearRepoName();
      return this;
    }
    /**
     * <pre>
     * Name of the Cloud Source Repository.
     * </pre>
     *
     * <code>string repo_name = 2;</code>
     * @param value The bytes for repoName to set.
     * @return This builder for chaining.
     */
    public Builder setRepoNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setRepoNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Regex matching branches to build.
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     * </pre>
     *
     * <code>string branch_name = 3;</code>
     * @return Whether the branchName field is set.
     */
    @java.lang.Override
    public boolean hasBranchName() {
      return instance.hasBranchName();
    }
    /**
     * <pre>
     * Regex matching branches to build.
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     * </pre>
     *
     * <code>string branch_name = 3;</code>
     * @return The branchName.
     */
    @java.lang.Override
    public java.lang.String getBranchName() {
      return instance.getBranchName();
    }
    /**
     * <pre>
     * Regex matching branches to build.
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     * </pre>
     *
     * <code>string branch_name = 3;</code>
     * @return The bytes for branchName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBranchNameBytes() {
      return instance.getBranchNameBytes();
    }
    /**
     * <pre>
     * Regex matching branches to build.
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     * </pre>
     *
     * <code>string branch_name = 3;</code>
     * @param value The branchName to set.
     * @return This builder for chaining.
     */
    public Builder setBranchName(
        java.lang.String value) {
      copyOnWrite();
      instance.setBranchName(value);
      return this;
    }
    /**
     * <pre>
     * Regex matching branches to build.
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     * </pre>
     *
     * <code>string branch_name = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearBranchName() {
      copyOnWrite();
      instance.clearBranchName();
      return this;
    }
    /**
     * <pre>
     * Regex matching branches to build.
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     * </pre>
     *
     * <code>string branch_name = 3;</code>
     * @param value The bytes for branchName to set.
     * @return This builder for chaining.
     */
    public Builder setBranchNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBranchNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Regex matching tags to build.
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     * </pre>
     *
     * <code>string tag_name = 4;</code>
     * @return Whether the tagName field is set.
     */
    @java.lang.Override
    public boolean hasTagName() {
      return instance.hasTagName();
    }
    /**
     * <pre>
     * Regex matching tags to build.
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     * </pre>
     *
     * <code>string tag_name = 4;</code>
     * @return The tagName.
     */
    @java.lang.Override
    public java.lang.String getTagName() {
      return instance.getTagName();
    }
    /**
     * <pre>
     * Regex matching tags to build.
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     * </pre>
     *
     * <code>string tag_name = 4;</code>
     * @return The bytes for tagName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTagNameBytes() {
      return instance.getTagNameBytes();
    }
    /**
     * <pre>
     * Regex matching tags to build.
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     * </pre>
     *
     * <code>string tag_name = 4;</code>
     * @param value The tagName to set.
     * @return This builder for chaining.
     */
    public Builder setTagName(
        java.lang.String value) {
      copyOnWrite();
      instance.setTagName(value);
      return this;
    }
    /**
     * <pre>
     * Regex matching tags to build.
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     * </pre>
     *
     * <code>string tag_name = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTagName() {
      copyOnWrite();
      instance.clearTagName();
      return this;
    }
    /**
     * <pre>
     * Regex matching tags to build.
     * The syntax of the regular expressions accepted is the syntax accepted by
     * RE2 and described at https://github.com/google/re2/wiki/Syntax
     * </pre>
     *
     * <code>string tag_name = 4;</code>
     * @param value The bytes for tagName to set.
     * @return This builder for chaining.
     */
    public Builder setTagNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setTagNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Explicit commit SHA to build.
     * </pre>
     *
     * <code>string commit_sha = 5;</code>
     * @return Whether the commitSha field is set.
     */
    @java.lang.Override
    public boolean hasCommitSha() {
      return instance.hasCommitSha();
    }
    /**
     * <pre>
     * Explicit commit SHA to build.
     * </pre>
     *
     * <code>string commit_sha = 5;</code>
     * @return The commitSha.
     */
    @java.lang.Override
    public java.lang.String getCommitSha() {
      return instance.getCommitSha();
    }
    /**
     * <pre>
     * Explicit commit SHA to build.
     * </pre>
     *
     * <code>string commit_sha = 5;</code>
     * @return The bytes for commitSha.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCommitShaBytes() {
      return instance.getCommitShaBytes();
    }
    /**
     * <pre>
     * Explicit commit SHA to build.
     * </pre>
     *
     * <code>string commit_sha = 5;</code>
     * @param value The commitSha to set.
     * @return This builder for chaining.
     */
    public Builder setCommitSha(
        java.lang.String value) {
      copyOnWrite();
      instance.setCommitSha(value);
      return this;
    }
    /**
     * <pre>
     * Explicit commit SHA to build.
     * </pre>
     *
     * <code>string commit_sha = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearCommitSha() {
      copyOnWrite();
      instance.clearCommitSha();
      return this;
    }
    /**
     * <pre>
     * Explicit commit SHA to build.
     * </pre>
     *
     * <code>string commit_sha = 5;</code>
     * @param value The bytes for commitSha to set.
     * @return This builder for chaining.
     */
    public Builder setCommitShaBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCommitShaBytes(value);
      return this;
    }

    /**
     * <pre>
     * Directory, relative to the source root, in which to run the build.
     * This must be a relative path. If a step's `dir` is specified and is an
     * absolute path, this value is ignored for that step's execution.
     * </pre>
     *
     * <code>string dir = 7;</code>
     * @return The dir.
     */
    @java.lang.Override
    public java.lang.String getDir() {
      return instance.getDir();
    }
    /**
     * <pre>
     * Directory, relative to the source root, in which to run the build.
     * This must be a relative path. If a step's `dir` is specified and is an
     * absolute path, this value is ignored for that step's execution.
     * </pre>
     *
     * <code>string dir = 7;</code>
     * @return The bytes for dir.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDirBytes() {
      return instance.getDirBytes();
    }
    /**
     * <pre>
     * Directory, relative to the source root, in which to run the build.
     * This must be a relative path. If a step's `dir` is specified and is an
     * absolute path, this value is ignored for that step's execution.
     * </pre>
     *
     * <code>string dir = 7;</code>
     * @param value The dir to set.
     * @return This builder for chaining.
     */
    public Builder setDir(
        java.lang.String value) {
      copyOnWrite();
      instance.setDir(value);
      return this;
    }
    /**
     * <pre>
     * Directory, relative to the source root, in which to run the build.
     * This must be a relative path. If a step's `dir` is specified and is an
     * absolute path, this value is ignored for that step's execution.
     * </pre>
     *
     * <code>string dir = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearDir() {
      copyOnWrite();
      instance.clearDir();
      return this;
    }
    /**
     * <pre>
     * Directory, relative to the source root, in which to run the build.
     * This must be a relative path. If a step's `dir` is specified and is an
     * absolute path, this value is ignored for that step's execution.
     * </pre>
     *
     * <code>string dir = 7;</code>
     * @param value The bytes for dir to set.
     * @return This builder for chaining.
     */
    public Builder setDirBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDirBytes(value);
      return this;
    }

    /**
     * <pre>
     * Only trigger a build if the revision regex does NOT match the revision
     * regex.
     * </pre>
     *
     * <code>bool invert_regex = 8;</code>
     * @return The invertRegex.
     */
    @java.lang.Override
    public boolean getInvertRegex() {
      return instance.getInvertRegex();
    }
    /**
     * <pre>
     * Only trigger a build if the revision regex does NOT match the revision
     * regex.
     * </pre>
     *
     * <code>bool invert_regex = 8;</code>
     * @param value The invertRegex to set.
     * @return This builder for chaining.
     */
    public Builder setInvertRegex(boolean value) {
      copyOnWrite();
      instance.setInvertRegex(value);
      return this;
    }
    /**
     * <pre>
     * Only trigger a build if the revision regex does NOT match the revision
     * regex.
     * </pre>
     *
     * <code>bool invert_regex = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearInvertRegex() {
      copyOnWrite();
      instance.clearInvertRegex();
      return this;
    }

    @java.lang.Override

    public int getSubstitutionsCount() {
      return instance.getSubstitutionsMap().size();
    }
    /**
     * <pre>
     * Substitutions to use in a triggered build.
     * Should only be used with RunBuildTrigger
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 9;</code>
     */
    @java.lang.Override

    public boolean containsSubstitutions(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getSubstitutionsMap().containsKey(key);
    }

    public Builder clearSubstitutions() {
      copyOnWrite();
      instance.getMutableSubstitutionsMap().clear();
      return this;
    }
    /**
     * <pre>
     * Substitutions to use in a triggered build.
     * Should only be used with RunBuildTrigger
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 9;</code>
     */

    public Builder removeSubstitutions(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableSubstitutionsMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getSubstitutionsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getSubstitutions() {
      return getSubstitutionsMap();
    }
    /**
     * <pre>
     * Substitutions to use in a triggered build.
     * Should only be used with RunBuildTrigger
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 9;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getSubstitutionsMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getSubstitutionsMap());
    }
    /**
     * <pre>
     * Substitutions to use in a triggered build.
     * Should only be used with RunBuildTrigger
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 9;</code>
     */
    @java.lang.Override

    public java.lang.String getSubstitutionsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getSubstitutionsMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Substitutions to use in a triggered build.
     * Should only be used with RunBuildTrigger
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 9;</code>
     */
    @java.lang.Override

    public java.lang.String getSubstitutionsOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getSubstitutionsMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * Substitutions to use in a triggered build.
     * Should only be used with RunBuildTrigger
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 9;</code>
     */
    public Builder putSubstitutions(
        java.lang.String key,
        java.lang.String value) {
      java.lang.Class<?> keyClass = key.getClass();
      java.lang.Class<?> valueClass = value.getClass();
      copyOnWrite();
      instance.getMutableSubstitutionsMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * Substitutions to use in a triggered build.
     * Should only be used with RunBuildTrigger
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 9;</code>
     */
    public Builder putAllSubstitutions(
        java.util.Map<java.lang.String, java.lang.String> values) {
      copyOnWrite();
      instance.getMutableSubstitutionsMap().putAll(values);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.cloudbuild.v1.RepoSource)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.cloud.cloudbuild.v1.RepoSource();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "revision_",
            "revisionCase_",
            "projectId_",
            "repoName_",
            "dir_",
            "invertRegex_",
            "substitutions_",
            SubstitutionsDefaultEntryHolder.defaultEntry,
          };
          java.lang.String info =
              "\u0000\b\u0001\u0000\u0001\t\b\u0001\u0000\u0000\u0001\u0208\u0002\u0208\u0003\u023b" +
              "\u0000\u0004\u023b\u0000\u0005\u023b\u0000\u0007\u0208\b\u0007\t2";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.cloud.cloudbuild.v1.RepoSource> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.cloud.cloudbuild.v1.RepoSource.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.cloud.cloudbuild.v1.RepoSource>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.cloud.cloudbuild.v1.RepoSource)
  private static final google.events.cloud.cloudbuild.v1.RepoSource DEFAULT_INSTANCE;
  static {
    RepoSource defaultInstance = new RepoSource();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      RepoSource.class, defaultInstance);
  }

  public static google.events.cloud.cloudbuild.v1.RepoSource getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<RepoSource> PARSER;

  public static com.google.protobuf.Parser<RepoSource> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

