// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/cloudbuild/v1/data.proto

package google.events.cloud.cloudbuild.v1;

/**
 * <pre>
 * Optional arguments to enable specific features of builds.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.cloudbuild.v1.BuildOptions}
 */
public  final class BuildOptions extends
    com.google.protobuf.GeneratedMessageLite<
        BuildOptions, BuildOptions.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.cloudbuild.v1.BuildOptions)
    BuildOptionsOrBuilder {
  private BuildOptions() {
    sourceProvenanceHash_ = emptyIntList();
    workerPool_ = "";
    env_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    secretEnv_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    volumes_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Specifies the manner in which the build should be verified, if at all.
   * </pre>
   *
   * Protobuf enum {@code google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption}
   */
  public enum VerifyOption
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Not a verifiable build. (default)
     * </pre>
     *
     * <code>NOT_VERIFIED = 0;</code>
     */
    NOT_VERIFIED(0),
    /**
     * <pre>
     * Verified build.
     * </pre>
     *
     * <code>VERIFIED = 1;</code>
     */
    VERIFIED(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Not a verifiable build. (default)
     * </pre>
     *
     * <code>NOT_VERIFIED = 0;</code>
     */
    public static final int NOT_VERIFIED_VALUE = 0;
    /**
     * <pre>
     * Verified build.
     * </pre>
     *
     * <code>VERIFIED = 1;</code>
     */
    public static final int VERIFIED_VALUE = 1;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VerifyOption valueOf(int value) {
      return forNumber(value);
    }

    public static VerifyOption forNumber(int value) {
      switch (value) {
        case 0: return NOT_VERIFIED;
        case 1: return VERIFIED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VerifyOption>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VerifyOption> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VerifyOption>() {
            @java.lang.Override
            public VerifyOption findValueByNumber(int number) {
              return VerifyOption.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return VerifyOptionVerifier.INSTANCE;
    }

    private static final class VerifyOptionVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new VerifyOptionVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return VerifyOption.forNumber(number) != null;
            }
          };

    private final int value;

    private VerifyOption(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption)
  }

  /**
   * <pre>
   * Supported VM sizes.
   * </pre>
   *
   * Protobuf enum {@code google.events.cloud.cloudbuild.v1.BuildOptions.MachineType}
   */
  public enum MachineType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Standard machine type.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <pre>
     * Highcpu machine with 8 CPUs.
     * </pre>
     *
     * <code>N1_HIGHCPU_8 = 1;</code>
     */
    N1_HIGHCPU_8(1),
    /**
     * <pre>
     * Highcpu machine with 32 CPUs.
     * </pre>
     *
     * <code>N1_HIGHCPU_32 = 2;</code>
     */
    N1_HIGHCPU_32(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Standard machine type.
     * </pre>
     *
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Highcpu machine with 8 CPUs.
     * </pre>
     *
     * <code>N1_HIGHCPU_8 = 1;</code>
     */
    public static final int N1_HIGHCPU_8_VALUE = 1;
    /**
     * <pre>
     * Highcpu machine with 32 CPUs.
     * </pre>
     *
     * <code>N1_HIGHCPU_32 = 2;</code>
     */
    public static final int N1_HIGHCPU_32_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MachineType valueOf(int value) {
      return forNumber(value);
    }

    public static MachineType forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return N1_HIGHCPU_8;
        case 2: return N1_HIGHCPU_32;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MachineType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MachineType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MachineType>() {
            @java.lang.Override
            public MachineType findValueByNumber(int number) {
              return MachineType.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return MachineTypeVerifier.INSTANCE;
    }

    private static final class MachineTypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new MachineTypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return MachineType.forNumber(number) != null;
            }
          };

    private final int value;

    private MachineType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.events.cloud.cloudbuild.v1.BuildOptions.MachineType)
  }

  /**
   * <pre>
   * Specifies the behavior when there is an error in the substitution checks.
   * </pre>
   *
   * Protobuf enum {@code google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption}
   */
  public enum SubstitutionOption
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Fails the build if error in substitutions checks, like missing
     * a substitution in the template or in the map.
     * </pre>
     *
     * <code>MUST_MATCH = 0;</code>
     */
    MUST_MATCH(0),
    /**
     * <pre>
     * Do not fail the build if error in substitutions checks.
     * </pre>
     *
     * <code>ALLOW_LOOSE = 1;</code>
     */
    ALLOW_LOOSE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Fails the build if error in substitutions checks, like missing
     * a substitution in the template or in the map.
     * </pre>
     *
     * <code>MUST_MATCH = 0;</code>
     */
    public static final int MUST_MATCH_VALUE = 0;
    /**
     * <pre>
     * Do not fail the build if error in substitutions checks.
     * </pre>
     *
     * <code>ALLOW_LOOSE = 1;</code>
     */
    public static final int ALLOW_LOOSE_VALUE = 1;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SubstitutionOption valueOf(int value) {
      return forNumber(value);
    }

    public static SubstitutionOption forNumber(int value) {
      switch (value) {
        case 0: return MUST_MATCH;
        case 1: return ALLOW_LOOSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SubstitutionOption>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SubstitutionOption> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SubstitutionOption>() {
            @java.lang.Override
            public SubstitutionOption findValueByNumber(int number) {
              return SubstitutionOption.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return SubstitutionOptionVerifier.INSTANCE;
    }

    private static final class SubstitutionOptionVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new SubstitutionOptionVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return SubstitutionOption.forNumber(number) != null;
            }
          };

    private final int value;

    private SubstitutionOption(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption)
  }

  /**
   * <pre>
   * Specifies the behavior when writing build logs to Google Cloud Storage.
   * </pre>
   *
   * Protobuf enum {@code google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption}
   */
  public enum LogStreamingOption
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Service may automatically determine build log streaming behavior.
     * </pre>
     *
     * <code>STREAM_DEFAULT = 0;</code>
     */
    STREAM_DEFAULT(0),
    /**
     * <pre>
     * Build logs should be streamed to Google Cloud Storage.
     * </pre>
     *
     * <code>STREAM_ON = 1;</code>
     */
    STREAM_ON(1),
    /**
     * <pre>
     * Build logs should not be streamed to Google Cloud Storage; they will be
     * written when the build is completed.
     * </pre>
     *
     * <code>STREAM_OFF = 2;</code>
     */
    STREAM_OFF(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Service may automatically determine build log streaming behavior.
     * </pre>
     *
     * <code>STREAM_DEFAULT = 0;</code>
     */
    public static final int STREAM_DEFAULT_VALUE = 0;
    /**
     * <pre>
     * Build logs should be streamed to Google Cloud Storage.
     * </pre>
     *
     * <code>STREAM_ON = 1;</code>
     */
    public static final int STREAM_ON_VALUE = 1;
    /**
     * <pre>
     * Build logs should not be streamed to Google Cloud Storage; they will be
     * written when the build is completed.
     * </pre>
     *
     * <code>STREAM_OFF = 2;</code>
     */
    public static final int STREAM_OFF_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LogStreamingOption valueOf(int value) {
      return forNumber(value);
    }

    public static LogStreamingOption forNumber(int value) {
      switch (value) {
        case 0: return STREAM_DEFAULT;
        case 1: return STREAM_ON;
        case 2: return STREAM_OFF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LogStreamingOption>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LogStreamingOption> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LogStreamingOption>() {
            @java.lang.Override
            public LogStreamingOption findValueByNumber(int number) {
              return LogStreamingOption.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return LogStreamingOptionVerifier.INSTANCE;
    }

    private static final class LogStreamingOptionVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new LogStreamingOptionVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return LogStreamingOption.forNumber(number) != null;
            }
          };

    private final int value;

    private LogStreamingOption(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption)
  }

  /**
   * <pre>
   * Specifies the logging mode.
   * </pre>
   *
   * Protobuf enum {@code google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode}
   */
  public enum LoggingMode
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * The service determines the logging mode. The default is `LEGACY`. Do not
     * rely on the default logging behavior as it may change in the future.
     * </pre>
     *
     * <code>LOGGING_UNSPECIFIED = 0;</code>
     */
    LOGGING_UNSPECIFIED(0),
    /**
     * <pre>
     * Stackdriver logging and Cloud Storage logging are enabled.
     * </pre>
     *
     * <code>LEGACY = 1;</code>
     */
    LEGACY(1),
    /**
     * <pre>
     * Only Cloud Storage logging is enabled.
     * </pre>
     *
     * <code>GCS_ONLY = 2;</code>
     */
    GCS_ONLY(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * The service determines the logging mode. The default is `LEGACY`. Do not
     * rely on the default logging behavior as it may change in the future.
     * </pre>
     *
     * <code>LOGGING_UNSPECIFIED = 0;</code>
     */
    public static final int LOGGING_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * Stackdriver logging and Cloud Storage logging are enabled.
     * </pre>
     *
     * <code>LEGACY = 1;</code>
     */
    public static final int LEGACY_VALUE = 1;
    /**
     * <pre>
     * Only Cloud Storage logging is enabled.
     * </pre>
     *
     * <code>GCS_ONLY = 2;</code>
     */
    public static final int GCS_ONLY_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LoggingMode valueOf(int value) {
      return forNumber(value);
    }

    public static LoggingMode forNumber(int value) {
      switch (value) {
        case 0: return LOGGING_UNSPECIFIED;
        case 1: return LEGACY;
        case 2: return GCS_ONLY;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LoggingMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LoggingMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LoggingMode>() {
            @java.lang.Override
            public LoggingMode findValueByNumber(int number) {
              return LoggingMode.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return LoggingModeVerifier.INSTANCE;
    }

    private static final class LoggingModeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new LoggingModeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return LoggingMode.forNumber(number) != null;
            }
          };

    private final int value;

    private LoggingMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode)
  }

  public static final int SOURCE_PROVENANCE_HASH_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.IntList sourceProvenanceHash_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, google.events.cloud.cloudbuild.v1.Hash.HashType> sourceProvenanceHash_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, google.events.cloud.cloudbuild.v1.Hash.HashType>() {
            @java.lang.Override
            public google.events.cloud.cloudbuild.v1.Hash.HashType convert(java.lang.Integer from) {
              google.events.cloud.cloudbuild.v1.Hash.HashType result = google.events.cloud.cloudbuild.v1.Hash.HashType.forNumber(from);
              return result == null ? google.events.cloud.cloudbuild.v1.Hash.HashType.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * Requested hash for SourceProvenance.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
   * @return A list containing the sourceProvenanceHash.
   */
  @java.lang.Override
  public java.util.List<google.events.cloud.cloudbuild.v1.Hash.HashType> getSourceProvenanceHashList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, google.events.cloud.cloudbuild.v1.Hash.HashType>(sourceProvenanceHash_, sourceProvenanceHash_converter_);
  }
  /**
   * <pre>
   * Requested hash for SourceProvenance.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
   * @return The count of sourceProvenanceHash.
   */
  @java.lang.Override
  public int getSourceProvenanceHashCount() {
    return sourceProvenanceHash_.size();
  }
  /**
   * <pre>
   * Requested hash for SourceProvenance.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
   * @param index The index of the element to return.
   * @return The sourceProvenanceHash at the given index.
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.Hash.HashType getSourceProvenanceHash(int index) {
    google.events.cloud.cloudbuild.v1.Hash.HashType result = google.events.cloud.cloudbuild.v1.Hash.HashType.forNumber(sourceProvenanceHash_.getInt(index));
    return result == null ? google.events.cloud.cloudbuild.v1.Hash.HashType.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Requested hash for SourceProvenance.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
   * @return A list containing the enum numeric values on the wire for sourceProvenanceHash.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getSourceProvenanceHashValueList() {
    return sourceProvenanceHash_;
  }
  /**
   * <pre>
   * Requested hash for SourceProvenance.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of sourceProvenanceHash at the given index.
   */
  @java.lang.Override
  public int getSourceProvenanceHashValue(int index) {
    return sourceProvenanceHash_.getInt(index);
  }
  private int sourceProvenanceHashMemoizedSerializedSize;
  private void ensureSourceProvenanceHashIsMutable() {
    com.google.protobuf.Internal.IntList tmp = sourceProvenanceHash_;
    if (!tmp.isModifiable()) {
      sourceProvenanceHash_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
    }
  }
  /**
   * <pre>
   * Requested hash for SourceProvenance.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
   * @param index The index to set the value at.
   * @param value The sourceProvenanceHash to set.
   */
  private void setSourceProvenanceHash(
      int index, google.events.cloud.cloudbuild.v1.Hash.HashType value) {
    value.getClass();
  ensureSourceProvenanceHashIsMutable();
    sourceProvenanceHash_.setInt(index, value.getNumber());
  }
  /**
   * <pre>
   * Requested hash for SourceProvenance.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
   * @param value The sourceProvenanceHash to add.
   */
  private void addSourceProvenanceHash(google.events.cloud.cloudbuild.v1.Hash.HashType value) {
    value.getClass();
  ensureSourceProvenanceHashIsMutable();
    sourceProvenanceHash_.addInt(value.getNumber());
  }
  /**
   * <pre>
   * Requested hash for SourceProvenance.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
   * @param values The sourceProvenanceHash to add.
   */
  private void addAllSourceProvenanceHash(
      java.lang.Iterable<? extends google.events.cloud.cloudbuild.v1.Hash.HashType> values) {
    ensureSourceProvenanceHashIsMutable();
    for (google.events.cloud.cloudbuild.v1.Hash.HashType value : values) {
      sourceProvenanceHash_.addInt(value.getNumber());
    }
  }
  /**
   * <pre>
   * Requested hash for SourceProvenance.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
   */
  private void clearSourceProvenanceHash() {
    sourceProvenanceHash_ = emptyIntList();
  }
  /**
   * <pre>
   * Requested hash for SourceProvenance.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
   * @param value The enum numeric value on the wire for sourceProvenanceHash to set.
   */
  private void setSourceProvenanceHashValue(
      int index, int value) {
    ensureSourceProvenanceHashIsMutable();
    sourceProvenanceHash_.setInt(index, value);
  }
  /**
   * <pre>
   * Requested hash for SourceProvenance.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
   * @param value The enum numeric value on the wire for sourceProvenanceHash to add.
   */
  private void addSourceProvenanceHashValue(int value) {
    ensureSourceProvenanceHashIsMutable();
    sourceProvenanceHash_.addInt(value);
  }
  /**
   * <pre>
   * Requested hash for SourceProvenance.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
   * @param values The enum numeric values on the wire for sourceProvenanceHash to add.
   */
  private void addAllSourceProvenanceHashValue(
      java.lang.Iterable<java.lang.Integer> values) {
    ensureSourceProvenanceHashIsMutable();
    for (int value : values) {
      sourceProvenanceHash_.addInt(value);
    }
  }

  public static final int REQUESTED_VERIFY_OPTION_FIELD_NUMBER = 2;
  private int requestedVerifyOption_;
  /**
   * <pre>
   * Requested verifiability options.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;</code>
   * @return The enum numeric value on the wire for requestedVerifyOption.
   */
  @java.lang.Override
  public int getRequestedVerifyOptionValue() {
    return requestedVerifyOption_;
  }
  /**
   * <pre>
   * Requested verifiability options.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;</code>
   * @return The requestedVerifyOption.
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption getRequestedVerifyOption() {
    google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption result = google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption.forNumber(requestedVerifyOption_);
    return result == null ? google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Requested verifiability options.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;</code>
   * @param value The enum numeric value on the wire for requestedVerifyOption to set.
   */
  private void setRequestedVerifyOptionValue(int value) {
      requestedVerifyOption_ = value;
  }
  /**
   * <pre>
   * Requested verifiability options.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;</code>
   * @param value The requestedVerifyOption to set.
   */
  private void setRequestedVerifyOption(google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption value) {
    requestedVerifyOption_ = value.getNumber();
    
  }
  /**
   * <pre>
   * Requested verifiability options.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;</code>
   */
  private void clearRequestedVerifyOption() {
    
    requestedVerifyOption_ = 0;
  }

  public static final int MACHINE_TYPE_FIELD_NUMBER = 3;
  private int machineType_;
  /**
   * <pre>
   * Compute Engine machine type on which to run the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;</code>
   * @return The enum numeric value on the wire for machineType.
   */
  @java.lang.Override
  public int getMachineTypeValue() {
    return machineType_;
  }
  /**
   * <pre>
   * Compute Engine machine type on which to run the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;</code>
   * @return The machineType.
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.BuildOptions.MachineType getMachineType() {
    google.events.cloud.cloudbuild.v1.BuildOptions.MachineType result = google.events.cloud.cloudbuild.v1.BuildOptions.MachineType.forNumber(machineType_);
    return result == null ? google.events.cloud.cloudbuild.v1.BuildOptions.MachineType.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Compute Engine machine type on which to run the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;</code>
   * @param value The enum numeric value on the wire for machineType to set.
   */
  private void setMachineTypeValue(int value) {
      machineType_ = value;
  }
  /**
   * <pre>
   * Compute Engine machine type on which to run the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;</code>
   * @param value The machineType to set.
   */
  private void setMachineType(google.events.cloud.cloudbuild.v1.BuildOptions.MachineType value) {
    machineType_ = value.getNumber();
    
  }
  /**
   * <pre>
   * Compute Engine machine type on which to run the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;</code>
   */
  private void clearMachineType() {
    
    machineType_ = 0;
  }

  public static final int DISK_SIZE_GB_FIELD_NUMBER = 6;
  private long diskSizeGb_;
  /**
   * <pre>
   * Requested disk size for the VM that runs the build. Note that this is *NOT*
   * "disk free"; some of the space will be used by the operating system and
   * build utilities. Also note that this is the minimum disk size that will be
   * allocated for the build -- the build may run with a larger disk than
   * requested. At present, the maximum disk size is 1000GB; builds that request
   * more than the maximum are rejected with an error.
   * </pre>
   *
   * <code>int64 disk_size_gb = 6;</code>
   * @return The diskSizeGb.
   */
  @java.lang.Override
  public long getDiskSizeGb() {
    return diskSizeGb_;
  }
  /**
   * <pre>
   * Requested disk size for the VM that runs the build. Note that this is *NOT*
   * "disk free"; some of the space will be used by the operating system and
   * build utilities. Also note that this is the minimum disk size that will be
   * allocated for the build -- the build may run with a larger disk than
   * requested. At present, the maximum disk size is 1000GB; builds that request
   * more than the maximum are rejected with an error.
   * </pre>
   *
   * <code>int64 disk_size_gb = 6;</code>
   * @param value The diskSizeGb to set.
   */
  private void setDiskSizeGb(long value) {
    
    diskSizeGb_ = value;
  }
  /**
   * <pre>
   * Requested disk size for the VM that runs the build. Note that this is *NOT*
   * "disk free"; some of the space will be used by the operating system and
   * build utilities. Also note that this is the minimum disk size that will be
   * allocated for the build -- the build may run with a larger disk than
   * requested. At present, the maximum disk size is 1000GB; builds that request
   * more than the maximum are rejected with an error.
   * </pre>
   *
   * <code>int64 disk_size_gb = 6;</code>
   */
  private void clearDiskSizeGb() {
    
    diskSizeGb_ = 0L;
  }

  public static final int SUBSTITUTION_OPTION_FIELD_NUMBER = 4;
  private int substitutionOption_;
  /**
   * <pre>
   * Option to specify behavior when there is an error in the substitution
   * checks.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;</code>
   * @return The enum numeric value on the wire for substitutionOption.
   */
  @java.lang.Override
  public int getSubstitutionOptionValue() {
    return substitutionOption_;
  }
  /**
   * <pre>
   * Option to specify behavior when there is an error in the substitution
   * checks.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;</code>
   * @return The substitutionOption.
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption getSubstitutionOption() {
    google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption result = google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption.forNumber(substitutionOption_);
    return result == null ? google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Option to specify behavior when there is an error in the substitution
   * checks.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;</code>
   * @param value The enum numeric value on the wire for substitutionOption to set.
   */
  private void setSubstitutionOptionValue(int value) {
      substitutionOption_ = value;
  }
  /**
   * <pre>
   * Option to specify behavior when there is an error in the substitution
   * checks.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;</code>
   * @param value The substitutionOption to set.
   */
  private void setSubstitutionOption(google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption value) {
    substitutionOption_ = value.getNumber();
    
  }
  /**
   * <pre>
   * Option to specify behavior when there is an error in the substitution
   * checks.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;</code>
   */
  private void clearSubstitutionOption() {
    
    substitutionOption_ = 0;
  }

  public static final int LOG_STREAMING_OPTION_FIELD_NUMBER = 5;
  private int logStreamingOption_;
  /**
   * <pre>
   * Option to define build log streaming behavior to Google Cloud
   * Storage.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;</code>
   * @return The enum numeric value on the wire for logStreamingOption.
   */
  @java.lang.Override
  public int getLogStreamingOptionValue() {
    return logStreamingOption_;
  }
  /**
   * <pre>
   * Option to define build log streaming behavior to Google Cloud
   * Storage.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;</code>
   * @return The logStreamingOption.
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption getLogStreamingOption() {
    google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption result = google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption.forNumber(logStreamingOption_);
    return result == null ? google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Option to define build log streaming behavior to Google Cloud
   * Storage.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;</code>
   * @param value The enum numeric value on the wire for logStreamingOption to set.
   */
  private void setLogStreamingOptionValue(int value) {
      logStreamingOption_ = value;
  }
  /**
   * <pre>
   * Option to define build log streaming behavior to Google Cloud
   * Storage.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;</code>
   * @param value The logStreamingOption to set.
   */
  private void setLogStreamingOption(google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption value) {
    logStreamingOption_ = value.getNumber();
    
  }
  /**
   * <pre>
   * Option to define build log streaming behavior to Google Cloud
   * Storage.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;</code>
   */
  private void clearLogStreamingOption() {
    
    logStreamingOption_ = 0;
  }

  public static final int WORKER_POOL_FIELD_NUMBER = 7;
  private java.lang.String workerPool_;
  /**
   * <pre>
   * Option to specify a `WorkerPool` for the build.
   * Format: projects/{project}/locations/{location}/workerPools/{workerPool}
   * </pre>
   *
   * <code>string worker_pool = 7;</code>
   * @return The workerPool.
   */
  @java.lang.Override
  public java.lang.String getWorkerPool() {
    return workerPool_;
  }
  /**
   * <pre>
   * Option to specify a `WorkerPool` for the build.
   * Format: projects/{project}/locations/{location}/workerPools/{workerPool}
   * </pre>
   *
   * <code>string worker_pool = 7;</code>
   * @return The bytes for workerPool.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getWorkerPoolBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(workerPool_);
  }
  /**
   * <pre>
   * Option to specify a `WorkerPool` for the build.
   * Format: projects/{project}/locations/{location}/workerPools/{workerPool}
   * </pre>
   *
   * <code>string worker_pool = 7;</code>
   * @param value The workerPool to set.
   */
  private void setWorkerPool(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    workerPool_ = value;
  }
  /**
   * <pre>
   * Option to specify a `WorkerPool` for the build.
   * Format: projects/{project}/locations/{location}/workerPools/{workerPool}
   * </pre>
   *
   * <code>string worker_pool = 7;</code>
   */
  private void clearWorkerPool() {
    
    workerPool_ = getDefaultInstance().getWorkerPool();
  }
  /**
   * <pre>
   * Option to specify a `WorkerPool` for the build.
   * Format: projects/{project}/locations/{location}/workerPools/{workerPool}
   * </pre>
   *
   * <code>string worker_pool = 7;</code>
   * @param value The bytes for workerPool to set.
   */
  private void setWorkerPoolBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    workerPool_ = value.toStringUtf8();
    
  }

  public static final int LOGGING_FIELD_NUMBER = 11;
  private int logging_;
  /**
   * <pre>
   * Option to specify the logging mode, which determines where the logs are
   * stored.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode logging = 11;</code>
   * @return The enum numeric value on the wire for logging.
   */
  @java.lang.Override
  public int getLoggingValue() {
    return logging_;
  }
  /**
   * <pre>
   * Option to specify the logging mode, which determines where the logs are
   * stored.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode logging = 11;</code>
   * @return The logging.
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode getLogging() {
    google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode result = google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode.forNumber(logging_);
    return result == null ? google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Option to specify the logging mode, which determines where the logs are
   * stored.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode logging = 11;</code>
   * @param value The enum numeric value on the wire for logging to set.
   */
  private void setLoggingValue(int value) {
      logging_ = value;
  }
  /**
   * <pre>
   * Option to specify the logging mode, which determines where the logs are
   * stored.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode logging = 11;</code>
   * @param value The logging to set.
   */
  private void setLogging(google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode value) {
    logging_ = value.getNumber();
    
  }
  /**
   * <pre>
   * Option to specify the logging mode, which determines where the logs are
   * stored.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode logging = 11;</code>
   */
  private void clearLogging() {
    
    logging_ = 0;
  }

  public static final int ENV_FIELD_NUMBER = 12;
  private com.google.protobuf.Internal.ProtobufList<java.lang.String> env_;
  /**
   * <pre>
   * A list of global environment variable definitions that will exist for all
   * build steps in this build. If a variable is defined in both globally and in
   * a build step, the variable will use the build step value.
   * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
   * being given the value "VALUE".
   * </pre>
   *
   * <code>repeated string env = 12;</code>
   * @return A list containing the env.
   */
  @java.lang.Override
  public java.util.List<java.lang.String> getEnvList() {
    return env_;
  }
  /**
   * <pre>
   * A list of global environment variable definitions that will exist for all
   * build steps in this build. If a variable is defined in both globally and in
   * a build step, the variable will use the build step value.
   * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
   * being given the value "VALUE".
   * </pre>
   *
   * <code>repeated string env = 12;</code>
   * @return The count of env.
   */
  @java.lang.Override
  public int getEnvCount() {
    return env_.size();
  }
  /**
   * <pre>
   * A list of global environment variable definitions that will exist for all
   * build steps in this build. If a variable is defined in both globally and in
   * a build step, the variable will use the build step value.
   * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
   * being given the value "VALUE".
   * </pre>
   *
   * <code>repeated string env = 12;</code>
   * @param index The index of the element to return.
   * @return The env at the given index.
   */
  @java.lang.Override
  public java.lang.String getEnv(int index) {
    return env_.get(index);
  }
  /**
   * <pre>
   * A list of global environment variable definitions that will exist for all
   * build steps in this build. If a variable is defined in both globally and in
   * a build step, the variable will use the build step value.
   * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
   * being given the value "VALUE".
   * </pre>
   *
   * <code>repeated string env = 12;</code>
   * @param index The index of the value to return.
   * @return The bytes of the env at the given index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEnvBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        env_.get(index));
  }
  private void ensureEnvIsMutable() {
    com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
        env_;  if (!tmp.isModifiable()) {
      env_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * A list of global environment variable definitions that will exist for all
   * build steps in this build. If a variable is defined in both globally and in
   * a build step, the variable will use the build step value.
   * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
   * being given the value "VALUE".
   * </pre>
   *
   * <code>repeated string env = 12;</code>
   * @param index The index to set the value at.
   * @param value The env to set.
   */
  private void setEnv(
      int index, java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureEnvIsMutable();
    env_.set(index, value);
  }
  /**
   * <pre>
   * A list of global environment variable definitions that will exist for all
   * build steps in this build. If a variable is defined in both globally and in
   * a build step, the variable will use the build step value.
   * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
   * being given the value "VALUE".
   * </pre>
   *
   * <code>repeated string env = 12;</code>
   * @param value The env to add.
   */
  private void addEnv(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureEnvIsMutable();
    env_.add(value);
  }
  /**
   * <pre>
   * A list of global environment variable definitions that will exist for all
   * build steps in this build. If a variable is defined in both globally and in
   * a build step, the variable will use the build step value.
   * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
   * being given the value "VALUE".
   * </pre>
   *
   * <code>repeated string env = 12;</code>
   * @param values The env to add.
   */
  private void addAllEnv(
      java.lang.Iterable<java.lang.String> values) {
    ensureEnvIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, env_);
  }
  /**
   * <pre>
   * A list of global environment variable definitions that will exist for all
   * build steps in this build. If a variable is defined in both globally and in
   * a build step, the variable will use the build step value.
   * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
   * being given the value "VALUE".
   * </pre>
   *
   * <code>repeated string env = 12;</code>
   */
  private void clearEnv() {
    env_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * A list of global environment variable definitions that will exist for all
   * build steps in this build. If a variable is defined in both globally and in
   * a build step, the variable will use the build step value.
   * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
   * being given the value "VALUE".
   * </pre>
   *
   * <code>repeated string env = 12;</code>
   * @param value The bytes of the env to add.
   */
  private void addEnvBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    ensureEnvIsMutable();
    env_.add(value.toStringUtf8());
  }

  public static final int SECRET_ENV_FIELD_NUMBER = 13;
  private com.google.protobuf.Internal.ProtobufList<java.lang.String> secretEnv_;
  /**
   * <pre>
   * A list of global environment variables, which are encrypted using a Cloud
   * Key Management Service crypto key. These values must be specified in the
   * build's `Secret`. These variables will be available to all build steps
   * in this build.
   * </pre>
   *
   * <code>repeated string secret_env = 13;</code>
   * @return A list containing the secretEnv.
   */
  @java.lang.Override
  public java.util.List<java.lang.String> getSecretEnvList() {
    return secretEnv_;
  }
  /**
   * <pre>
   * A list of global environment variables, which are encrypted using a Cloud
   * Key Management Service crypto key. These values must be specified in the
   * build's `Secret`. These variables will be available to all build steps
   * in this build.
   * </pre>
   *
   * <code>repeated string secret_env = 13;</code>
   * @return The count of secretEnv.
   */
  @java.lang.Override
  public int getSecretEnvCount() {
    return secretEnv_.size();
  }
  /**
   * <pre>
   * A list of global environment variables, which are encrypted using a Cloud
   * Key Management Service crypto key. These values must be specified in the
   * build's `Secret`. These variables will be available to all build steps
   * in this build.
   * </pre>
   *
   * <code>repeated string secret_env = 13;</code>
   * @param index The index of the element to return.
   * @return The secretEnv at the given index.
   */
  @java.lang.Override
  public java.lang.String getSecretEnv(int index) {
    return secretEnv_.get(index);
  }
  /**
   * <pre>
   * A list of global environment variables, which are encrypted using a Cloud
   * Key Management Service crypto key. These values must be specified in the
   * build's `Secret`. These variables will be available to all build steps
   * in this build.
   * </pre>
   *
   * <code>repeated string secret_env = 13;</code>
   * @param index The index of the value to return.
   * @return The bytes of the secretEnv at the given index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSecretEnvBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        secretEnv_.get(index));
  }
  private void ensureSecretEnvIsMutable() {
    com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
        secretEnv_;  if (!tmp.isModifiable()) {
      secretEnv_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * A list of global environment variables, which are encrypted using a Cloud
   * Key Management Service crypto key. These values must be specified in the
   * build's `Secret`. These variables will be available to all build steps
   * in this build.
   * </pre>
   *
   * <code>repeated string secret_env = 13;</code>
   * @param index The index to set the value at.
   * @param value The secretEnv to set.
   */
  private void setSecretEnv(
      int index, java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureSecretEnvIsMutable();
    secretEnv_.set(index, value);
  }
  /**
   * <pre>
   * A list of global environment variables, which are encrypted using a Cloud
   * Key Management Service crypto key. These values must be specified in the
   * build's `Secret`. These variables will be available to all build steps
   * in this build.
   * </pre>
   *
   * <code>repeated string secret_env = 13;</code>
   * @param value The secretEnv to add.
   */
  private void addSecretEnv(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureSecretEnvIsMutable();
    secretEnv_.add(value);
  }
  /**
   * <pre>
   * A list of global environment variables, which are encrypted using a Cloud
   * Key Management Service crypto key. These values must be specified in the
   * build's `Secret`. These variables will be available to all build steps
   * in this build.
   * </pre>
   *
   * <code>repeated string secret_env = 13;</code>
   * @param values The secretEnv to add.
   */
  private void addAllSecretEnv(
      java.lang.Iterable<java.lang.String> values) {
    ensureSecretEnvIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, secretEnv_);
  }
  /**
   * <pre>
   * A list of global environment variables, which are encrypted using a Cloud
   * Key Management Service crypto key. These values must be specified in the
   * build's `Secret`. These variables will be available to all build steps
   * in this build.
   * </pre>
   *
   * <code>repeated string secret_env = 13;</code>
   */
  private void clearSecretEnv() {
    secretEnv_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * A list of global environment variables, which are encrypted using a Cloud
   * Key Management Service crypto key. These values must be specified in the
   * build's `Secret`. These variables will be available to all build steps
   * in this build.
   * </pre>
   *
   * <code>repeated string secret_env = 13;</code>
   * @param value The bytes of the secretEnv to add.
   */
  private void addSecretEnvBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    ensureSecretEnvIsMutable();
    secretEnv_.add(value.toStringUtf8());
  }

  public static final int VOLUMES_FIELD_NUMBER = 14;
  private com.google.protobuf.Internal.ProtobufList<google.events.cloud.cloudbuild.v1.Volume> volumes_;
  /**
   * <pre>
   * Global list of volumes to mount for ALL build steps
   * Each volume is created as an empty volume prior to starting the build
   * process. Upon completion of the build, volumes and their contents are
   * discarded. Global volume names and paths cannot conflict with the volumes
   * defined a build step.
   * Using a global volume in a build with only one step is not valid as
   * it is indicative of a build request with an incorrect configuration.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
   */
  @java.lang.Override
  public java.util.List<google.events.cloud.cloudbuild.v1.Volume> getVolumesList() {
    return volumes_;
  }
  /**
   * <pre>
   * Global list of volumes to mount for ALL build steps
   * Each volume is created as an empty volume prior to starting the build
   * process. Upon completion of the build, volumes and their contents are
   * discarded. Global volume names and paths cannot conflict with the volumes
   * defined a build step.
   * Using a global volume in a build with only one step is not valid as
   * it is indicative of a build request with an incorrect configuration.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
   */
  public java.util.List<? extends google.events.cloud.cloudbuild.v1.VolumeOrBuilder> 
      getVolumesOrBuilderList() {
    return volumes_;
  }
  /**
   * <pre>
   * Global list of volumes to mount for ALL build steps
   * Each volume is created as an empty volume prior to starting the build
   * process. Upon completion of the build, volumes and their contents are
   * discarded. Global volume names and paths cannot conflict with the volumes
   * defined a build step.
   * Using a global volume in a build with only one step is not valid as
   * it is indicative of a build request with an incorrect configuration.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
   */
  @java.lang.Override
  public int getVolumesCount() {
    return volumes_.size();
  }
  /**
   * <pre>
   * Global list of volumes to mount for ALL build steps
   * Each volume is created as an empty volume prior to starting the build
   * process. Upon completion of the build, volumes and their contents are
   * discarded. Global volume names and paths cannot conflict with the volumes
   * defined a build step.
   * Using a global volume in a build with only one step is not valid as
   * it is indicative of a build request with an incorrect configuration.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.Volume getVolumes(int index) {
    return volumes_.get(index);
  }
  /**
   * <pre>
   * Global list of volumes to mount for ALL build steps
   * Each volume is created as an empty volume prior to starting the build
   * process. Upon completion of the build, volumes and their contents are
   * discarded. Global volume names and paths cannot conflict with the volumes
   * defined a build step.
   * Using a global volume in a build with only one step is not valid as
   * it is indicative of a build request with an incorrect configuration.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
   */
  public google.events.cloud.cloudbuild.v1.VolumeOrBuilder getVolumesOrBuilder(
      int index) {
    return volumes_.get(index);
  }
  private void ensureVolumesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<google.events.cloud.cloudbuild.v1.Volume> tmp = volumes_;
    if (!tmp.isModifiable()) {
      volumes_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * Global list of volumes to mount for ALL build steps
   * Each volume is created as an empty volume prior to starting the build
   * process. Upon completion of the build, volumes and their contents are
   * discarded. Global volume names and paths cannot conflict with the volumes
   * defined a build step.
   * Using a global volume in a build with only one step is not valid as
   * it is indicative of a build request with an incorrect configuration.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
   */
  private void setVolumes(
      int index, google.events.cloud.cloudbuild.v1.Volume value) {
    value.getClass();
  ensureVolumesIsMutable();
    volumes_.set(index, value);
  }
  /**
   * <pre>
   * Global list of volumes to mount for ALL build steps
   * Each volume is created as an empty volume prior to starting the build
   * process. Upon completion of the build, volumes and their contents are
   * discarded. Global volume names and paths cannot conflict with the volumes
   * defined a build step.
   * Using a global volume in a build with only one step is not valid as
   * it is indicative of a build request with an incorrect configuration.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
   */
  private void addVolumes(google.events.cloud.cloudbuild.v1.Volume value) {
    value.getClass();
  ensureVolumesIsMutable();
    volumes_.add(value);
  }
  /**
   * <pre>
   * Global list of volumes to mount for ALL build steps
   * Each volume is created as an empty volume prior to starting the build
   * process. Upon completion of the build, volumes and their contents are
   * discarded. Global volume names and paths cannot conflict with the volumes
   * defined a build step.
   * Using a global volume in a build with only one step is not valid as
   * it is indicative of a build request with an incorrect configuration.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
   */
  private void addVolumes(
      int index, google.events.cloud.cloudbuild.v1.Volume value) {
    value.getClass();
  ensureVolumesIsMutable();
    volumes_.add(index, value);
  }
  /**
   * <pre>
   * Global list of volumes to mount for ALL build steps
   * Each volume is created as an empty volume prior to starting the build
   * process. Upon completion of the build, volumes and their contents are
   * discarded. Global volume names and paths cannot conflict with the volumes
   * defined a build step.
   * Using a global volume in a build with only one step is not valid as
   * it is indicative of a build request with an incorrect configuration.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
   */
  private void addAllVolumes(
      java.lang.Iterable<? extends google.events.cloud.cloudbuild.v1.Volume> values) {
    ensureVolumesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, volumes_);
  }
  /**
   * <pre>
   * Global list of volumes to mount for ALL build steps
   * Each volume is created as an empty volume prior to starting the build
   * process. Upon completion of the build, volumes and their contents are
   * discarded. Global volume names and paths cannot conflict with the volumes
   * defined a build step.
   * Using a global volume in a build with only one step is not valid as
   * it is indicative of a build request with an incorrect configuration.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
   */
  private void clearVolumes() {
    volumes_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Global list of volumes to mount for ALL build steps
   * Each volume is created as an empty volume prior to starting the build
   * process. Upon completion of the build, volumes and their contents are
   * discarded. Global volume names and paths cannot conflict with the volumes
   * defined a build step.
   * Using a global volume in a build with only one step is not valid as
   * it is indicative of a build request with an incorrect configuration.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
   */
  private void removeVolumes(int index) {
    ensureVolumesIsMutable();
    volumes_.remove(index);
  }

  public static google.events.cloud.cloudbuild.v1.BuildOptions parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.cloudbuild.v1.BuildOptions parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuildOptions parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.cloudbuild.v1.BuildOptions parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuildOptions parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.cloudbuild.v1.BuildOptions parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuildOptions parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.cloudbuild.v1.BuildOptions parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuildOptions parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.cloudbuild.v1.BuildOptions parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuildOptions parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.cloudbuild.v1.BuildOptions parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.cloud.cloudbuild.v1.BuildOptions prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Optional arguments to enable specific features of builds.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.cloudbuild.v1.BuildOptions}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.cloud.cloudbuild.v1.BuildOptions, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.cloudbuild.v1.BuildOptions)
      google.events.cloud.cloudbuild.v1.BuildOptionsOrBuilder {
    // Construct using google.events.cloud.cloudbuild.v1.BuildOptions.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Requested hash for SourceProvenance.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @return A list containing the sourceProvenanceHash.
     */
    @java.lang.Override
    public java.util.List<google.events.cloud.cloudbuild.v1.Hash.HashType> getSourceProvenanceHashList() {
      return instance.getSourceProvenanceHashList();
    }
    /**
     * <pre>
     * Requested hash for SourceProvenance.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @return The count of sourceProvenanceHash.
     */
    @java.lang.Override
    public int getSourceProvenanceHashCount() {
      return instance.getSourceProvenanceHashCount();
    }
    /**
     * <pre>
     * Requested hash for SourceProvenance.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @param index The index of the element to return.
     * @return The sourceProvenanceHash at the given index.
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.Hash.HashType getSourceProvenanceHash(int index) {
      return instance.getSourceProvenanceHash(index);
    }
    /**
     * <pre>
     * Requested hash for SourceProvenance.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @param index The index to set the value at.
     * @param value The sourceProvenanceHash to set.
     * @return This builder for chaining.
     */
    public Builder setSourceProvenanceHash(
        int index, google.events.cloud.cloudbuild.v1.Hash.HashType value) {
      copyOnWrite();
      instance.setSourceProvenanceHash(index, value);
      return this;
    }
    /**
     * <pre>
     * Requested hash for SourceProvenance.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @param value The sourceProvenanceHash to add.
     * @return This builder for chaining.
     */
    public Builder addSourceProvenanceHash(google.events.cloud.cloudbuild.v1.Hash.HashType value) {
      copyOnWrite();
      instance.addSourceProvenanceHash(value);
      return this;
    }
    /**
     * <pre>
     * Requested hash for SourceProvenance.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @param values The sourceProvenanceHash to add.
     * @return This builder for chaining.
     */
    public Builder addAllSourceProvenanceHash(
        java.lang.Iterable<? extends google.events.cloud.cloudbuild.v1.Hash.HashType> values) {
      copyOnWrite();
      instance.addAllSourceProvenanceHash(values);  return this;
    }
    /**
     * <pre>
     * Requested hash for SourceProvenance.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSourceProvenanceHash() {
      copyOnWrite();
      instance.clearSourceProvenanceHash();
      return this;
    }
    /**
     * <pre>
     * Requested hash for SourceProvenance.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @return A list containing the enum numeric values on the wire for sourceProvenanceHash.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getSourceProvenanceHashValueList() {
      return java.util.Collections.unmodifiableList(
          instance.getSourceProvenanceHashValueList());
    }
    /**
     * <pre>
     * Requested hash for SourceProvenance.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of sourceProvenanceHash at the given index.
     */
    @java.lang.Override
    public int getSourceProvenanceHashValue(int index) {
      return instance.getSourceProvenanceHashValue(index);
    }
    /**
     * <pre>
     * Requested hash for SourceProvenance.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for sourceProvenanceHash to set.
     * @return This builder for chaining.
     */
    public Builder setSourceProvenanceHashValue(
        int index, int value) {
      copyOnWrite();
      instance.setSourceProvenanceHashValue(index, value);
      return this;
    }
    /**
     * <pre>
     * Requested hash for SourceProvenance.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @param value The enum numeric value on the wire for sourceProvenanceHash to add.
     * @return This builder for chaining.
     */
    public Builder addSourceProvenanceHashValue(int value) {
      instance.addSourceProvenanceHashValue(value);
      return this;
    }
    /**
     * <pre>
     * Requested hash for SourceProvenance.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Hash.HashType source_provenance_hash = 1;</code>
     * @param values The enum numeric values on the wire for sourceProvenanceHash to add.
     * @return This builder for chaining.
     */
    public Builder addAllSourceProvenanceHashValue(
        java.lang.Iterable<java.lang.Integer> values) {
      copyOnWrite();
      instance.addAllSourceProvenanceHashValue(values);
      return this;
    }

    /**
     * <pre>
     * Requested verifiability options.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;</code>
     * @return The enum numeric value on the wire for requestedVerifyOption.
     */
    @java.lang.Override
    public int getRequestedVerifyOptionValue() {
      return instance.getRequestedVerifyOptionValue();
    }
    /**
     * <pre>
     * Requested verifiability options.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;</code>
     * @param value The requestedVerifyOption to set.
     * @return This builder for chaining.
     */
    public Builder setRequestedVerifyOptionValue(int value) {
      copyOnWrite();
      instance.setRequestedVerifyOptionValue(value);
      return this;
    }
    /**
     * <pre>
     * Requested verifiability options.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;</code>
     * @return The requestedVerifyOption.
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption getRequestedVerifyOption() {
      return instance.getRequestedVerifyOption();
    }
    /**
     * <pre>
     * Requested verifiability options.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;</code>
     * @param value The enum numeric value on the wire for requestedVerifyOption to set.
     * @return This builder for chaining.
     */
    public Builder setRequestedVerifyOption(google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption value) {
      copyOnWrite();
      instance.setRequestedVerifyOption(value);
      return this;
    }
    /**
     * <pre>
     * Requested verifiability options.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.VerifyOption requested_verify_option = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearRequestedVerifyOption() {
      copyOnWrite();
      instance.clearRequestedVerifyOption();
      return this;
    }

    /**
     * <pre>
     * Compute Engine machine type on which to run the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;</code>
     * @return The enum numeric value on the wire for machineType.
     */
    @java.lang.Override
    public int getMachineTypeValue() {
      return instance.getMachineTypeValue();
    }
    /**
     * <pre>
     * Compute Engine machine type on which to run the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;</code>
     * @param value The machineType to set.
     * @return This builder for chaining.
     */
    public Builder setMachineTypeValue(int value) {
      copyOnWrite();
      instance.setMachineTypeValue(value);
      return this;
    }
    /**
     * <pre>
     * Compute Engine machine type on which to run the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;</code>
     * @return The machineType.
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.BuildOptions.MachineType getMachineType() {
      return instance.getMachineType();
    }
    /**
     * <pre>
     * Compute Engine machine type on which to run the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;</code>
     * @param value The enum numeric value on the wire for machineType to set.
     * @return This builder for chaining.
     */
    public Builder setMachineType(google.events.cloud.cloudbuild.v1.BuildOptions.MachineType value) {
      copyOnWrite();
      instance.setMachineType(value);
      return this;
    }
    /**
     * <pre>
     * Compute Engine machine type on which to run the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.MachineType machine_type = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMachineType() {
      copyOnWrite();
      instance.clearMachineType();
      return this;
    }

    /**
     * <pre>
     * Requested disk size for the VM that runs the build. Note that this is *NOT*
     * "disk free"; some of the space will be used by the operating system and
     * build utilities. Also note that this is the minimum disk size that will be
     * allocated for the build -- the build may run with a larger disk than
     * requested. At present, the maximum disk size is 1000GB; builds that request
     * more than the maximum are rejected with an error.
     * </pre>
     *
     * <code>int64 disk_size_gb = 6;</code>
     * @return The diskSizeGb.
     */
    @java.lang.Override
    public long getDiskSizeGb() {
      return instance.getDiskSizeGb();
    }
    /**
     * <pre>
     * Requested disk size for the VM that runs the build. Note that this is *NOT*
     * "disk free"; some of the space will be used by the operating system and
     * build utilities. Also note that this is the minimum disk size that will be
     * allocated for the build -- the build may run with a larger disk than
     * requested. At present, the maximum disk size is 1000GB; builds that request
     * more than the maximum are rejected with an error.
     * </pre>
     *
     * <code>int64 disk_size_gb = 6;</code>
     * @param value The diskSizeGb to set.
     * @return This builder for chaining.
     */
    public Builder setDiskSizeGb(long value) {
      copyOnWrite();
      instance.setDiskSizeGb(value);
      return this;
    }
    /**
     * <pre>
     * Requested disk size for the VM that runs the build. Note that this is *NOT*
     * "disk free"; some of the space will be used by the operating system and
     * build utilities. Also note that this is the minimum disk size that will be
     * allocated for the build -- the build may run with a larger disk than
     * requested. At present, the maximum disk size is 1000GB; builds that request
     * more than the maximum are rejected with an error.
     * </pre>
     *
     * <code>int64 disk_size_gb = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDiskSizeGb() {
      copyOnWrite();
      instance.clearDiskSizeGb();
      return this;
    }

    /**
     * <pre>
     * Option to specify behavior when there is an error in the substitution
     * checks.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;</code>
     * @return The enum numeric value on the wire for substitutionOption.
     */
    @java.lang.Override
    public int getSubstitutionOptionValue() {
      return instance.getSubstitutionOptionValue();
    }
    /**
     * <pre>
     * Option to specify behavior when there is an error in the substitution
     * checks.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;</code>
     * @param value The substitutionOption to set.
     * @return This builder for chaining.
     */
    public Builder setSubstitutionOptionValue(int value) {
      copyOnWrite();
      instance.setSubstitutionOptionValue(value);
      return this;
    }
    /**
     * <pre>
     * Option to specify behavior when there is an error in the substitution
     * checks.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;</code>
     * @return The substitutionOption.
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption getSubstitutionOption() {
      return instance.getSubstitutionOption();
    }
    /**
     * <pre>
     * Option to specify behavior when there is an error in the substitution
     * checks.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;</code>
     * @param value The enum numeric value on the wire for substitutionOption to set.
     * @return This builder for chaining.
     */
    public Builder setSubstitutionOption(google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption value) {
      copyOnWrite();
      instance.setSubstitutionOption(value);
      return this;
    }
    /**
     * <pre>
     * Option to specify behavior when there is an error in the substitution
     * checks.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.SubstitutionOption substitution_option = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearSubstitutionOption() {
      copyOnWrite();
      instance.clearSubstitutionOption();
      return this;
    }

    /**
     * <pre>
     * Option to define build log streaming behavior to Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;</code>
     * @return The enum numeric value on the wire for logStreamingOption.
     */
    @java.lang.Override
    public int getLogStreamingOptionValue() {
      return instance.getLogStreamingOptionValue();
    }
    /**
     * <pre>
     * Option to define build log streaming behavior to Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;</code>
     * @param value The logStreamingOption to set.
     * @return This builder for chaining.
     */
    public Builder setLogStreamingOptionValue(int value) {
      copyOnWrite();
      instance.setLogStreamingOptionValue(value);
      return this;
    }
    /**
     * <pre>
     * Option to define build log streaming behavior to Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;</code>
     * @return The logStreamingOption.
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption getLogStreamingOption() {
      return instance.getLogStreamingOption();
    }
    /**
     * <pre>
     * Option to define build log streaming behavior to Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;</code>
     * @param value The enum numeric value on the wire for logStreamingOption to set.
     * @return This builder for chaining.
     */
    public Builder setLogStreamingOption(google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption value) {
      copyOnWrite();
      instance.setLogStreamingOption(value);
      return this;
    }
    /**
     * <pre>
     * Option to define build log streaming behavior to Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LogStreamingOption log_streaming_option = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearLogStreamingOption() {
      copyOnWrite();
      instance.clearLogStreamingOption();
      return this;
    }

    /**
     * <pre>
     * Option to specify a `WorkerPool` for the build.
     * Format: projects/{project}/locations/{location}/workerPools/{workerPool}
     * </pre>
     *
     * <code>string worker_pool = 7;</code>
     * @return The workerPool.
     */
    @java.lang.Override
    public java.lang.String getWorkerPool() {
      return instance.getWorkerPool();
    }
    /**
     * <pre>
     * Option to specify a `WorkerPool` for the build.
     * Format: projects/{project}/locations/{location}/workerPools/{workerPool}
     * </pre>
     *
     * <code>string worker_pool = 7;</code>
     * @return The bytes for workerPool.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWorkerPoolBytes() {
      return instance.getWorkerPoolBytes();
    }
    /**
     * <pre>
     * Option to specify a `WorkerPool` for the build.
     * Format: projects/{project}/locations/{location}/workerPools/{workerPool}
     * </pre>
     *
     * <code>string worker_pool = 7;</code>
     * @param value The workerPool to set.
     * @return This builder for chaining.
     */
    public Builder setWorkerPool(
        java.lang.String value) {
      copyOnWrite();
      instance.setWorkerPool(value);
      return this;
    }
    /**
     * <pre>
     * Option to specify a `WorkerPool` for the build.
     * Format: projects/{project}/locations/{location}/workerPools/{workerPool}
     * </pre>
     *
     * <code>string worker_pool = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearWorkerPool() {
      copyOnWrite();
      instance.clearWorkerPool();
      return this;
    }
    /**
     * <pre>
     * Option to specify a `WorkerPool` for the build.
     * Format: projects/{project}/locations/{location}/workerPools/{workerPool}
     * </pre>
     *
     * <code>string worker_pool = 7;</code>
     * @param value The bytes for workerPool to set.
     * @return This builder for chaining.
     */
    public Builder setWorkerPoolBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setWorkerPoolBytes(value);
      return this;
    }

    /**
     * <pre>
     * Option to specify the logging mode, which determines where the logs are
     * stored.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode logging = 11;</code>
     * @return The enum numeric value on the wire for logging.
     */
    @java.lang.Override
    public int getLoggingValue() {
      return instance.getLoggingValue();
    }
    /**
     * <pre>
     * Option to specify the logging mode, which determines where the logs are
     * stored.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode logging = 11;</code>
     * @param value The logging to set.
     * @return This builder for chaining.
     */
    public Builder setLoggingValue(int value) {
      copyOnWrite();
      instance.setLoggingValue(value);
      return this;
    }
    /**
     * <pre>
     * Option to specify the logging mode, which determines where the logs are
     * stored.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode logging = 11;</code>
     * @return The logging.
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode getLogging() {
      return instance.getLogging();
    }
    /**
     * <pre>
     * Option to specify the logging mode, which determines where the logs are
     * stored.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode logging = 11;</code>
     * @param value The enum numeric value on the wire for logging to set.
     * @return This builder for chaining.
     */
    public Builder setLogging(google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode value) {
      copyOnWrite();
      instance.setLogging(value);
      return this;
    }
    /**
     * <pre>
     * Option to specify the logging mode, which determines where the logs are
     * stored.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions.LoggingMode logging = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearLogging() {
      copyOnWrite();
      instance.clearLogging();
      return this;
    }

    /**
     * <pre>
     * A list of global environment variable definitions that will exist for all
     * build steps in this build. If a variable is defined in both globally and in
     * a build step, the variable will use the build step value.
     * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
     * being given the value "VALUE".
     * </pre>
     *
     * <code>repeated string env = 12;</code>
     * @return A list containing the env.
     */
    @java.lang.Override
    public java.util.List<java.lang.String>
        getEnvList() {
      return java.util.Collections.unmodifiableList(
          instance.getEnvList());
    }
    /**
     * <pre>
     * A list of global environment variable definitions that will exist for all
     * build steps in this build. If a variable is defined in both globally and in
     * a build step, the variable will use the build step value.
     * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
     * being given the value "VALUE".
     * </pre>
     *
     * <code>repeated string env = 12;</code>
     * @return The count of env.
     */
    @java.lang.Override
    public int getEnvCount() {
      return instance.getEnvCount();
    }
    /**
     * <pre>
     * A list of global environment variable definitions that will exist for all
     * build steps in this build. If a variable is defined in both globally and in
     * a build step, the variable will use the build step value.
     * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
     * being given the value "VALUE".
     * </pre>
     *
     * <code>repeated string env = 12;</code>
     * @param index The index of the element to return.
     * @return The env at the given index.
     */
    @java.lang.Override
    public java.lang.String getEnv(int index) {
      return instance.getEnv(index);
    }
    /**
     * <pre>
     * A list of global environment variable definitions that will exist for all
     * build steps in this build. If a variable is defined in both globally and in
     * a build step, the variable will use the build step value.
     * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
     * being given the value "VALUE".
     * </pre>
     *
     * <code>repeated string env = 12;</code>
     * @param index The index of the value to return.
     * @return The bytes of the env at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEnvBytes(int index) {
      return instance.getEnvBytes(index);
    }
    /**
     * <pre>
     * A list of global environment variable definitions that will exist for all
     * build steps in this build. If a variable is defined in both globally and in
     * a build step, the variable will use the build step value.
     * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
     * being given the value "VALUE".
     * </pre>
     *
     * <code>repeated string env = 12;</code>
     * @param index The index to set the value at.
     * @param value The env to set.
     * @return This builder for chaining.
     */
    public Builder setEnv(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setEnv(index, value);
      return this;
    }
    /**
     * <pre>
     * A list of global environment variable definitions that will exist for all
     * build steps in this build. If a variable is defined in both globally and in
     * a build step, the variable will use the build step value.
     * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
     * being given the value "VALUE".
     * </pre>
     *
     * <code>repeated string env = 12;</code>
     * @param value The env to add.
     * @return This builder for chaining.
     */
    public Builder addEnv(
        java.lang.String value) {
      copyOnWrite();
      instance.addEnv(value);
      return this;
    }
    /**
     * <pre>
     * A list of global environment variable definitions that will exist for all
     * build steps in this build. If a variable is defined in both globally and in
     * a build step, the variable will use the build step value.
     * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
     * being given the value "VALUE".
     * </pre>
     *
     * <code>repeated string env = 12;</code>
     * @param values The env to add.
     * @return This builder for chaining.
     */
    public Builder addAllEnv(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllEnv(values);
      return this;
    }
    /**
     * <pre>
     * A list of global environment variable definitions that will exist for all
     * build steps in this build. If a variable is defined in both globally and in
     * a build step, the variable will use the build step value.
     * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
     * being given the value "VALUE".
     * </pre>
     *
     * <code>repeated string env = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnv() {
      copyOnWrite();
      instance.clearEnv();
      return this;
    }
    /**
     * <pre>
     * A list of global environment variable definitions that will exist for all
     * build steps in this build. If a variable is defined in both globally and in
     * a build step, the variable will use the build step value.
     * The elements are of the form "KEY=VALUE" for the environment variable "KEY"
     * being given the value "VALUE".
     * </pre>
     *
     * <code>repeated string env = 12;</code>
     * @param value The bytes of the env to add.
     * @return This builder for chaining.
     */
    public Builder addEnvBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addEnvBytes(value);
      return this;
    }

    /**
     * <pre>
     * A list of global environment variables, which are encrypted using a Cloud
     * Key Management Service crypto key. These values must be specified in the
     * build's `Secret`. These variables will be available to all build steps
     * in this build.
     * </pre>
     *
     * <code>repeated string secret_env = 13;</code>
     * @return A list containing the secretEnv.
     */
    @java.lang.Override
    public java.util.List<java.lang.String>
        getSecretEnvList() {
      return java.util.Collections.unmodifiableList(
          instance.getSecretEnvList());
    }
    /**
     * <pre>
     * A list of global environment variables, which are encrypted using a Cloud
     * Key Management Service crypto key. These values must be specified in the
     * build's `Secret`. These variables will be available to all build steps
     * in this build.
     * </pre>
     *
     * <code>repeated string secret_env = 13;</code>
     * @return The count of secretEnv.
     */
    @java.lang.Override
    public int getSecretEnvCount() {
      return instance.getSecretEnvCount();
    }
    /**
     * <pre>
     * A list of global environment variables, which are encrypted using a Cloud
     * Key Management Service crypto key. These values must be specified in the
     * build's `Secret`. These variables will be available to all build steps
     * in this build.
     * </pre>
     *
     * <code>repeated string secret_env = 13;</code>
     * @param index The index of the element to return.
     * @return The secretEnv at the given index.
     */
    @java.lang.Override
    public java.lang.String getSecretEnv(int index) {
      return instance.getSecretEnv(index);
    }
    /**
     * <pre>
     * A list of global environment variables, which are encrypted using a Cloud
     * Key Management Service crypto key. These values must be specified in the
     * build's `Secret`. These variables will be available to all build steps
     * in this build.
     * </pre>
     *
     * <code>repeated string secret_env = 13;</code>
     * @param index The index of the value to return.
     * @return The bytes of the secretEnv at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSecretEnvBytes(int index) {
      return instance.getSecretEnvBytes(index);
    }
    /**
     * <pre>
     * A list of global environment variables, which are encrypted using a Cloud
     * Key Management Service crypto key. These values must be specified in the
     * build's `Secret`. These variables will be available to all build steps
     * in this build.
     * </pre>
     *
     * <code>repeated string secret_env = 13;</code>
     * @param index The index to set the value at.
     * @param value The secretEnv to set.
     * @return This builder for chaining.
     */
    public Builder setSecretEnv(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setSecretEnv(index, value);
      return this;
    }
    /**
     * <pre>
     * A list of global environment variables, which are encrypted using a Cloud
     * Key Management Service crypto key. These values must be specified in the
     * build's `Secret`. These variables will be available to all build steps
     * in this build.
     * </pre>
     *
     * <code>repeated string secret_env = 13;</code>
     * @param value The secretEnv to add.
     * @return This builder for chaining.
     */
    public Builder addSecretEnv(
        java.lang.String value) {
      copyOnWrite();
      instance.addSecretEnv(value);
      return this;
    }
    /**
     * <pre>
     * A list of global environment variables, which are encrypted using a Cloud
     * Key Management Service crypto key. These values must be specified in the
     * build's `Secret`. These variables will be available to all build steps
     * in this build.
     * </pre>
     *
     * <code>repeated string secret_env = 13;</code>
     * @param values The secretEnv to add.
     * @return This builder for chaining.
     */
    public Builder addAllSecretEnv(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllSecretEnv(values);
      return this;
    }
    /**
     * <pre>
     * A list of global environment variables, which are encrypted using a Cloud
     * Key Management Service crypto key. These values must be specified in the
     * build's `Secret`. These variables will be available to all build steps
     * in this build.
     * </pre>
     *
     * <code>repeated string secret_env = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearSecretEnv() {
      copyOnWrite();
      instance.clearSecretEnv();
      return this;
    }
    /**
     * <pre>
     * A list of global environment variables, which are encrypted using a Cloud
     * Key Management Service crypto key. These values must be specified in the
     * build's `Secret`. These variables will be available to all build steps
     * in this build.
     * </pre>
     *
     * <code>repeated string secret_env = 13;</code>
     * @param value The bytes of the secretEnv to add.
     * @return This builder for chaining.
     */
    public Builder addSecretEnvBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addSecretEnvBytes(value);
      return this;
    }

    /**
     * <pre>
     * Global list of volumes to mount for ALL build steps
     * Each volume is created as an empty volume prior to starting the build
     * process. Upon completion of the build, volumes and their contents are
     * discarded. Global volume names and paths cannot conflict with the volumes
     * defined a build step.
     * Using a global volume in a build with only one step is not valid as
     * it is indicative of a build request with an incorrect configuration.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
     */
    @java.lang.Override
    public java.util.List<google.events.cloud.cloudbuild.v1.Volume> getVolumesList() {
      return java.util.Collections.unmodifiableList(
          instance.getVolumesList());
    }
    /**
     * <pre>
     * Global list of volumes to mount for ALL build steps
     * Each volume is created as an empty volume prior to starting the build
     * process. Upon completion of the build, volumes and their contents are
     * discarded. Global volume names and paths cannot conflict with the volumes
     * defined a build step.
     * Using a global volume in a build with only one step is not valid as
     * it is indicative of a build request with an incorrect configuration.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
     */
    @java.lang.Override
    public int getVolumesCount() {
      return instance.getVolumesCount();
    }/**
     * <pre>
     * Global list of volumes to mount for ALL build steps
     * Each volume is created as an empty volume prior to starting the build
     * process. Upon completion of the build, volumes and their contents are
     * discarded. Global volume names and paths cannot conflict with the volumes
     * defined a build step.
     * Using a global volume in a build with only one step is not valid as
     * it is indicative of a build request with an incorrect configuration.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.Volume getVolumes(int index) {
      return instance.getVolumes(index);
    }
    /**
     * <pre>
     * Global list of volumes to mount for ALL build steps
     * Each volume is created as an empty volume prior to starting the build
     * process. Upon completion of the build, volumes and their contents are
     * discarded. Global volume names and paths cannot conflict with the volumes
     * defined a build step.
     * Using a global volume in a build with only one step is not valid as
     * it is indicative of a build request with an incorrect configuration.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
     */
    public Builder setVolumes(
        int index, google.events.cloud.cloudbuild.v1.Volume value) {
      copyOnWrite();
      instance.setVolumes(index, value);
      return this;
    }
    /**
     * <pre>
     * Global list of volumes to mount for ALL build steps
     * Each volume is created as an empty volume prior to starting the build
     * process. Upon completion of the build, volumes and their contents are
     * discarded. Global volume names and paths cannot conflict with the volumes
     * defined a build step.
     * Using a global volume in a build with only one step is not valid as
     * it is indicative of a build request with an incorrect configuration.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
     */
    public Builder setVolumes(
        int index, google.events.cloud.cloudbuild.v1.Volume.Builder builderForValue) {
      copyOnWrite();
      instance.setVolumes(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Global list of volumes to mount for ALL build steps
     * Each volume is created as an empty volume prior to starting the build
     * process. Upon completion of the build, volumes and their contents are
     * discarded. Global volume names and paths cannot conflict with the volumes
     * defined a build step.
     * Using a global volume in a build with only one step is not valid as
     * it is indicative of a build request with an incorrect configuration.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
     */
    public Builder addVolumes(google.events.cloud.cloudbuild.v1.Volume value) {
      copyOnWrite();
      instance.addVolumes(value);
      return this;
    }
    /**
     * <pre>
     * Global list of volumes to mount for ALL build steps
     * Each volume is created as an empty volume prior to starting the build
     * process. Upon completion of the build, volumes and their contents are
     * discarded. Global volume names and paths cannot conflict with the volumes
     * defined a build step.
     * Using a global volume in a build with only one step is not valid as
     * it is indicative of a build request with an incorrect configuration.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
     */
    public Builder addVolumes(
        int index, google.events.cloud.cloudbuild.v1.Volume value) {
      copyOnWrite();
      instance.addVolumes(index, value);
      return this;
    }
    /**
     * <pre>
     * Global list of volumes to mount for ALL build steps
     * Each volume is created as an empty volume prior to starting the build
     * process. Upon completion of the build, volumes and their contents are
     * discarded. Global volume names and paths cannot conflict with the volumes
     * defined a build step.
     * Using a global volume in a build with only one step is not valid as
     * it is indicative of a build request with an incorrect configuration.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
     */
    public Builder addVolumes(
        google.events.cloud.cloudbuild.v1.Volume.Builder builderForValue) {
      copyOnWrite();
      instance.addVolumes(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Global list of volumes to mount for ALL build steps
     * Each volume is created as an empty volume prior to starting the build
     * process. Upon completion of the build, volumes and their contents are
     * discarded. Global volume names and paths cannot conflict with the volumes
     * defined a build step.
     * Using a global volume in a build with only one step is not valid as
     * it is indicative of a build request with an incorrect configuration.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
     */
    public Builder addVolumes(
        int index, google.events.cloud.cloudbuild.v1.Volume.Builder builderForValue) {
      copyOnWrite();
      instance.addVolumes(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Global list of volumes to mount for ALL build steps
     * Each volume is created as an empty volume prior to starting the build
     * process. Upon completion of the build, volumes and their contents are
     * discarded. Global volume names and paths cannot conflict with the volumes
     * defined a build step.
     * Using a global volume in a build with only one step is not valid as
     * it is indicative of a build request with an incorrect configuration.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
     */
    public Builder addAllVolumes(
        java.lang.Iterable<? extends google.events.cloud.cloudbuild.v1.Volume> values) {
      copyOnWrite();
      instance.addAllVolumes(values);
      return this;
    }
    /**
     * <pre>
     * Global list of volumes to mount for ALL build steps
     * Each volume is created as an empty volume prior to starting the build
     * process. Upon completion of the build, volumes and their contents are
     * discarded. Global volume names and paths cannot conflict with the volumes
     * defined a build step.
     * Using a global volume in a build with only one step is not valid as
     * it is indicative of a build request with an incorrect configuration.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
     */
    public Builder clearVolumes() {
      copyOnWrite();
      instance.clearVolumes();
      return this;
    }
    /**
     * <pre>
     * Global list of volumes to mount for ALL build steps
     * Each volume is created as an empty volume prior to starting the build
     * process. Upon completion of the build, volumes and their contents are
     * discarded. Global volume names and paths cannot conflict with the volumes
     * defined a build step.
     * Using a global volume in a build with only one step is not valid as
     * it is indicative of a build request with an incorrect configuration.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Volume volumes = 14;</code>
     */
    public Builder removeVolumes(int index) {
      copyOnWrite();
      instance.removeVolumes(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.cloudbuild.v1.BuildOptions)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.cloud.cloudbuild.v1.BuildOptions();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "sourceProvenanceHash_",
            "requestedVerifyOption_",
            "machineType_",
            "substitutionOption_",
            "logStreamingOption_",
            "diskSizeGb_",
            "workerPool_",
            "logging_",
            "env_",
            "secretEnv_",
            "volumes_",
            google.events.cloud.cloudbuild.v1.Volume.class,
          };
          java.lang.String info =
              "\u0000\u000b\u0000\u0000\u0001\u000e\u000b\u0000\u0004\u0000\u0001,\u0002\f\u0003" +
              "\f\u0004\f\u0005\f\u0006\u0002\u0007\u0208\u000b\f\f\u021a\r\u021a\u000e\u001b";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.cloud.cloudbuild.v1.BuildOptions> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.cloud.cloudbuild.v1.BuildOptions.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.cloud.cloudbuild.v1.BuildOptions>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.cloud.cloudbuild.v1.BuildOptions)
  private static final google.events.cloud.cloudbuild.v1.BuildOptions DEFAULT_INSTANCE;
  static {
    BuildOptions defaultInstance = new BuildOptions();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      BuildOptions.class, defaultInstance);
  }

  public static google.events.cloud.cloudbuild.v1.BuildOptions getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<BuildOptions> PARSER;

  public static com.google.protobuf.Parser<BuildOptions> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

