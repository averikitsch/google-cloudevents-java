// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/cloudbuild/v1/data.proto

package google.events.cloud.cloudbuild.v1;

/**
 * <pre>
 * Build event data for Google Cloud Platform API operations.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.cloudbuild.v1.BuildEventData}
 */
public  final class BuildEventData extends
    com.google.protobuf.GeneratedMessageLite<
        BuildEventData, BuildEventData.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.cloudbuild.v1.BuildEventData)
    BuildEventDataOrBuilder {
  private BuildEventData() {
    id_ = "";
    projectId_ = "";
    statusDetail_ = "";
    steps_ = emptyProtobufList();
    images_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    logsBucket_ = "";
    buildTriggerId_ = "";
    logUrl_ = "";
    tags_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    secrets_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Possible status of a build or build step.
   * </pre>
   *
   * Protobuf enum {@code google.events.cloud.cloudbuild.v1.BuildEventData.Status}
   */
  public enum Status
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Status of the build is unknown.
     * </pre>
     *
     * <code>STATUS_UNKNOWN = 0;</code>
     */
    STATUS_UNKNOWN(0),
    /**
     * <pre>
     * Build or step is queued; work has not yet begun.
     * </pre>
     *
     * <code>QUEUED = 1;</code>
     */
    QUEUED(1),
    /**
     * <pre>
     * Build or step is being executed.
     * </pre>
     *
     * <code>WORKING = 2;</code>
     */
    WORKING(2),
    /**
     * <pre>
     * Build or step finished successfully.
     * </pre>
     *
     * <code>SUCCESS = 3;</code>
     */
    SUCCESS(3),
    /**
     * <pre>
     * Build or step failed to complete successfully.
     * </pre>
     *
     * <code>FAILURE = 4;</code>
     */
    FAILURE(4),
    /**
     * <pre>
     * Build or step failed due to an internal cause.
     * </pre>
     *
     * <code>INTERNAL_ERROR = 5;</code>
     */
    INTERNAL_ERROR(5),
    /**
     * <pre>
     * Build or step took longer than was allowed.
     * </pre>
     *
     * <code>TIMEOUT = 6;</code>
     */
    TIMEOUT(6),
    /**
     * <pre>
     * Build or step was canceled by a user.
     * </pre>
     *
     * <code>CANCELLED = 7;</code>
     */
    CANCELLED(7),
    /**
     * <pre>
     * Build was enqueued for longer than the value of `queue_ttl`.
     * </pre>
     *
     * <code>EXPIRED = 9;</code>
     */
    EXPIRED(9),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Status of the build is unknown.
     * </pre>
     *
     * <code>STATUS_UNKNOWN = 0;</code>
     */
    public static final int STATUS_UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * Build or step is queued; work has not yet begun.
     * </pre>
     *
     * <code>QUEUED = 1;</code>
     */
    public static final int QUEUED_VALUE = 1;
    /**
     * <pre>
     * Build or step is being executed.
     * </pre>
     *
     * <code>WORKING = 2;</code>
     */
    public static final int WORKING_VALUE = 2;
    /**
     * <pre>
     * Build or step finished successfully.
     * </pre>
     *
     * <code>SUCCESS = 3;</code>
     */
    public static final int SUCCESS_VALUE = 3;
    /**
     * <pre>
     * Build or step failed to complete successfully.
     * </pre>
     *
     * <code>FAILURE = 4;</code>
     */
    public static final int FAILURE_VALUE = 4;
    /**
     * <pre>
     * Build or step failed due to an internal cause.
     * </pre>
     *
     * <code>INTERNAL_ERROR = 5;</code>
     */
    public static final int INTERNAL_ERROR_VALUE = 5;
    /**
     * <pre>
     * Build or step took longer than was allowed.
     * </pre>
     *
     * <code>TIMEOUT = 6;</code>
     */
    public static final int TIMEOUT_VALUE = 6;
    /**
     * <pre>
     * Build or step was canceled by a user.
     * </pre>
     *
     * <code>CANCELLED = 7;</code>
     */
    public static final int CANCELLED_VALUE = 7;
    /**
     * <pre>
     * Build was enqueued for longer than the value of `queue_ttl`.
     * </pre>
     *
     * <code>EXPIRED = 9;</code>
     */
    public static final int EXPIRED_VALUE = 9;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Status valueOf(int value) {
      return forNumber(value);
    }

    public static Status forNumber(int value) {
      switch (value) {
        case 0: return STATUS_UNKNOWN;
        case 1: return QUEUED;
        case 2: return WORKING;
        case 3: return SUCCESS;
        case 4: return FAILURE;
        case 5: return INTERNAL_ERROR;
        case 6: return TIMEOUT;
        case 7: return CANCELLED;
        case 9: return EXPIRED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Status> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Status>() {
            @java.lang.Override
            public Status findValueByNumber(int number) {
              return Status.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return StatusVerifier.INSTANCE;
    }

    private static final class StatusVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new StatusVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return Status.forNumber(number) != null;
            }
          };

    private final int value;

    private Status(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:google.events.cloud.cloudbuild.v1.BuildEventData.Status)
  }

  public static final int ID_FIELD_NUMBER = 1;
  private java.lang.String id_;
  /**
   * <pre>
   * Unique identifier of the build.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    return id_;
  }
  /**
   * <pre>
   * Unique identifier of the build.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(id_);
  }
  /**
   * <pre>
   * Unique identifier of the build.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @param value The id to set.
   */
  private void setId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    id_ = value;
  }
  /**
   * <pre>
   * Unique identifier of the build.
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  private void clearId() {
    
    id_ = getDefaultInstance().getId();
  }
  /**
   * <pre>
   * Unique identifier of the build.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @param value The bytes for id to set.
   */
  private void setIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    id_ = value.toStringUtf8();
    
  }

  public static final int PROJECT_ID_FIELD_NUMBER = 16;
  private java.lang.String projectId_;
  /**
   * <pre>
   * ID of the project.
   * </pre>
   *
   * <code>string project_id = 16;</code>
   * @return The projectId.
   */
  @java.lang.Override
  public java.lang.String getProjectId() {
    return projectId_;
  }
  /**
   * <pre>
   * ID of the project.
   * </pre>
   *
   * <code>string project_id = 16;</code>
   * @return The bytes for projectId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getProjectIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(projectId_);
  }
  /**
   * <pre>
   * ID of the project.
   * </pre>
   *
   * <code>string project_id = 16;</code>
   * @param value The projectId to set.
   */
  private void setProjectId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    projectId_ = value;
  }
  /**
   * <pre>
   * ID of the project.
   * </pre>
   *
   * <code>string project_id = 16;</code>
   */
  private void clearProjectId() {
    
    projectId_ = getDefaultInstance().getProjectId();
  }
  /**
   * <pre>
   * ID of the project.
   * </pre>
   *
   * <code>string project_id = 16;</code>
   * @param value The bytes for projectId to set.
   */
  private void setProjectIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    projectId_ = value.toStringUtf8();
    
  }

  public static final int STATUS_FIELD_NUMBER = 2;
  private int status_;
  /**
   * <pre>
   * Status of the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildEventData.Status status = 2;</code>
   * @return The enum numeric value on the wire for status.
   */
  @java.lang.Override
  public int getStatusValue() {
    return status_;
  }
  /**
   * <pre>
   * Status of the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildEventData.Status status = 2;</code>
   * @return The status.
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.BuildEventData.Status getStatus() {
    google.events.cloud.cloudbuild.v1.BuildEventData.Status result = google.events.cloud.cloudbuild.v1.BuildEventData.Status.forNumber(status_);
    return result == null ? google.events.cloud.cloudbuild.v1.BuildEventData.Status.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Status of the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildEventData.Status status = 2;</code>
   * @param value The enum numeric value on the wire for status to set.
   */
  private void setStatusValue(int value) {
      status_ = value;
  }
  /**
   * <pre>
   * Status of the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildEventData.Status status = 2;</code>
   * @param value The status to set.
   */
  private void setStatus(google.events.cloud.cloudbuild.v1.BuildEventData.Status value) {
    status_ = value.getNumber();
    
  }
  /**
   * <pre>
   * Status of the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildEventData.Status status = 2;</code>
   */
  private void clearStatus() {
    
    status_ = 0;
  }

  public static final int STATUS_DETAIL_FIELD_NUMBER = 24;
  private java.lang.String statusDetail_;
  /**
   * <pre>
   * Customer-readable message about the current status.
   * </pre>
   *
   * <code>string status_detail = 24;</code>
   * @return The statusDetail.
   */
  @java.lang.Override
  public java.lang.String getStatusDetail() {
    return statusDetail_;
  }
  /**
   * <pre>
   * Customer-readable message about the current status.
   * </pre>
   *
   * <code>string status_detail = 24;</code>
   * @return The bytes for statusDetail.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStatusDetailBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(statusDetail_);
  }
  /**
   * <pre>
   * Customer-readable message about the current status.
   * </pre>
   *
   * <code>string status_detail = 24;</code>
   * @param value The statusDetail to set.
   */
  private void setStatusDetail(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    statusDetail_ = value;
  }
  /**
   * <pre>
   * Customer-readable message about the current status.
   * </pre>
   *
   * <code>string status_detail = 24;</code>
   */
  private void clearStatusDetail() {
    
    statusDetail_ = getDefaultInstance().getStatusDetail();
  }
  /**
   * <pre>
   * Customer-readable message about the current status.
   * </pre>
   *
   * <code>string status_detail = 24;</code>
   * @param value The bytes for statusDetail to set.
   */
  private void setStatusDetailBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    statusDetail_ = value.toStringUtf8();
    
  }

  public static final int SOURCE_FIELD_NUMBER = 3;
  private google.events.cloud.cloudbuild.v1.Source source_;
  /**
   * <pre>
   * The location of the source files to build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
   */
  @java.lang.Override
  public boolean hasSource() {
    return source_ != null;
  }
  /**
   * <pre>
   * The location of the source files to build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.Source getSource() {
    return source_ == null ? google.events.cloud.cloudbuild.v1.Source.getDefaultInstance() : source_;
  }
  /**
   * <pre>
   * The location of the source files to build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
   */
  private void setSource(google.events.cloud.cloudbuild.v1.Source value) {
    value.getClass();
  source_ = value;
    
    }
  /**
   * <pre>
   * The location of the source files to build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeSource(google.events.cloud.cloudbuild.v1.Source value) {
    value.getClass();
  if (source_ != null &&
        source_ != google.events.cloud.cloudbuild.v1.Source.getDefaultInstance()) {
      source_ =
        google.events.cloud.cloudbuild.v1.Source.newBuilder(source_).mergeFrom(value).buildPartial();
    } else {
      source_ = value;
    }
    
  }
  /**
   * <pre>
   * The location of the source files to build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
   */
  private void clearSource() {  source_ = null;
    
  }

  public static final int STEPS_FIELD_NUMBER = 11;
  private com.google.protobuf.Internal.ProtobufList<google.events.cloud.cloudbuild.v1.BuildStep> steps_;
  /**
   * <pre>
   * The operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  @java.lang.Override
  public java.util.List<google.events.cloud.cloudbuild.v1.BuildStep> getStepsList() {
    return steps_;
  }
  /**
   * <pre>
   * The operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  public java.util.List<? extends google.events.cloud.cloudbuild.v1.BuildStepOrBuilder> 
      getStepsOrBuilderList() {
    return steps_;
  }
  /**
   * <pre>
   * The operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  @java.lang.Override
  public int getStepsCount() {
    return steps_.size();
  }
  /**
   * <pre>
   * The operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.BuildStep getSteps(int index) {
    return steps_.get(index);
  }
  /**
   * <pre>
   * The operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  public google.events.cloud.cloudbuild.v1.BuildStepOrBuilder getStepsOrBuilder(
      int index) {
    return steps_.get(index);
  }
  private void ensureStepsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<google.events.cloud.cloudbuild.v1.BuildStep> tmp = steps_;
    if (!tmp.isModifiable()) {
      steps_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * The operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  private void setSteps(
      int index, google.events.cloud.cloudbuild.v1.BuildStep value) {
    value.getClass();
  ensureStepsIsMutable();
    steps_.set(index, value);
  }
  /**
   * <pre>
   * The operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  private void addSteps(google.events.cloud.cloudbuild.v1.BuildStep value) {
    value.getClass();
  ensureStepsIsMutable();
    steps_.add(value);
  }
  /**
   * <pre>
   * The operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  private void addSteps(
      int index, google.events.cloud.cloudbuild.v1.BuildStep value) {
    value.getClass();
  ensureStepsIsMutable();
    steps_.add(index, value);
  }
  /**
   * <pre>
   * The operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  private void addAllSteps(
      java.lang.Iterable<? extends google.events.cloud.cloudbuild.v1.BuildStep> values) {
    ensureStepsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, steps_);
  }
  /**
   * <pre>
   * The operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  private void clearSteps() {
    steps_ = emptyProtobufList();
  }
  /**
   * <pre>
   * The operations to be performed on the workspace.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
   */
  private void removeSteps(int index) {
    ensureStepsIsMutable();
    steps_.remove(index);
  }

  public static final int RESULTS_FIELD_NUMBER = 10;
  private google.events.cloud.cloudbuild.v1.Results results_;
  /**
   * <pre>
   * Results of the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
   */
  @java.lang.Override
  public boolean hasResults() {
    return results_ != null;
  }
  /**
   * <pre>
   * Results of the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.Results getResults() {
    return results_ == null ? google.events.cloud.cloudbuild.v1.Results.getDefaultInstance() : results_;
  }
  /**
   * <pre>
   * Results of the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
   */
  private void setResults(google.events.cloud.cloudbuild.v1.Results value) {
    value.getClass();
  results_ = value;
    
    }
  /**
   * <pre>
   * Results of the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeResults(google.events.cloud.cloudbuild.v1.Results value) {
    value.getClass();
  if (results_ != null &&
        results_ != google.events.cloud.cloudbuild.v1.Results.getDefaultInstance()) {
      results_ =
        google.events.cloud.cloudbuild.v1.Results.newBuilder(results_).mergeFrom(value).buildPartial();
    } else {
      results_ = value;
    }
    
  }
  /**
   * <pre>
   * Results of the build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
   */
  private void clearResults() {  results_ = null;
    
  }

  public static final int CREATE_TIME_FIELD_NUMBER = 6;
  private com.google.protobuf.Timestamp createTime_;
  /**
   * <pre>
   * Time at which the request to create the build was received.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6;</code>
   */
  @java.lang.Override
  public boolean hasCreateTime() {
    return createTime_ != null;
  }
  /**
   * <pre>
   * Time at which the request to create the build was received.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   * <pre>
   * Time at which the request to create the build was received.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6;</code>
   */
  private void setCreateTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  createTime_ = value;
    
    }
  /**
   * <pre>
   * Time at which the request to create the build was received.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeCreateTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (createTime_ != null &&
        createTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      createTime_ =
        com.google.protobuf.Timestamp.newBuilder(createTime_).mergeFrom(value).buildPartial();
    } else {
      createTime_ = value;
    }
    
  }
  /**
   * <pre>
   * Time at which the request to create the build was received.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 6;</code>
   */
  private void clearCreateTime() {  createTime_ = null;
    
  }

  public static final int START_TIME_FIELD_NUMBER = 7;
  private com.google.protobuf.Timestamp startTime_;
  /**
   * <pre>
   * Time at which execution of the build was started.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 7;</code>
   */
  @java.lang.Override
  public boolean hasStartTime() {
    return startTime_ != null;
  }
  /**
   * <pre>
   * Time at which execution of the build was started.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 7;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getStartTime() {
    return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
  }
  /**
   * <pre>
   * Time at which execution of the build was started.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 7;</code>
   */
  private void setStartTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  startTime_ = value;
    
    }
  /**
   * <pre>
   * Time at which execution of the build was started.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 7;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeStartTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (startTime_ != null &&
        startTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      startTime_ =
        com.google.protobuf.Timestamp.newBuilder(startTime_).mergeFrom(value).buildPartial();
    } else {
      startTime_ = value;
    }
    
  }
  /**
   * <pre>
   * Time at which execution of the build was started.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 7;</code>
   */
  private void clearStartTime() {  startTime_ = null;
    
  }

  public static final int FINISH_TIME_FIELD_NUMBER = 8;
  private com.google.protobuf.Timestamp finishTime_;
  /**
   * <pre>
   * Time at which execution of the build was finished.
   * The difference between finish_time and start_time is the duration of the
   * build's execution.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp finish_time = 8;</code>
   */
  @java.lang.Override
  public boolean hasFinishTime() {
    return finishTime_ != null;
  }
  /**
   * <pre>
   * Time at which execution of the build was finished.
   * The difference between finish_time and start_time is the duration of the
   * build's execution.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp finish_time = 8;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getFinishTime() {
    return finishTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : finishTime_;
  }
  /**
   * <pre>
   * Time at which execution of the build was finished.
   * The difference between finish_time and start_time is the duration of the
   * build's execution.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp finish_time = 8;</code>
   */
  private void setFinishTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  finishTime_ = value;
    
    }
  /**
   * <pre>
   * Time at which execution of the build was finished.
   * The difference between finish_time and start_time is the duration of the
   * build's execution.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp finish_time = 8;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeFinishTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (finishTime_ != null &&
        finishTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      finishTime_ =
        com.google.protobuf.Timestamp.newBuilder(finishTime_).mergeFrom(value).buildPartial();
    } else {
      finishTime_ = value;
    }
    
  }
  /**
   * <pre>
   * Time at which execution of the build was finished.
   * The difference between finish_time and start_time is the duration of the
   * build's execution.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp finish_time = 8;</code>
   */
  private void clearFinishTime() {  finishTime_ = null;
    
  }

  public static final int TIMEOUT_FIELD_NUMBER = 12;
  private com.google.protobuf.Duration timeout_;
  /**
   * <pre>
   * Amount of time that this build should be allowed to run, to second
   * granularity. If this amount of time elapses, work on the build will cease
   * and the build status will be `TIMEOUT`.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 12;</code>
   */
  @java.lang.Override
  public boolean hasTimeout() {
    return timeout_ != null;
  }
  /**
   * <pre>
   * Amount of time that this build should be allowed to run, to second
   * granularity. If this amount of time elapses, work on the build will cease
   * and the build status will be `TIMEOUT`.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 12;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Duration getTimeout() {
    return timeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : timeout_;
  }
  /**
   * <pre>
   * Amount of time that this build should be allowed to run, to second
   * granularity. If this amount of time elapses, work on the build will cease
   * and the build status will be `TIMEOUT`.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 12;</code>
   */
  private void setTimeout(com.google.protobuf.Duration value) {
    value.getClass();
  timeout_ = value;
    
    }
  /**
   * <pre>
   * Amount of time that this build should be allowed to run, to second
   * granularity. If this amount of time elapses, work on the build will cease
   * and the build status will be `TIMEOUT`.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 12;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeTimeout(com.google.protobuf.Duration value) {
    value.getClass();
  if (timeout_ != null &&
        timeout_ != com.google.protobuf.Duration.getDefaultInstance()) {
      timeout_ =
        com.google.protobuf.Duration.newBuilder(timeout_).mergeFrom(value).buildPartial();
    } else {
      timeout_ = value;
    }
    
  }
  /**
   * <pre>
   * Amount of time that this build should be allowed to run, to second
   * granularity. If this amount of time elapses, work on the build will cease
   * and the build status will be `TIMEOUT`.
   * </pre>
   *
   * <code>.google.protobuf.Duration timeout = 12;</code>
   */
  private void clearTimeout() {  timeout_ = null;
    
  }

  public static final int IMAGES_FIELD_NUMBER = 13;
  private com.google.protobuf.Internal.ProtobufList<java.lang.String> images_;
  /**
   * <pre>
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   * The images are pushed using the builder service account's credentials.
   * The digests of the pushed images will be stored in the `Build` resource's
   * results field.
   * If any of the images fail to be pushed, the build status is marked
   * `FAILURE`.
   * </pre>
   *
   * <code>repeated string images = 13;</code>
   * @return A list containing the images.
   */
  @java.lang.Override
  public java.util.List<java.lang.String> getImagesList() {
    return images_;
  }
  /**
   * <pre>
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   * The images are pushed using the builder service account's credentials.
   * The digests of the pushed images will be stored in the `Build` resource's
   * results field.
   * If any of the images fail to be pushed, the build status is marked
   * `FAILURE`.
   * </pre>
   *
   * <code>repeated string images = 13;</code>
   * @return The count of images.
   */
  @java.lang.Override
  public int getImagesCount() {
    return images_.size();
  }
  /**
   * <pre>
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   * The images are pushed using the builder service account's credentials.
   * The digests of the pushed images will be stored in the `Build` resource's
   * results field.
   * If any of the images fail to be pushed, the build status is marked
   * `FAILURE`.
   * </pre>
   *
   * <code>repeated string images = 13;</code>
   * @param index The index of the element to return.
   * @return The images at the given index.
   */
  @java.lang.Override
  public java.lang.String getImages(int index) {
    return images_.get(index);
  }
  /**
   * <pre>
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   * The images are pushed using the builder service account's credentials.
   * The digests of the pushed images will be stored in the `Build` resource's
   * results field.
   * If any of the images fail to be pushed, the build status is marked
   * `FAILURE`.
   * </pre>
   *
   * <code>repeated string images = 13;</code>
   * @param index The index of the value to return.
   * @return The bytes of the images at the given index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getImagesBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        images_.get(index));
  }
  private void ensureImagesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
        images_;  if (!tmp.isModifiable()) {
      images_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   * The images are pushed using the builder service account's credentials.
   * The digests of the pushed images will be stored in the `Build` resource's
   * results field.
   * If any of the images fail to be pushed, the build status is marked
   * `FAILURE`.
   * </pre>
   *
   * <code>repeated string images = 13;</code>
   * @param index The index to set the value at.
   * @param value The images to set.
   */
  private void setImages(
      int index, java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureImagesIsMutable();
    images_.set(index, value);
  }
  /**
   * <pre>
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   * The images are pushed using the builder service account's credentials.
   * The digests of the pushed images will be stored in the `Build` resource's
   * results field.
   * If any of the images fail to be pushed, the build status is marked
   * `FAILURE`.
   * </pre>
   *
   * <code>repeated string images = 13;</code>
   * @param value The images to add.
   */
  private void addImages(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureImagesIsMutable();
    images_.add(value);
  }
  /**
   * <pre>
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   * The images are pushed using the builder service account's credentials.
   * The digests of the pushed images will be stored in the `Build` resource's
   * results field.
   * If any of the images fail to be pushed, the build status is marked
   * `FAILURE`.
   * </pre>
   *
   * <code>repeated string images = 13;</code>
   * @param values The images to add.
   */
  private void addAllImages(
      java.lang.Iterable<java.lang.String> values) {
    ensureImagesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, images_);
  }
  /**
   * <pre>
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   * The images are pushed using the builder service account's credentials.
   * The digests of the pushed images will be stored in the `Build` resource's
   * results field.
   * If any of the images fail to be pushed, the build status is marked
   * `FAILURE`.
   * </pre>
   *
   * <code>repeated string images = 13;</code>
   */
  private void clearImages() {
    images_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * A list of images to be pushed upon the successful completion of all build
   * steps.
   * The images are pushed using the builder service account's credentials.
   * The digests of the pushed images will be stored in the `Build` resource's
   * results field.
   * If any of the images fail to be pushed, the build status is marked
   * `FAILURE`.
   * </pre>
   *
   * <code>repeated string images = 13;</code>
   * @param value The bytes of the images to add.
   */
  private void addImagesBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    ensureImagesIsMutable();
    images_.add(value.toStringUtf8());
  }

  public static final int QUEUE_TTL_FIELD_NUMBER = 40;
  private com.google.protobuf.Duration queueTtl_;
  /**
   * <pre>
   * TTL in queue for this build. If provided and the build is enqueued longer
   * than this value, the build will expire and the build status will be
   * `EXPIRED`.
   * The TTL starts ticking from create_time.
   * </pre>
   *
   * <code>.google.protobuf.Duration queue_ttl = 40;</code>
   */
  @java.lang.Override
  public boolean hasQueueTtl() {
    return queueTtl_ != null;
  }
  /**
   * <pre>
   * TTL in queue for this build. If provided and the build is enqueued longer
   * than this value, the build will expire and the build status will be
   * `EXPIRED`.
   * The TTL starts ticking from create_time.
   * </pre>
   *
   * <code>.google.protobuf.Duration queue_ttl = 40;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Duration getQueueTtl() {
    return queueTtl_ == null ? com.google.protobuf.Duration.getDefaultInstance() : queueTtl_;
  }
  /**
   * <pre>
   * TTL in queue for this build. If provided and the build is enqueued longer
   * than this value, the build will expire and the build status will be
   * `EXPIRED`.
   * The TTL starts ticking from create_time.
   * </pre>
   *
   * <code>.google.protobuf.Duration queue_ttl = 40;</code>
   */
  private void setQueueTtl(com.google.protobuf.Duration value) {
    value.getClass();
  queueTtl_ = value;
    
    }
  /**
   * <pre>
   * TTL in queue for this build. If provided and the build is enqueued longer
   * than this value, the build will expire and the build status will be
   * `EXPIRED`.
   * The TTL starts ticking from create_time.
   * </pre>
   *
   * <code>.google.protobuf.Duration queue_ttl = 40;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeQueueTtl(com.google.protobuf.Duration value) {
    value.getClass();
  if (queueTtl_ != null &&
        queueTtl_ != com.google.protobuf.Duration.getDefaultInstance()) {
      queueTtl_ =
        com.google.protobuf.Duration.newBuilder(queueTtl_).mergeFrom(value).buildPartial();
    } else {
      queueTtl_ = value;
    }
    
  }
  /**
   * <pre>
   * TTL in queue for this build. If provided and the build is enqueued longer
   * than this value, the build will expire and the build status will be
   * `EXPIRED`.
   * The TTL starts ticking from create_time.
   * </pre>
   *
   * <code>.google.protobuf.Duration queue_ttl = 40;</code>
   */
  private void clearQueueTtl() {  queueTtl_ = null;
    
  }

  public static final int ARTIFACTS_FIELD_NUMBER = 37;
  private google.events.cloud.cloudbuild.v1.Artifacts artifacts_;
  /**
   * <pre>
   * Artifacts produced by the build that should be uploaded upon
   * successful completion of all build steps.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
   */
  @java.lang.Override
  public boolean hasArtifacts() {
    return artifacts_ != null;
  }
  /**
   * <pre>
   * Artifacts produced by the build that should be uploaded upon
   * successful completion of all build steps.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.Artifacts getArtifacts() {
    return artifacts_ == null ? google.events.cloud.cloudbuild.v1.Artifacts.getDefaultInstance() : artifacts_;
  }
  /**
   * <pre>
   * Artifacts produced by the build that should be uploaded upon
   * successful completion of all build steps.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
   */
  private void setArtifacts(google.events.cloud.cloudbuild.v1.Artifacts value) {
    value.getClass();
  artifacts_ = value;
    
    }
  /**
   * <pre>
   * Artifacts produced by the build that should be uploaded upon
   * successful completion of all build steps.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeArtifacts(google.events.cloud.cloudbuild.v1.Artifacts value) {
    value.getClass();
  if (artifacts_ != null &&
        artifacts_ != google.events.cloud.cloudbuild.v1.Artifacts.getDefaultInstance()) {
      artifacts_ =
        google.events.cloud.cloudbuild.v1.Artifacts.newBuilder(artifacts_).mergeFrom(value).buildPartial();
    } else {
      artifacts_ = value;
    }
    
  }
  /**
   * <pre>
   * Artifacts produced by the build that should be uploaded upon
   * successful completion of all build steps.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
   */
  private void clearArtifacts() {  artifacts_ = null;
    
  }

  public static final int LOGS_BUCKET_FIELD_NUMBER = 19;
  private java.lang.String logsBucket_;
  /**
   * <pre>
   * Google Cloud Storage bucket where logs should be written (see
   * [Bucket Name
   * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
   * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
   * </pre>
   *
   * <code>string logs_bucket = 19;</code>
   * @return The logsBucket.
   */
  @java.lang.Override
  public java.lang.String getLogsBucket() {
    return logsBucket_;
  }
  /**
   * <pre>
   * Google Cloud Storage bucket where logs should be written (see
   * [Bucket Name
   * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
   * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
   * </pre>
   *
   * <code>string logs_bucket = 19;</code>
   * @return The bytes for logsBucket.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLogsBucketBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(logsBucket_);
  }
  /**
   * <pre>
   * Google Cloud Storage bucket where logs should be written (see
   * [Bucket Name
   * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
   * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
   * </pre>
   *
   * <code>string logs_bucket = 19;</code>
   * @param value The logsBucket to set.
   */
  private void setLogsBucket(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    logsBucket_ = value;
  }
  /**
   * <pre>
   * Google Cloud Storage bucket where logs should be written (see
   * [Bucket Name
   * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
   * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
   * </pre>
   *
   * <code>string logs_bucket = 19;</code>
   */
  private void clearLogsBucket() {
    
    logsBucket_ = getDefaultInstance().getLogsBucket();
  }
  /**
   * <pre>
   * Google Cloud Storage bucket where logs should be written (see
   * [Bucket Name
   * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
   * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
   * </pre>
   *
   * <code>string logs_bucket = 19;</code>
   * @param value The bytes for logsBucket to set.
   */
  private void setLogsBucketBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    logsBucket_ = value.toStringUtf8();
    
  }

  public static final int SOURCE_PROVENANCE_FIELD_NUMBER = 21;
  private google.events.cloud.cloudbuild.v1.SourceProvenance sourceProvenance_;
  /**
   * <pre>
   * A permanent fixed identifier for source.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
   */
  @java.lang.Override
  public boolean hasSourceProvenance() {
    return sourceProvenance_ != null;
  }
  /**
   * <pre>
   * A permanent fixed identifier for source.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.SourceProvenance getSourceProvenance() {
    return sourceProvenance_ == null ? google.events.cloud.cloudbuild.v1.SourceProvenance.getDefaultInstance() : sourceProvenance_;
  }
  /**
   * <pre>
   * A permanent fixed identifier for source.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
   */
  private void setSourceProvenance(google.events.cloud.cloudbuild.v1.SourceProvenance value) {
    value.getClass();
  sourceProvenance_ = value;
    
    }
  /**
   * <pre>
   * A permanent fixed identifier for source.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeSourceProvenance(google.events.cloud.cloudbuild.v1.SourceProvenance value) {
    value.getClass();
  if (sourceProvenance_ != null &&
        sourceProvenance_ != google.events.cloud.cloudbuild.v1.SourceProvenance.getDefaultInstance()) {
      sourceProvenance_ =
        google.events.cloud.cloudbuild.v1.SourceProvenance.newBuilder(sourceProvenance_).mergeFrom(value).buildPartial();
    } else {
      sourceProvenance_ = value;
    }
    
  }
  /**
   * <pre>
   * A permanent fixed identifier for source.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
   */
  private void clearSourceProvenance() {  sourceProvenance_ = null;
    
  }

  public static final int BUILD_TRIGGER_ID_FIELD_NUMBER = 22;
  private java.lang.String buildTriggerId_;
  /**
   * <pre>
   * The ID of the `BuildTrigger` that triggered this build, if it
   * was triggered automatically.
   * </pre>
   *
   * <code>string build_trigger_id = 22;</code>
   * @return The buildTriggerId.
   */
  @java.lang.Override
  public java.lang.String getBuildTriggerId() {
    return buildTriggerId_;
  }
  /**
   * <pre>
   * The ID of the `BuildTrigger` that triggered this build, if it
   * was triggered automatically.
   * </pre>
   *
   * <code>string build_trigger_id = 22;</code>
   * @return The bytes for buildTriggerId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getBuildTriggerIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(buildTriggerId_);
  }
  /**
   * <pre>
   * The ID of the `BuildTrigger` that triggered this build, if it
   * was triggered automatically.
   * </pre>
   *
   * <code>string build_trigger_id = 22;</code>
   * @param value The buildTriggerId to set.
   */
  private void setBuildTriggerId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    buildTriggerId_ = value;
  }
  /**
   * <pre>
   * The ID of the `BuildTrigger` that triggered this build, if it
   * was triggered automatically.
   * </pre>
   *
   * <code>string build_trigger_id = 22;</code>
   */
  private void clearBuildTriggerId() {
    
    buildTriggerId_ = getDefaultInstance().getBuildTriggerId();
  }
  /**
   * <pre>
   * The ID of the `BuildTrigger` that triggered this build, if it
   * was triggered automatically.
   * </pre>
   *
   * <code>string build_trigger_id = 22;</code>
   * @param value The bytes for buildTriggerId to set.
   */
  private void setBuildTriggerIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    buildTriggerId_ = value.toStringUtf8();
    
  }

  public static final int OPTIONS_FIELD_NUMBER = 23;
  private google.events.cloud.cloudbuild.v1.BuildOptions options_;
  /**
   * <pre>
   * Special options for this build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
   */
  @java.lang.Override
  public boolean hasOptions() {
    return options_ != null;
  }
  /**
   * <pre>
   * Special options for this build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.BuildOptions getOptions() {
    return options_ == null ? google.events.cloud.cloudbuild.v1.BuildOptions.getDefaultInstance() : options_;
  }
  /**
   * <pre>
   * Special options for this build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
   */
  private void setOptions(google.events.cloud.cloudbuild.v1.BuildOptions value) {
    value.getClass();
  options_ = value;
    
    }
  /**
   * <pre>
   * Special options for this build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeOptions(google.events.cloud.cloudbuild.v1.BuildOptions value) {
    value.getClass();
  if (options_ != null &&
        options_ != google.events.cloud.cloudbuild.v1.BuildOptions.getDefaultInstance()) {
      options_ =
        google.events.cloud.cloudbuild.v1.BuildOptions.newBuilder(options_).mergeFrom(value).buildPartial();
    } else {
      options_ = value;
    }
    
  }
  /**
   * <pre>
   * Special options for this build.
   * </pre>
   *
   * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
   */
  private void clearOptions() {  options_ = null;
    
  }

  public static final int LOG_URL_FIELD_NUMBER = 25;
  private java.lang.String logUrl_;
  /**
   * <pre>
   * URL to logs for this build in Google Cloud Console.
   * </pre>
   *
   * <code>string log_url = 25;</code>
   * @return The logUrl.
   */
  @java.lang.Override
  public java.lang.String getLogUrl() {
    return logUrl_;
  }
  /**
   * <pre>
   * URL to logs for this build in Google Cloud Console.
   * </pre>
   *
   * <code>string log_url = 25;</code>
   * @return The bytes for logUrl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLogUrlBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(logUrl_);
  }
  /**
   * <pre>
   * URL to logs for this build in Google Cloud Console.
   * </pre>
   *
   * <code>string log_url = 25;</code>
   * @param value The logUrl to set.
   */
  private void setLogUrl(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    logUrl_ = value;
  }
  /**
   * <pre>
   * URL to logs for this build in Google Cloud Console.
   * </pre>
   *
   * <code>string log_url = 25;</code>
   */
  private void clearLogUrl() {
    
    logUrl_ = getDefaultInstance().getLogUrl();
  }
  /**
   * <pre>
   * URL to logs for this build in Google Cloud Console.
   * </pre>
   *
   * <code>string log_url = 25;</code>
   * @param value The bytes for logUrl to set.
   */
  private void setLogUrlBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    logUrl_ = value.toStringUtf8();
    
  }

  public static final int SUBSTITUTIONS_FIELD_NUMBER = 29;
  private static final class SubstitutionsDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.String> substitutions_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetSubstitutions() {
    return substitutions_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetMutableSubstitutions() {
    if (!substitutions_.isMutable()) {
      substitutions_ = substitutions_.mutableCopy();
    }
    return substitutions_;
  }
  @java.lang.Override

  public int getSubstitutionsCount() {
    return internalGetSubstitutions().size();
  }
  /**
   * <pre>
   * Substitutions data for `Build` resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 29;</code>
   */
  @java.lang.Override

  public boolean containsSubstitutions(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetSubstitutions().containsKey(key);
  }
  /**
   * Use {@link #getSubstitutionsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getSubstitutions() {
    return getSubstitutionsMap();
  }
  /**
   * <pre>
   * Substitutions data for `Build` resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 29;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getSubstitutionsMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetSubstitutions());
  }
  /**
   * <pre>
   * Substitutions data for `Build` resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 29;</code>
   */
  @java.lang.Override

  public java.lang.String getSubstitutionsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetSubstitutions();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Substitutions data for `Build` resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 29;</code>
   */
  @java.lang.Override

  public java.lang.String getSubstitutionsOrThrow(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetSubstitutions();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * Substitutions data for `Build` resource.
   * </pre>
   *
   * <code>map&lt;string, string&gt; substitutions = 29;</code>
   */
  private java.util.Map<java.lang.String, java.lang.String>
  getMutableSubstitutionsMap() {
    return internalGetMutableSubstitutions();
  }

  public static final int TAGS_FIELD_NUMBER = 31;
  private com.google.protobuf.Internal.ProtobufList<java.lang.String> tags_;
  /**
   * <pre>
   * Tags for annotation of a `Build`. These are not docker tags.
   * </pre>
   *
   * <code>repeated string tags = 31;</code>
   * @return A list containing the tags.
   */
  @java.lang.Override
  public java.util.List<java.lang.String> getTagsList() {
    return tags_;
  }
  /**
   * <pre>
   * Tags for annotation of a `Build`. These are not docker tags.
   * </pre>
   *
   * <code>repeated string tags = 31;</code>
   * @return The count of tags.
   */
  @java.lang.Override
  public int getTagsCount() {
    return tags_.size();
  }
  /**
   * <pre>
   * Tags for annotation of a `Build`. These are not docker tags.
   * </pre>
   *
   * <code>repeated string tags = 31;</code>
   * @param index The index of the element to return.
   * @return The tags at the given index.
   */
  @java.lang.Override
  public java.lang.String getTags(int index) {
    return tags_.get(index);
  }
  /**
   * <pre>
   * Tags for annotation of a `Build`. These are not docker tags.
   * </pre>
   *
   * <code>repeated string tags = 31;</code>
   * @param index The index of the value to return.
   * @return The bytes of the tags at the given index.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTagsBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        tags_.get(index));
  }
  private void ensureTagsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
        tags_;  if (!tmp.isModifiable()) {
      tags_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }
  /**
   * <pre>
   * Tags for annotation of a `Build`. These are not docker tags.
   * </pre>
   *
   * <code>repeated string tags = 31;</code>
   * @param index The index to set the value at.
   * @param value The tags to set.
   */
  private void setTags(
      int index, java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureTagsIsMutable();
    tags_.set(index, value);
  }
  /**
   * <pre>
   * Tags for annotation of a `Build`. These are not docker tags.
   * </pre>
   *
   * <code>repeated string tags = 31;</code>
   * @param value The tags to add.
   */
  private void addTags(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  ensureTagsIsMutable();
    tags_.add(value);
  }
  /**
   * <pre>
   * Tags for annotation of a `Build`. These are not docker tags.
   * </pre>
   *
   * <code>repeated string tags = 31;</code>
   * @param values The tags to add.
   */
  private void addAllTags(
      java.lang.Iterable<java.lang.String> values) {
    ensureTagsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, tags_);
  }
  /**
   * <pre>
   * Tags for annotation of a `Build`. These are not docker tags.
   * </pre>
   *
   * <code>repeated string tags = 31;</code>
   */
  private void clearTags() {
    tags_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * Tags for annotation of a `Build`. These are not docker tags.
   * </pre>
   *
   * <code>repeated string tags = 31;</code>
   * @param value The bytes of the tags to add.
   */
  private void addTagsBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    ensureTagsIsMutable();
    tags_.add(value.toStringUtf8());
  }

  public static final int SECRETS_FIELD_NUMBER = 32;
  private com.google.protobuf.Internal.ProtobufList<google.events.cloud.cloudbuild.v1.Secret> secrets_;
  /**
   * <pre>
   * Secrets to decrypt using Cloud Key Management Service.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
   */
  @java.lang.Override
  public java.util.List<google.events.cloud.cloudbuild.v1.Secret> getSecretsList() {
    return secrets_;
  }
  /**
   * <pre>
   * Secrets to decrypt using Cloud Key Management Service.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
   */
  public java.util.List<? extends google.events.cloud.cloudbuild.v1.SecretOrBuilder> 
      getSecretsOrBuilderList() {
    return secrets_;
  }
  /**
   * <pre>
   * Secrets to decrypt using Cloud Key Management Service.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
   */
  @java.lang.Override
  public int getSecretsCount() {
    return secrets_.size();
  }
  /**
   * <pre>
   * Secrets to decrypt using Cloud Key Management Service.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
   */
  @java.lang.Override
  public google.events.cloud.cloudbuild.v1.Secret getSecrets(int index) {
    return secrets_.get(index);
  }
  /**
   * <pre>
   * Secrets to decrypt using Cloud Key Management Service.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
   */
  public google.events.cloud.cloudbuild.v1.SecretOrBuilder getSecretsOrBuilder(
      int index) {
    return secrets_.get(index);
  }
  private void ensureSecretsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<google.events.cloud.cloudbuild.v1.Secret> tmp = secrets_;
    if (!tmp.isModifiable()) {
      secrets_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * Secrets to decrypt using Cloud Key Management Service.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
   */
  private void setSecrets(
      int index, google.events.cloud.cloudbuild.v1.Secret value) {
    value.getClass();
  ensureSecretsIsMutable();
    secrets_.set(index, value);
  }
  /**
   * <pre>
   * Secrets to decrypt using Cloud Key Management Service.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
   */
  private void addSecrets(google.events.cloud.cloudbuild.v1.Secret value) {
    value.getClass();
  ensureSecretsIsMutable();
    secrets_.add(value);
  }
  /**
   * <pre>
   * Secrets to decrypt using Cloud Key Management Service.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
   */
  private void addSecrets(
      int index, google.events.cloud.cloudbuild.v1.Secret value) {
    value.getClass();
  ensureSecretsIsMutable();
    secrets_.add(index, value);
  }
  /**
   * <pre>
   * Secrets to decrypt using Cloud Key Management Service.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
   */
  private void addAllSecrets(
      java.lang.Iterable<? extends google.events.cloud.cloudbuild.v1.Secret> values) {
    ensureSecretsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, secrets_);
  }
  /**
   * <pre>
   * Secrets to decrypt using Cloud Key Management Service.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
   */
  private void clearSecrets() {
    secrets_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Secrets to decrypt using Cloud Key Management Service.
   * </pre>
   *
   * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
   */
  private void removeSecrets(int index) {
    ensureSecretsIsMutable();
    secrets_.remove(index);
  }

  public static final int TIMING_FIELD_NUMBER = 33;
  private static final class TimingDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                google.events.cloud.cloudbuild.v1.TimeSpan.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan> timing_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan>
  internalGetTiming() {
    return timing_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan>
  internalGetMutableTiming() {
    if (!timing_.isMutable()) {
      timing_ = timing_.mutableCopy();
    }
    return timing_;
  }
  @java.lang.Override

  public int getTimingCount() {
    return internalGetTiming().size();
  }
  /**
   * <pre>
   * Stores timing information for phases of the build. Valid keys
   * are:
   * * BUILD: time to execute all build steps
   * * PUSH: time to push all specified images.
   * * FETCHSOURCE: time to fetch source.
   * If the build does not specify source or images,
   * these keys will not be included.
   * </pre>
   *
   * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
   */
  @java.lang.Override

  public boolean containsTiming(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetTiming().containsKey(key);
  }
  /**
   * Use {@link #getTimingMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan> getTiming() {
    return getTimingMap();
  }
  /**
   * <pre>
   * Stores timing information for phases of the build. Valid keys
   * are:
   * * BUILD: time to execute all build steps
   * * PUSH: time to push all specified images.
   * * FETCHSOURCE: time to fetch source.
   * If the build does not specify source or images,
   * these keys will not be included.
   * </pre>
   *
   * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan> getTimingMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetTiming());
  }
  /**
   * <pre>
   * Stores timing information for phases of the build. Valid keys
   * are:
   * * BUILD: time to execute all build steps
   * * PUSH: time to push all specified images.
   * * FETCHSOURCE: time to fetch source.
   * If the build does not specify source or images,
   * these keys will not be included.
   * </pre>
   *
   * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
   */
  @java.lang.Override

  public google.events.cloud.cloudbuild.v1.TimeSpan getTimingOrDefault(
      java.lang.String key,
      google.events.cloud.cloudbuild.v1.TimeSpan defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan> map =
        internalGetTiming();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Stores timing information for phases of the build. Valid keys
   * are:
   * * BUILD: time to execute all build steps
   * * PUSH: time to push all specified images.
   * * FETCHSOURCE: time to fetch source.
   * If the build does not specify source or images,
   * these keys will not be included.
   * </pre>
   *
   * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
   */
  @java.lang.Override

  public google.events.cloud.cloudbuild.v1.TimeSpan getTimingOrThrow(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan> map =
        internalGetTiming();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * Stores timing information for phases of the build. Valid keys
   * are:
   * * BUILD: time to execute all build steps
   * * PUSH: time to push all specified images.
   * * FETCHSOURCE: time to fetch source.
   * If the build does not specify source or images,
   * these keys will not be included.
   * </pre>
   *
   * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
   */
  private java.util.Map<java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan>
  getMutableTimingMap() {
    return internalGetMutableTiming();
  }

  public static google.events.cloud.cloudbuild.v1.BuildEventData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.cloudbuild.v1.BuildEventData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuildEventData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.cloudbuild.v1.BuildEventData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuildEventData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.cloudbuild.v1.BuildEventData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuildEventData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.cloudbuild.v1.BuildEventData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuildEventData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.cloudbuild.v1.BuildEventData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.cloudbuild.v1.BuildEventData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.cloudbuild.v1.BuildEventData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.cloud.cloudbuild.v1.BuildEventData prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Build event data for Google Cloud Platform API operations.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.cloudbuild.v1.BuildEventData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.cloud.cloudbuild.v1.BuildEventData, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.cloudbuild.v1.BuildEventData)
      google.events.cloud.cloudbuild.v1.BuildEventDataOrBuilder {
    // Construct using google.events.cloud.cloudbuild.v1.BuildEventData.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Unique identifier of the build.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      return instance.getId();
    }
    /**
     * <pre>
     * Unique identifier of the build.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      return instance.getIdBytes();
    }
    /**
     * <pre>
     * Unique identifier of the build.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      copyOnWrite();
      instance.setId(value);
      return this;
    }
    /**
     * <pre>
     * Unique identifier of the build.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      copyOnWrite();
      instance.clearId();
      return this;
    }
    /**
     * <pre>
     * Unique identifier of the build.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * ID of the project.
     * </pre>
     *
     * <code>string project_id = 16;</code>
     * @return The projectId.
     */
    @java.lang.Override
    public java.lang.String getProjectId() {
      return instance.getProjectId();
    }
    /**
     * <pre>
     * ID of the project.
     * </pre>
     *
     * <code>string project_id = 16;</code>
     * @return The bytes for projectId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProjectIdBytes() {
      return instance.getProjectIdBytes();
    }
    /**
     * <pre>
     * ID of the project.
     * </pre>
     *
     * <code>string project_id = 16;</code>
     * @param value The projectId to set.
     * @return This builder for chaining.
     */
    public Builder setProjectId(
        java.lang.String value) {
      copyOnWrite();
      instance.setProjectId(value);
      return this;
    }
    /**
     * <pre>
     * ID of the project.
     * </pre>
     *
     * <code>string project_id = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearProjectId() {
      copyOnWrite();
      instance.clearProjectId();
      return this;
    }
    /**
     * <pre>
     * ID of the project.
     * </pre>
     *
     * <code>string project_id = 16;</code>
     * @param value The bytes for projectId to set.
     * @return This builder for chaining.
     */
    public Builder setProjectIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setProjectIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Status of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildEventData.Status status = 2;</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override
    public int getStatusValue() {
      return instance.getStatusValue();
    }
    /**
     * <pre>
     * Status of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildEventData.Status status = 2;</code>
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatusValue(int value) {
      copyOnWrite();
      instance.setStatusValue(value);
      return this;
    }
    /**
     * <pre>
     * Status of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildEventData.Status status = 2;</code>
     * @return The status.
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.BuildEventData.Status getStatus() {
      return instance.getStatus();
    }
    /**
     * <pre>
     * Status of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildEventData.Status status = 2;</code>
     * @param value The enum numeric value on the wire for status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(google.events.cloud.cloudbuild.v1.BuildEventData.Status value) {
      copyOnWrite();
      instance.setStatus(value);
      return this;
    }
    /**
     * <pre>
     * Status of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildEventData.Status status = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      copyOnWrite();
      instance.clearStatus();
      return this;
    }

    /**
     * <pre>
     * Customer-readable message about the current status.
     * </pre>
     *
     * <code>string status_detail = 24;</code>
     * @return The statusDetail.
     */
    @java.lang.Override
    public java.lang.String getStatusDetail() {
      return instance.getStatusDetail();
    }
    /**
     * <pre>
     * Customer-readable message about the current status.
     * </pre>
     *
     * <code>string status_detail = 24;</code>
     * @return The bytes for statusDetail.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStatusDetailBytes() {
      return instance.getStatusDetailBytes();
    }
    /**
     * <pre>
     * Customer-readable message about the current status.
     * </pre>
     *
     * <code>string status_detail = 24;</code>
     * @param value The statusDetail to set.
     * @return This builder for chaining.
     */
    public Builder setStatusDetail(
        java.lang.String value) {
      copyOnWrite();
      instance.setStatusDetail(value);
      return this;
    }
    /**
     * <pre>
     * Customer-readable message about the current status.
     * </pre>
     *
     * <code>string status_detail = 24;</code>
     * @return This builder for chaining.
     */
    public Builder clearStatusDetail() {
      copyOnWrite();
      instance.clearStatusDetail();
      return this;
    }
    /**
     * <pre>
     * Customer-readable message about the current status.
     * </pre>
     *
     * <code>string status_detail = 24;</code>
     * @param value The bytes for statusDetail to set.
     * @return This builder for chaining.
     */
    public Builder setStatusDetailBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setStatusDetailBytes(value);
      return this;
    }

    /**
     * <pre>
     * The location of the source files to build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
     */
    @java.lang.Override
    public boolean hasSource() {
      return instance.hasSource();
    }
    /**
     * <pre>
     * The location of the source files to build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.Source getSource() {
      return instance.getSource();
    }
    /**
     * <pre>
     * The location of the source files to build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
     */
    public Builder setSource(google.events.cloud.cloudbuild.v1.Source value) {
      copyOnWrite();
      instance.setSource(value);
      return this;
      }
    /**
     * <pre>
     * The location of the source files to build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
     */
    public Builder setSource(
        google.events.cloud.cloudbuild.v1.Source.Builder builderForValue) {
      copyOnWrite();
      instance.setSource(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The location of the source files to build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
     */
    public Builder mergeSource(google.events.cloud.cloudbuild.v1.Source value) {
      copyOnWrite();
      instance.mergeSource(value);
      return this;
    }
    /**
     * <pre>
     * The location of the source files to build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Source source = 3;</code>
     */
    public Builder clearSource() {  copyOnWrite();
      instance.clearSource();
      return this;
    }

    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    @java.lang.Override
    public java.util.List<google.events.cloud.cloudbuild.v1.BuildStep> getStepsList() {
      return java.util.Collections.unmodifiableList(
          instance.getStepsList());
    }
    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    @java.lang.Override
    public int getStepsCount() {
      return instance.getStepsCount();
    }/**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.BuildStep getSteps(int index) {
      return instance.getSteps(index);
    }
    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    public Builder setSteps(
        int index, google.events.cloud.cloudbuild.v1.BuildStep value) {
      copyOnWrite();
      instance.setSteps(index, value);
      return this;
    }
    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    public Builder setSteps(
        int index, google.events.cloud.cloudbuild.v1.BuildStep.Builder builderForValue) {
      copyOnWrite();
      instance.setSteps(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    public Builder addSteps(google.events.cloud.cloudbuild.v1.BuildStep value) {
      copyOnWrite();
      instance.addSteps(value);
      return this;
    }
    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    public Builder addSteps(
        int index, google.events.cloud.cloudbuild.v1.BuildStep value) {
      copyOnWrite();
      instance.addSteps(index, value);
      return this;
    }
    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    public Builder addSteps(
        google.events.cloud.cloudbuild.v1.BuildStep.Builder builderForValue) {
      copyOnWrite();
      instance.addSteps(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    public Builder addSteps(
        int index, google.events.cloud.cloudbuild.v1.BuildStep.Builder builderForValue) {
      copyOnWrite();
      instance.addSteps(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    public Builder addAllSteps(
        java.lang.Iterable<? extends google.events.cloud.cloudbuild.v1.BuildStep> values) {
      copyOnWrite();
      instance.addAllSteps(values);
      return this;
    }
    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    public Builder clearSteps() {
      copyOnWrite();
      instance.clearSteps();
      return this;
    }
    /**
     * <pre>
     * The operations to be performed on the workspace.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.BuildStep steps = 11;</code>
     */
    public Builder removeSteps(int index) {
      copyOnWrite();
      instance.removeSteps(index);
      return this;
    }

    /**
     * <pre>
     * Results of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
     */
    @java.lang.Override
    public boolean hasResults() {
      return instance.hasResults();
    }
    /**
     * <pre>
     * Results of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.Results getResults() {
      return instance.getResults();
    }
    /**
     * <pre>
     * Results of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
     */
    public Builder setResults(google.events.cloud.cloudbuild.v1.Results value) {
      copyOnWrite();
      instance.setResults(value);
      return this;
      }
    /**
     * <pre>
     * Results of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
     */
    public Builder setResults(
        google.events.cloud.cloudbuild.v1.Results.Builder builderForValue) {
      copyOnWrite();
      instance.setResults(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Results of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
     */
    public Builder mergeResults(google.events.cloud.cloudbuild.v1.Results value) {
      copyOnWrite();
      instance.mergeResults(value);
      return this;
    }
    /**
     * <pre>
     * Results of the build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Results results = 10;</code>
     */
    public Builder clearResults() {  copyOnWrite();
      instance.clearResults();
      return this;
    }

    /**
     * <pre>
     * Time at which the request to create the build was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 6;</code>
     */
    @java.lang.Override
    public boolean hasCreateTime() {
      return instance.hasCreateTime();
    }
    /**
     * <pre>
     * Time at which the request to create the build was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 6;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getCreateTime() {
      return instance.getCreateTime();
    }
    /**
     * <pre>
     * Time at which the request to create the build was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 6;</code>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setCreateTime(value);
      return this;
      }
    /**
     * <pre>
     * Time at which the request to create the build was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 6;</code>
     */
    public Builder setCreateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setCreateTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Time at which the request to create the build was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 6;</code>
     */
    public Builder mergeCreateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeCreateTime(value);
      return this;
    }
    /**
     * <pre>
     * Time at which the request to create the build was received.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 6;</code>
     */
    public Builder clearCreateTime() {  copyOnWrite();
      instance.clearCreateTime();
      return this;
    }

    /**
     * <pre>
     * Time at which execution of the build was started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7;</code>
     */
    @java.lang.Override
    public boolean hasStartTime() {
      return instance.hasStartTime();
    }
    /**
     * <pre>
     * Time at which execution of the build was started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getStartTime() {
      return instance.getStartTime();
    }
    /**
     * <pre>
     * Time at which execution of the build was started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7;</code>
     */
    public Builder setStartTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setStartTime(value);
      return this;
      }
    /**
     * <pre>
     * Time at which execution of the build was started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7;</code>
     */
    public Builder setStartTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setStartTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Time at which execution of the build was started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7;</code>
     */
    public Builder mergeStartTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeStartTime(value);
      return this;
    }
    /**
     * <pre>
     * Time at which execution of the build was started.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 7;</code>
     */
    public Builder clearStartTime() {  copyOnWrite();
      instance.clearStartTime();
      return this;
    }

    /**
     * <pre>
     * Time at which execution of the build was finished.
     * The difference between finish_time and start_time is the duration of the
     * build's execution.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp finish_time = 8;</code>
     */
    @java.lang.Override
    public boolean hasFinishTime() {
      return instance.hasFinishTime();
    }
    /**
     * <pre>
     * Time at which execution of the build was finished.
     * The difference between finish_time and start_time is the duration of the
     * build's execution.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp finish_time = 8;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getFinishTime() {
      return instance.getFinishTime();
    }
    /**
     * <pre>
     * Time at which execution of the build was finished.
     * The difference between finish_time and start_time is the duration of the
     * build's execution.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp finish_time = 8;</code>
     */
    public Builder setFinishTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setFinishTime(value);
      return this;
      }
    /**
     * <pre>
     * Time at which execution of the build was finished.
     * The difference between finish_time and start_time is the duration of the
     * build's execution.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp finish_time = 8;</code>
     */
    public Builder setFinishTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setFinishTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Time at which execution of the build was finished.
     * The difference between finish_time and start_time is the duration of the
     * build's execution.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp finish_time = 8;</code>
     */
    public Builder mergeFinishTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeFinishTime(value);
      return this;
    }
    /**
     * <pre>
     * Time at which execution of the build was finished.
     * The difference between finish_time and start_time is the duration of the
     * build's execution.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp finish_time = 8;</code>
     */
    public Builder clearFinishTime() {  copyOnWrite();
      instance.clearFinishTime();
      return this;
    }

    /**
     * <pre>
     * Amount of time that this build should be allowed to run, to second
     * granularity. If this amount of time elapses, work on the build will cease
     * and the build status will be `TIMEOUT`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 12;</code>
     */
    @java.lang.Override
    public boolean hasTimeout() {
      return instance.hasTimeout();
    }
    /**
     * <pre>
     * Amount of time that this build should be allowed to run, to second
     * granularity. If this amount of time elapses, work on the build will cease
     * and the build status will be `TIMEOUT`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 12;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Duration getTimeout() {
      return instance.getTimeout();
    }
    /**
     * <pre>
     * Amount of time that this build should be allowed to run, to second
     * granularity. If this amount of time elapses, work on the build will cease
     * and the build status will be `TIMEOUT`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 12;</code>
     */
    public Builder setTimeout(com.google.protobuf.Duration value) {
      copyOnWrite();
      instance.setTimeout(value);
      return this;
      }
    /**
     * <pre>
     * Amount of time that this build should be allowed to run, to second
     * granularity. If this amount of time elapses, work on the build will cease
     * and the build status will be `TIMEOUT`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 12;</code>
     */
    public Builder setTimeout(
        com.google.protobuf.Duration.Builder builderForValue) {
      copyOnWrite();
      instance.setTimeout(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Amount of time that this build should be allowed to run, to second
     * granularity. If this amount of time elapses, work on the build will cease
     * and the build status will be `TIMEOUT`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 12;</code>
     */
    public Builder mergeTimeout(com.google.protobuf.Duration value) {
      copyOnWrite();
      instance.mergeTimeout(value);
      return this;
    }
    /**
     * <pre>
     * Amount of time that this build should be allowed to run, to second
     * granularity. If this amount of time elapses, work on the build will cease
     * and the build status will be `TIMEOUT`.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 12;</code>
     */
    public Builder clearTimeout() {  copyOnWrite();
      instance.clearTimeout();
      return this;
    }

    /**
     * <pre>
     * A list of images to be pushed upon the successful completion of all build
     * steps.
     * The images are pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the `Build` resource's
     * results field.
     * If any of the images fail to be pushed, the build status is marked
     * `FAILURE`.
     * </pre>
     *
     * <code>repeated string images = 13;</code>
     * @return A list containing the images.
     */
    @java.lang.Override
    public java.util.List<java.lang.String>
        getImagesList() {
      return java.util.Collections.unmodifiableList(
          instance.getImagesList());
    }
    /**
     * <pre>
     * A list of images to be pushed upon the successful completion of all build
     * steps.
     * The images are pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the `Build` resource's
     * results field.
     * If any of the images fail to be pushed, the build status is marked
     * `FAILURE`.
     * </pre>
     *
     * <code>repeated string images = 13;</code>
     * @return The count of images.
     */
    @java.lang.Override
    public int getImagesCount() {
      return instance.getImagesCount();
    }
    /**
     * <pre>
     * A list of images to be pushed upon the successful completion of all build
     * steps.
     * The images are pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the `Build` resource's
     * results field.
     * If any of the images fail to be pushed, the build status is marked
     * `FAILURE`.
     * </pre>
     *
     * <code>repeated string images = 13;</code>
     * @param index The index of the element to return.
     * @return The images at the given index.
     */
    @java.lang.Override
    public java.lang.String getImages(int index) {
      return instance.getImages(index);
    }
    /**
     * <pre>
     * A list of images to be pushed upon the successful completion of all build
     * steps.
     * The images are pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the `Build` resource's
     * results field.
     * If any of the images fail to be pushed, the build status is marked
     * `FAILURE`.
     * </pre>
     *
     * <code>repeated string images = 13;</code>
     * @param index The index of the value to return.
     * @return The bytes of the images at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getImagesBytes(int index) {
      return instance.getImagesBytes(index);
    }
    /**
     * <pre>
     * A list of images to be pushed upon the successful completion of all build
     * steps.
     * The images are pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the `Build` resource's
     * results field.
     * If any of the images fail to be pushed, the build status is marked
     * `FAILURE`.
     * </pre>
     *
     * <code>repeated string images = 13;</code>
     * @param index The index to set the value at.
     * @param value The images to set.
     * @return This builder for chaining.
     */
    public Builder setImages(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setImages(index, value);
      return this;
    }
    /**
     * <pre>
     * A list of images to be pushed upon the successful completion of all build
     * steps.
     * The images are pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the `Build` resource's
     * results field.
     * If any of the images fail to be pushed, the build status is marked
     * `FAILURE`.
     * </pre>
     *
     * <code>repeated string images = 13;</code>
     * @param value The images to add.
     * @return This builder for chaining.
     */
    public Builder addImages(
        java.lang.String value) {
      copyOnWrite();
      instance.addImages(value);
      return this;
    }
    /**
     * <pre>
     * A list of images to be pushed upon the successful completion of all build
     * steps.
     * The images are pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the `Build` resource's
     * results field.
     * If any of the images fail to be pushed, the build status is marked
     * `FAILURE`.
     * </pre>
     *
     * <code>repeated string images = 13;</code>
     * @param values The images to add.
     * @return This builder for chaining.
     */
    public Builder addAllImages(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllImages(values);
      return this;
    }
    /**
     * <pre>
     * A list of images to be pushed upon the successful completion of all build
     * steps.
     * The images are pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the `Build` resource's
     * results field.
     * If any of the images fail to be pushed, the build status is marked
     * `FAILURE`.
     * </pre>
     *
     * <code>repeated string images = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearImages() {
      copyOnWrite();
      instance.clearImages();
      return this;
    }
    /**
     * <pre>
     * A list of images to be pushed upon the successful completion of all build
     * steps.
     * The images are pushed using the builder service account's credentials.
     * The digests of the pushed images will be stored in the `Build` resource's
     * results field.
     * If any of the images fail to be pushed, the build status is marked
     * `FAILURE`.
     * </pre>
     *
     * <code>repeated string images = 13;</code>
     * @param value The bytes of the images to add.
     * @return This builder for chaining.
     */
    public Builder addImagesBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addImagesBytes(value);
      return this;
    }

    /**
     * <pre>
     * TTL in queue for this build. If provided and the build is enqueued longer
     * than this value, the build will expire and the build status will be
     * `EXPIRED`.
     * The TTL starts ticking from create_time.
     * </pre>
     *
     * <code>.google.protobuf.Duration queue_ttl = 40;</code>
     */
    @java.lang.Override
    public boolean hasQueueTtl() {
      return instance.hasQueueTtl();
    }
    /**
     * <pre>
     * TTL in queue for this build. If provided and the build is enqueued longer
     * than this value, the build will expire and the build status will be
     * `EXPIRED`.
     * The TTL starts ticking from create_time.
     * </pre>
     *
     * <code>.google.protobuf.Duration queue_ttl = 40;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Duration getQueueTtl() {
      return instance.getQueueTtl();
    }
    /**
     * <pre>
     * TTL in queue for this build. If provided and the build is enqueued longer
     * than this value, the build will expire and the build status will be
     * `EXPIRED`.
     * The TTL starts ticking from create_time.
     * </pre>
     *
     * <code>.google.protobuf.Duration queue_ttl = 40;</code>
     */
    public Builder setQueueTtl(com.google.protobuf.Duration value) {
      copyOnWrite();
      instance.setQueueTtl(value);
      return this;
      }
    /**
     * <pre>
     * TTL in queue for this build. If provided and the build is enqueued longer
     * than this value, the build will expire and the build status will be
     * `EXPIRED`.
     * The TTL starts ticking from create_time.
     * </pre>
     *
     * <code>.google.protobuf.Duration queue_ttl = 40;</code>
     */
    public Builder setQueueTtl(
        com.google.protobuf.Duration.Builder builderForValue) {
      copyOnWrite();
      instance.setQueueTtl(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * TTL in queue for this build. If provided and the build is enqueued longer
     * than this value, the build will expire and the build status will be
     * `EXPIRED`.
     * The TTL starts ticking from create_time.
     * </pre>
     *
     * <code>.google.protobuf.Duration queue_ttl = 40;</code>
     */
    public Builder mergeQueueTtl(com.google.protobuf.Duration value) {
      copyOnWrite();
      instance.mergeQueueTtl(value);
      return this;
    }
    /**
     * <pre>
     * TTL in queue for this build. If provided and the build is enqueued longer
     * than this value, the build will expire and the build status will be
     * `EXPIRED`.
     * The TTL starts ticking from create_time.
     * </pre>
     *
     * <code>.google.protobuf.Duration queue_ttl = 40;</code>
     */
    public Builder clearQueueTtl() {  copyOnWrite();
      instance.clearQueueTtl();
      return this;
    }

    /**
     * <pre>
     * Artifacts produced by the build that should be uploaded upon
     * successful completion of all build steps.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
     */
    @java.lang.Override
    public boolean hasArtifacts() {
      return instance.hasArtifacts();
    }
    /**
     * <pre>
     * Artifacts produced by the build that should be uploaded upon
     * successful completion of all build steps.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.Artifacts getArtifacts() {
      return instance.getArtifacts();
    }
    /**
     * <pre>
     * Artifacts produced by the build that should be uploaded upon
     * successful completion of all build steps.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
     */
    public Builder setArtifacts(google.events.cloud.cloudbuild.v1.Artifacts value) {
      copyOnWrite();
      instance.setArtifacts(value);
      return this;
      }
    /**
     * <pre>
     * Artifacts produced by the build that should be uploaded upon
     * successful completion of all build steps.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
     */
    public Builder setArtifacts(
        google.events.cloud.cloudbuild.v1.Artifacts.Builder builderForValue) {
      copyOnWrite();
      instance.setArtifacts(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Artifacts produced by the build that should be uploaded upon
     * successful completion of all build steps.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
     */
    public Builder mergeArtifacts(google.events.cloud.cloudbuild.v1.Artifacts value) {
      copyOnWrite();
      instance.mergeArtifacts(value);
      return this;
    }
    /**
     * <pre>
     * Artifacts produced by the build that should be uploaded upon
     * successful completion of all build steps.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.Artifacts artifacts = 37;</code>
     */
    public Builder clearArtifacts() {  copyOnWrite();
      instance.clearArtifacts();
      return this;
    }

    /**
     * <pre>
     * Google Cloud Storage bucket where logs should be written (see
     * [Bucket Name
     * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
     * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
     * </pre>
     *
     * <code>string logs_bucket = 19;</code>
     * @return The logsBucket.
     */
    @java.lang.Override
    public java.lang.String getLogsBucket() {
      return instance.getLogsBucket();
    }
    /**
     * <pre>
     * Google Cloud Storage bucket where logs should be written (see
     * [Bucket Name
     * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
     * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
     * </pre>
     *
     * <code>string logs_bucket = 19;</code>
     * @return The bytes for logsBucket.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLogsBucketBytes() {
      return instance.getLogsBucketBytes();
    }
    /**
     * <pre>
     * Google Cloud Storage bucket where logs should be written (see
     * [Bucket Name
     * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
     * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
     * </pre>
     *
     * <code>string logs_bucket = 19;</code>
     * @param value The logsBucket to set.
     * @return This builder for chaining.
     */
    public Builder setLogsBucket(
        java.lang.String value) {
      copyOnWrite();
      instance.setLogsBucket(value);
      return this;
    }
    /**
     * <pre>
     * Google Cloud Storage bucket where logs should be written (see
     * [Bucket Name
     * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
     * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
     * </pre>
     *
     * <code>string logs_bucket = 19;</code>
     * @return This builder for chaining.
     */
    public Builder clearLogsBucket() {
      copyOnWrite();
      instance.clearLogsBucket();
      return this;
    }
    /**
     * <pre>
     * Google Cloud Storage bucket where logs should be written (see
     * [Bucket Name
     * Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
     * Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
     * </pre>
     *
     * <code>string logs_bucket = 19;</code>
     * @param value The bytes for logsBucket to set.
     * @return This builder for chaining.
     */
    public Builder setLogsBucketBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setLogsBucketBytes(value);
      return this;
    }

    /**
     * <pre>
     * A permanent fixed identifier for source.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
     */
    @java.lang.Override
    public boolean hasSourceProvenance() {
      return instance.hasSourceProvenance();
    }
    /**
     * <pre>
     * A permanent fixed identifier for source.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.SourceProvenance getSourceProvenance() {
      return instance.getSourceProvenance();
    }
    /**
     * <pre>
     * A permanent fixed identifier for source.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
     */
    public Builder setSourceProvenance(google.events.cloud.cloudbuild.v1.SourceProvenance value) {
      copyOnWrite();
      instance.setSourceProvenance(value);
      return this;
      }
    /**
     * <pre>
     * A permanent fixed identifier for source.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
     */
    public Builder setSourceProvenance(
        google.events.cloud.cloudbuild.v1.SourceProvenance.Builder builderForValue) {
      copyOnWrite();
      instance.setSourceProvenance(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A permanent fixed identifier for source.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
     */
    public Builder mergeSourceProvenance(google.events.cloud.cloudbuild.v1.SourceProvenance value) {
      copyOnWrite();
      instance.mergeSourceProvenance(value);
      return this;
    }
    /**
     * <pre>
     * A permanent fixed identifier for source.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.SourceProvenance source_provenance = 21;</code>
     */
    public Builder clearSourceProvenance() {  copyOnWrite();
      instance.clearSourceProvenance();
      return this;
    }

    /**
     * <pre>
     * The ID of the `BuildTrigger` that triggered this build, if it
     * was triggered automatically.
     * </pre>
     *
     * <code>string build_trigger_id = 22;</code>
     * @return The buildTriggerId.
     */
    @java.lang.Override
    public java.lang.String getBuildTriggerId() {
      return instance.getBuildTriggerId();
    }
    /**
     * <pre>
     * The ID of the `BuildTrigger` that triggered this build, if it
     * was triggered automatically.
     * </pre>
     *
     * <code>string build_trigger_id = 22;</code>
     * @return The bytes for buildTriggerId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBuildTriggerIdBytes() {
      return instance.getBuildTriggerIdBytes();
    }
    /**
     * <pre>
     * The ID of the `BuildTrigger` that triggered this build, if it
     * was triggered automatically.
     * </pre>
     *
     * <code>string build_trigger_id = 22;</code>
     * @param value The buildTriggerId to set.
     * @return This builder for chaining.
     */
    public Builder setBuildTriggerId(
        java.lang.String value) {
      copyOnWrite();
      instance.setBuildTriggerId(value);
      return this;
    }
    /**
     * <pre>
     * The ID of the `BuildTrigger` that triggered this build, if it
     * was triggered automatically.
     * </pre>
     *
     * <code>string build_trigger_id = 22;</code>
     * @return This builder for chaining.
     */
    public Builder clearBuildTriggerId() {
      copyOnWrite();
      instance.clearBuildTriggerId();
      return this;
    }
    /**
     * <pre>
     * The ID of the `BuildTrigger` that triggered this build, if it
     * was triggered automatically.
     * </pre>
     *
     * <code>string build_trigger_id = 22;</code>
     * @param value The bytes for buildTriggerId to set.
     * @return This builder for chaining.
     */
    public Builder setBuildTriggerIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBuildTriggerIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Special options for this build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
     */
    @java.lang.Override
    public boolean hasOptions() {
      return instance.hasOptions();
    }
    /**
     * <pre>
     * Special options for this build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.BuildOptions getOptions() {
      return instance.getOptions();
    }
    /**
     * <pre>
     * Special options for this build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
     */
    public Builder setOptions(google.events.cloud.cloudbuild.v1.BuildOptions value) {
      copyOnWrite();
      instance.setOptions(value);
      return this;
      }
    /**
     * <pre>
     * Special options for this build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
     */
    public Builder setOptions(
        google.events.cloud.cloudbuild.v1.BuildOptions.Builder builderForValue) {
      copyOnWrite();
      instance.setOptions(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Special options for this build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
     */
    public Builder mergeOptions(google.events.cloud.cloudbuild.v1.BuildOptions value) {
      copyOnWrite();
      instance.mergeOptions(value);
      return this;
    }
    /**
     * <pre>
     * Special options for this build.
     * </pre>
     *
     * <code>.google.events.cloud.cloudbuild.v1.BuildOptions options = 23;</code>
     */
    public Builder clearOptions() {  copyOnWrite();
      instance.clearOptions();
      return this;
    }

    /**
     * <pre>
     * URL to logs for this build in Google Cloud Console.
     * </pre>
     *
     * <code>string log_url = 25;</code>
     * @return The logUrl.
     */
    @java.lang.Override
    public java.lang.String getLogUrl() {
      return instance.getLogUrl();
    }
    /**
     * <pre>
     * URL to logs for this build in Google Cloud Console.
     * </pre>
     *
     * <code>string log_url = 25;</code>
     * @return The bytes for logUrl.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLogUrlBytes() {
      return instance.getLogUrlBytes();
    }
    /**
     * <pre>
     * URL to logs for this build in Google Cloud Console.
     * </pre>
     *
     * <code>string log_url = 25;</code>
     * @param value The logUrl to set.
     * @return This builder for chaining.
     */
    public Builder setLogUrl(
        java.lang.String value) {
      copyOnWrite();
      instance.setLogUrl(value);
      return this;
    }
    /**
     * <pre>
     * URL to logs for this build in Google Cloud Console.
     * </pre>
     *
     * <code>string log_url = 25;</code>
     * @return This builder for chaining.
     */
    public Builder clearLogUrl() {
      copyOnWrite();
      instance.clearLogUrl();
      return this;
    }
    /**
     * <pre>
     * URL to logs for this build in Google Cloud Console.
     * </pre>
     *
     * <code>string log_url = 25;</code>
     * @param value The bytes for logUrl to set.
     * @return This builder for chaining.
     */
    public Builder setLogUrlBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setLogUrlBytes(value);
      return this;
    }

    @java.lang.Override

    public int getSubstitutionsCount() {
      return instance.getSubstitutionsMap().size();
    }
    /**
     * <pre>
     * Substitutions data for `Build` resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 29;</code>
     */
    @java.lang.Override

    public boolean containsSubstitutions(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getSubstitutionsMap().containsKey(key);
    }

    public Builder clearSubstitutions() {
      copyOnWrite();
      instance.getMutableSubstitutionsMap().clear();
      return this;
    }
    /**
     * <pre>
     * Substitutions data for `Build` resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 29;</code>
     */

    public Builder removeSubstitutions(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableSubstitutionsMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getSubstitutionsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getSubstitutions() {
      return getSubstitutionsMap();
    }
    /**
     * <pre>
     * Substitutions data for `Build` resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 29;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getSubstitutionsMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getSubstitutionsMap());
    }
    /**
     * <pre>
     * Substitutions data for `Build` resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 29;</code>
     */
    @java.lang.Override

    public java.lang.String getSubstitutionsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getSubstitutionsMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Substitutions data for `Build` resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 29;</code>
     */
    @java.lang.Override

    public java.lang.String getSubstitutionsOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getSubstitutionsMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * Substitutions data for `Build` resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 29;</code>
     */
    public Builder putSubstitutions(
        java.lang.String key,
        java.lang.String value) {
      java.lang.Class<?> keyClass = key.getClass();
      java.lang.Class<?> valueClass = value.getClass();
      copyOnWrite();
      instance.getMutableSubstitutionsMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * Substitutions data for `Build` resource.
     * </pre>
     *
     * <code>map&lt;string, string&gt; substitutions = 29;</code>
     */
    public Builder putAllSubstitutions(
        java.util.Map<java.lang.String, java.lang.String> values) {
      copyOnWrite();
      instance.getMutableSubstitutionsMap().putAll(values);
      return this;
    }

    /**
     * <pre>
     * Tags for annotation of a `Build`. These are not docker tags.
     * </pre>
     *
     * <code>repeated string tags = 31;</code>
     * @return A list containing the tags.
     */
    @java.lang.Override
    public java.util.List<java.lang.String>
        getTagsList() {
      return java.util.Collections.unmodifiableList(
          instance.getTagsList());
    }
    /**
     * <pre>
     * Tags for annotation of a `Build`. These are not docker tags.
     * </pre>
     *
     * <code>repeated string tags = 31;</code>
     * @return The count of tags.
     */
    @java.lang.Override
    public int getTagsCount() {
      return instance.getTagsCount();
    }
    /**
     * <pre>
     * Tags for annotation of a `Build`. These are not docker tags.
     * </pre>
     *
     * <code>repeated string tags = 31;</code>
     * @param index The index of the element to return.
     * @return The tags at the given index.
     */
    @java.lang.Override
    public java.lang.String getTags(int index) {
      return instance.getTags(index);
    }
    /**
     * <pre>
     * Tags for annotation of a `Build`. These are not docker tags.
     * </pre>
     *
     * <code>repeated string tags = 31;</code>
     * @param index The index of the value to return.
     * @return The bytes of the tags at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTagsBytes(int index) {
      return instance.getTagsBytes(index);
    }
    /**
     * <pre>
     * Tags for annotation of a `Build`. These are not docker tags.
     * </pre>
     *
     * <code>repeated string tags = 31;</code>
     * @param index The index to set the value at.
     * @param value The tags to set.
     * @return This builder for chaining.
     */
    public Builder setTags(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setTags(index, value);
      return this;
    }
    /**
     * <pre>
     * Tags for annotation of a `Build`. These are not docker tags.
     * </pre>
     *
     * <code>repeated string tags = 31;</code>
     * @param value The tags to add.
     * @return This builder for chaining.
     */
    public Builder addTags(
        java.lang.String value) {
      copyOnWrite();
      instance.addTags(value);
      return this;
    }
    /**
     * <pre>
     * Tags for annotation of a `Build`. These are not docker tags.
     * </pre>
     *
     * <code>repeated string tags = 31;</code>
     * @param values The tags to add.
     * @return This builder for chaining.
     */
    public Builder addAllTags(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllTags(values);
      return this;
    }
    /**
     * <pre>
     * Tags for annotation of a `Build`. These are not docker tags.
     * </pre>
     *
     * <code>repeated string tags = 31;</code>
     * @return This builder for chaining.
     */
    public Builder clearTags() {
      copyOnWrite();
      instance.clearTags();
      return this;
    }
    /**
     * <pre>
     * Tags for annotation of a `Build`. These are not docker tags.
     * </pre>
     *
     * <code>repeated string tags = 31;</code>
     * @param value The bytes of the tags to add.
     * @return This builder for chaining.
     */
    public Builder addTagsBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addTagsBytes(value);
      return this;
    }

    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    @java.lang.Override
    public java.util.List<google.events.cloud.cloudbuild.v1.Secret> getSecretsList() {
      return java.util.Collections.unmodifiableList(
          instance.getSecretsList());
    }
    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    @java.lang.Override
    public int getSecretsCount() {
      return instance.getSecretsCount();
    }/**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    @java.lang.Override
    public google.events.cloud.cloudbuild.v1.Secret getSecrets(int index) {
      return instance.getSecrets(index);
    }
    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    public Builder setSecrets(
        int index, google.events.cloud.cloudbuild.v1.Secret value) {
      copyOnWrite();
      instance.setSecrets(index, value);
      return this;
    }
    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    public Builder setSecrets(
        int index, google.events.cloud.cloudbuild.v1.Secret.Builder builderForValue) {
      copyOnWrite();
      instance.setSecrets(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    public Builder addSecrets(google.events.cloud.cloudbuild.v1.Secret value) {
      copyOnWrite();
      instance.addSecrets(value);
      return this;
    }
    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    public Builder addSecrets(
        int index, google.events.cloud.cloudbuild.v1.Secret value) {
      copyOnWrite();
      instance.addSecrets(index, value);
      return this;
    }
    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    public Builder addSecrets(
        google.events.cloud.cloudbuild.v1.Secret.Builder builderForValue) {
      copyOnWrite();
      instance.addSecrets(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    public Builder addSecrets(
        int index, google.events.cloud.cloudbuild.v1.Secret.Builder builderForValue) {
      copyOnWrite();
      instance.addSecrets(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    public Builder addAllSecrets(
        java.lang.Iterable<? extends google.events.cloud.cloudbuild.v1.Secret> values) {
      copyOnWrite();
      instance.addAllSecrets(values);
      return this;
    }
    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    public Builder clearSecrets() {
      copyOnWrite();
      instance.clearSecrets();
      return this;
    }
    /**
     * <pre>
     * Secrets to decrypt using Cloud Key Management Service.
     * </pre>
     *
     * <code>repeated .google.events.cloud.cloudbuild.v1.Secret secrets = 32;</code>
     */
    public Builder removeSecrets(int index) {
      copyOnWrite();
      instance.removeSecrets(index);
      return this;
    }

    @java.lang.Override

    public int getTimingCount() {
      return instance.getTimingMap().size();
    }
    /**
     * <pre>
     * Stores timing information for phases of the build. Valid keys
     * are:
     * * BUILD: time to execute all build steps
     * * PUSH: time to push all specified images.
     * * FETCHSOURCE: time to fetch source.
     * If the build does not specify source or images,
     * these keys will not be included.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
     */
    @java.lang.Override

    public boolean containsTiming(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getTimingMap().containsKey(key);
    }

    public Builder clearTiming() {
      copyOnWrite();
      instance.getMutableTimingMap().clear();
      return this;
    }
    /**
     * <pre>
     * Stores timing information for phases of the build. Valid keys
     * are:
     * * BUILD: time to execute all build steps
     * * PUSH: time to push all specified images.
     * * FETCHSOURCE: time to fetch source.
     * If the build does not specify source or images,
     * these keys will not be included.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
     */

    public Builder removeTiming(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableTimingMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getTimingMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan> getTiming() {
      return getTimingMap();
    }
    /**
     * <pre>
     * Stores timing information for phases of the build. Valid keys
     * are:
     * * BUILD: time to execute all build steps
     * * PUSH: time to push all specified images.
     * * FETCHSOURCE: time to fetch source.
     * If the build does not specify source or images,
     * these keys will not be included.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan> getTimingMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getTimingMap());
    }
    /**
     * <pre>
     * Stores timing information for phases of the build. Valid keys
     * are:
     * * BUILD: time to execute all build steps
     * * PUSH: time to push all specified images.
     * * FETCHSOURCE: time to fetch source.
     * If the build does not specify source or images,
     * these keys will not be included.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
     */
    @java.lang.Override

    public google.events.cloud.cloudbuild.v1.TimeSpan getTimingOrDefault(
        java.lang.String key,
        google.events.cloud.cloudbuild.v1.TimeSpan defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan> map =
          instance.getTimingMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Stores timing information for phases of the build. Valid keys
     * are:
     * * BUILD: time to execute all build steps
     * * PUSH: time to push all specified images.
     * * FETCHSOURCE: time to fetch source.
     * If the build does not specify source or images,
     * these keys will not be included.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
     */
    @java.lang.Override

    public google.events.cloud.cloudbuild.v1.TimeSpan getTimingOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan> map =
          instance.getTimingMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * Stores timing information for phases of the build. Valid keys
     * are:
     * * BUILD: time to execute all build steps
     * * PUSH: time to push all specified images.
     * * FETCHSOURCE: time to fetch source.
     * If the build does not specify source or images,
     * these keys will not be included.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
     */
    public Builder putTiming(
        java.lang.String key,
        google.events.cloud.cloudbuild.v1.TimeSpan value) {
      java.lang.Class<?> keyClass = key.getClass();
      java.lang.Class<?> valueClass = value.getClass();
      copyOnWrite();
      instance.getMutableTimingMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * Stores timing information for phases of the build. Valid keys
     * are:
     * * BUILD: time to execute all build steps
     * * PUSH: time to push all specified images.
     * * FETCHSOURCE: time to fetch source.
     * If the build does not specify source or images,
     * these keys will not be included.
     * </pre>
     *
     * <code>map&lt;string, .google.events.cloud.cloudbuild.v1.TimeSpan&gt; timing = 33;</code>
     */
    public Builder putAllTiming(
        java.util.Map<java.lang.String, google.events.cloud.cloudbuild.v1.TimeSpan> values) {
      copyOnWrite();
      instance.getMutableTimingMap().putAll(values);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.cloudbuild.v1.BuildEventData)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.cloud.cloudbuild.v1.BuildEventData();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "id_",
            "status_",
            "source_",
            "createTime_",
            "startTime_",
            "finishTime_",
            "results_",
            "steps_",
            google.events.cloud.cloudbuild.v1.BuildStep.class,
            "timeout_",
            "images_",
            "projectId_",
            "logsBucket_",
            "sourceProvenance_",
            "buildTriggerId_",
            "options_",
            "statusDetail_",
            "logUrl_",
            "substitutions_",
            SubstitutionsDefaultEntryHolder.defaultEntry,
            "tags_",
            "secrets_",
            google.events.cloud.cloudbuild.v1.Secret.class,
            "timing_",
            TimingDefaultEntryHolder.defaultEntry,
            "artifacts_",
            "queueTtl_",
          };
          java.lang.String info =
              "\u0000\u0017\u0000\u0000\u0001(\u0017\u0002\u0004\u0000\u0001\u0208\u0002\f\u0003" +
              "\t\u0006\t\u0007\t\b\t\n\t\u000b\u001b\f\t\r\u021a\u0010\u0208\u0013\u0208\u0015" +
              "\t\u0016\u0208\u0017\t\u0018\u0208\u0019\u0208\u001d2\u001f\u021a \u001b!2%\t(\t" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.cloud.cloudbuild.v1.BuildEventData> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.cloud.cloudbuild.v1.BuildEventData.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.cloud.cloudbuild.v1.BuildEventData>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.cloud.cloudbuild.v1.BuildEventData)
  private static final google.events.cloud.cloudbuild.v1.BuildEventData DEFAULT_INSTANCE;
  static {
    BuildEventData defaultInstance = new BuildEventData();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      BuildEventData.class, defaultInstance);
  }

  public static google.events.cloud.cloudbuild.v1.BuildEventData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<BuildEventData> PARSER;

  public static com.google.protobuf.Parser<BuildEventData> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

