// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/audit/v1/data.proto

package google.events.cloud.audit.v1;

/**
 * <pre>
 * The data within all Cloud Audit Logs log entry events.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.audit.v1.LogEntryData}
 */
public  final class LogEntryData extends
    com.google.protobuf.GeneratedMessageLite<
        LogEntryData, LogEntryData.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.audit.v1.LogEntryData)
    LogEntryDataOrBuilder {
  private LogEntryData() {
    logName_ = "";
    insertId_ = "";
    trace_ = "";
    spanId_ = "";
  }
  public static final int LOG_NAME_FIELD_NUMBER = 12;
  private java.lang.String logName_;
  /**
   * <pre>
   * The resource name of the log to which this log entry belongs.
   * </pre>
   *
   * <code>string log_name = 12;</code>
   * @return The logName.
   */
  @java.lang.Override
  public java.lang.String getLogName() {
    return logName_;
  }
  /**
   * <pre>
   * The resource name of the log to which this log entry belongs.
   * </pre>
   *
   * <code>string log_name = 12;</code>
   * @return The bytes for logName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getLogNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(logName_);
  }
  /**
   * <pre>
   * The resource name of the log to which this log entry belongs.
   * </pre>
   *
   * <code>string log_name = 12;</code>
   * @param value The logName to set.
   */
  private void setLogName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    logName_ = value;
  }
  /**
   * <pre>
   * The resource name of the log to which this log entry belongs.
   * </pre>
   *
   * <code>string log_name = 12;</code>
   */
  private void clearLogName() {
    
    logName_ = getDefaultInstance().getLogName();
  }
  /**
   * <pre>
   * The resource name of the log to which this log entry belongs.
   * </pre>
   *
   * <code>string log_name = 12;</code>
   * @param value The bytes for logName to set.
   */
  private void setLogNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    logName_ = value.toStringUtf8();
    
  }

  public static final int RESOURCE_FIELD_NUMBER = 8;
  private com.google.api.MonitoredResource resource_;
  /**
   * <pre>
   * The monitored resource that produced this log entry.
   * Example: a log entry that reports a database error would be associated with
   * the monitored resource designating the particular database that reported
   * the error.
   * </pre>
   *
   * <code>.com.google.api.MonitoredResource resource = 8;</code>
   */
  @java.lang.Override
  public boolean hasResource() {
    return resource_ != null;
  }
  /**
   * <pre>
   * The monitored resource that produced this log entry.
   * Example: a log entry that reports a database error would be associated with
   * the monitored resource designating the particular database that reported
   * the error.
   * </pre>
   *
   * <code>.com.google.api.MonitoredResource resource = 8;</code>
   */
  @java.lang.Override
  public com.google.api.MonitoredResource getResource() {
    return resource_ == null ? com.google.api.MonitoredResource.getDefaultInstance() : resource_;
  }
  /**
   * <pre>
   * The monitored resource that produced this log entry.
   * Example: a log entry that reports a database error would be associated with
   * the monitored resource designating the particular database that reported
   * the error.
   * </pre>
   *
   * <code>.com.google.api.MonitoredResource resource = 8;</code>
   */
  private void setResource(com.google.api.MonitoredResource value) {
    value.getClass();
  resource_ = value;
    
    }
  /**
   * <pre>
   * The monitored resource that produced this log entry.
   * Example: a log entry that reports a database error would be associated with
   * the monitored resource designating the particular database that reported
   * the error.
   * </pre>
   *
   * <code>.com.google.api.MonitoredResource resource = 8;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeResource(com.google.api.MonitoredResource value) {
    value.getClass();
  if (resource_ != null &&
        resource_ != com.google.api.MonitoredResource.getDefaultInstance()) {
      resource_ =
        com.google.api.MonitoredResource.newBuilder(resource_).mergeFrom(value).buildPartial();
    } else {
      resource_ = value;
    }
    
  }
  /**
   * <pre>
   * The monitored resource that produced this log entry.
   * Example: a log entry that reports a database error would be associated with
   * the monitored resource designating the particular database that reported
   * the error.
   * </pre>
   *
   * <code>.com.google.api.MonitoredResource resource = 8;</code>
   */
  private void clearResource() {  resource_ = null;
    
  }

  public static final int PROTO_PAYLOAD_FIELD_NUMBER = 2;
  private google.events.cloud.audit.v1.AuditLog protoPayload_;
  /**
   * <pre>
   * The log entry payload, which is always an AuditLog for Cloud Audit Log
   * events.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
   */
  @java.lang.Override
  public boolean hasProtoPayload() {
    return protoPayload_ != null;
  }
  /**
   * <pre>
   * The log entry payload, which is always an AuditLog for Cloud Audit Log
   * events.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
   */
  @java.lang.Override
  public google.events.cloud.audit.v1.AuditLog getProtoPayload() {
    return protoPayload_ == null ? google.events.cloud.audit.v1.AuditLog.getDefaultInstance() : protoPayload_;
  }
  /**
   * <pre>
   * The log entry payload, which is always an AuditLog for Cloud Audit Log
   * events.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
   */
  private void setProtoPayload(google.events.cloud.audit.v1.AuditLog value) {
    value.getClass();
  protoPayload_ = value;
    
    }
  /**
   * <pre>
   * The log entry payload, which is always an AuditLog for Cloud Audit Log
   * events.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeProtoPayload(google.events.cloud.audit.v1.AuditLog value) {
    value.getClass();
  if (protoPayload_ != null &&
        protoPayload_ != google.events.cloud.audit.v1.AuditLog.getDefaultInstance()) {
      protoPayload_ =
        google.events.cloud.audit.v1.AuditLog.newBuilder(protoPayload_).mergeFrom(value).buildPartial();
    } else {
      protoPayload_ = value;
    }
    
  }
  /**
   * <pre>
   * The log entry payload, which is always an AuditLog for Cloud Audit Log
   * events.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
   */
  private void clearProtoPayload() {  protoPayload_ = null;
    
  }

  public static final int INSERT_ID_FIELD_NUMBER = 4;
  private java.lang.String insertId_;
  /**
   * <pre>
   * A unique identifier for the log entry.
   * </pre>
   *
   * <code>string insert_id = 4;</code>
   * @return The insertId.
   */
  @java.lang.Override
  public java.lang.String getInsertId() {
    return insertId_;
  }
  /**
   * <pre>
   * A unique identifier for the log entry.
   * </pre>
   *
   * <code>string insert_id = 4;</code>
   * @return The bytes for insertId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getInsertIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(insertId_);
  }
  /**
   * <pre>
   * A unique identifier for the log entry.
   * </pre>
   *
   * <code>string insert_id = 4;</code>
   * @param value The insertId to set.
   */
  private void setInsertId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    insertId_ = value;
  }
  /**
   * <pre>
   * A unique identifier for the log entry.
   * </pre>
   *
   * <code>string insert_id = 4;</code>
   */
  private void clearInsertId() {
    
    insertId_ = getDefaultInstance().getInsertId();
  }
  /**
   * <pre>
   * A unique identifier for the log entry.
   * </pre>
   *
   * <code>string insert_id = 4;</code>
   * @param value The bytes for insertId to set.
   */
  private void setInsertIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    insertId_ = value.toStringUtf8();
    
  }

  public static final int LABELS_FIELD_NUMBER = 11;
  private static final class LabelsDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.String> labels_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetLabels() {
    return labels_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetMutableLabels() {
    if (!labels_.isMutable()) {
      labels_ = labels_.mutableCopy();
    }
    return labels_;
  }
  @java.lang.Override

  public int getLabelsCount() {
    return internalGetLabels().size();
  }
  /**
   * <pre>
   * A set of user-defined (key, value) data that provides additional
   * information about the log entry.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 11;</code>
   */
  @java.lang.Override

  public boolean containsLabels(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetLabels().containsKey(key);
  }
  /**
   * Use {@link #getLabelsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getLabels() {
    return getLabelsMap();
  }
  /**
   * <pre>
   * A set of user-defined (key, value) data that provides additional
   * information about the log entry.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 11;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetLabels());
  }
  /**
   * <pre>
   * A set of user-defined (key, value) data that provides additional
   * information about the log entry.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 11;</code>
   */
  @java.lang.Override

  public java.lang.String getLabelsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * A set of user-defined (key, value) data that provides additional
   * information about the log entry.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 11;</code>
   */
  @java.lang.Override

  public java.lang.String getLabelsOrThrow(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetLabels();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * A set of user-defined (key, value) data that provides additional
   * information about the log entry.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 11;</code>
   */
  private java.util.Map<java.lang.String, java.lang.String>
  getMutableLabelsMap() {
    return internalGetMutableLabels();
  }

  public static final int OPERATION_FIELD_NUMBER = 15;
  private google.events.cloud.audit.v1.LogEntryOperation operation_;
  /**
   * <pre>
   * Information about an operation associated with the log entry, if
   * applicable.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
   */
  @java.lang.Override
  public boolean hasOperation() {
    return operation_ != null;
  }
  /**
   * <pre>
   * Information about an operation associated with the log entry, if
   * applicable.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
   */
  @java.lang.Override
  public google.events.cloud.audit.v1.LogEntryOperation getOperation() {
    return operation_ == null ? google.events.cloud.audit.v1.LogEntryOperation.getDefaultInstance() : operation_;
  }
  /**
   * <pre>
   * Information about an operation associated with the log entry, if
   * applicable.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
   */
  private void setOperation(google.events.cloud.audit.v1.LogEntryOperation value) {
    value.getClass();
  operation_ = value;
    
    }
  /**
   * <pre>
   * Information about an operation associated with the log entry, if
   * applicable.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeOperation(google.events.cloud.audit.v1.LogEntryOperation value) {
    value.getClass();
  if (operation_ != null &&
        operation_ != google.events.cloud.audit.v1.LogEntryOperation.getDefaultInstance()) {
      operation_ =
        google.events.cloud.audit.v1.LogEntryOperation.newBuilder(operation_).mergeFrom(value).buildPartial();
    } else {
      operation_ = value;
    }
    
  }
  /**
   * <pre>
   * Information about an operation associated with the log entry, if
   * applicable.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
   */
  private void clearOperation() {  operation_ = null;
    
  }

  public static final int TIMESTAMP_FIELD_NUMBER = 9;
  private com.google.protobuf.Timestamp timestamp_;
  /**
   * <pre>
   * The time the event described by the log entry occurred.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 9;</code>
   */
  @java.lang.Override
  public boolean hasTimestamp() {
    return timestamp_ != null;
  }
  /**
   * <pre>
   * The time the event described by the log entry occurred.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 9;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getTimestamp() {
    return timestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : timestamp_;
  }
  /**
   * <pre>
   * The time the event described by the log entry occurred.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 9;</code>
   */
  private void setTimestamp(com.google.protobuf.Timestamp value) {
    value.getClass();
  timestamp_ = value;
    
    }
  /**
   * <pre>
   * The time the event described by the log entry occurred.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 9;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeTimestamp(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (timestamp_ != null &&
        timestamp_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      timestamp_ =
        com.google.protobuf.Timestamp.newBuilder(timestamp_).mergeFrom(value).buildPartial();
    } else {
      timestamp_ = value;
    }
    
  }
  /**
   * <pre>
   * The time the event described by the log entry occurred.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp timestamp = 9;</code>
   */
  private void clearTimestamp() {  timestamp_ = null;
    
  }

  public static final int RECEIVE_TIMESTAMP_FIELD_NUMBER = 24;
  private com.google.protobuf.Timestamp receiveTimestamp_;
  /**
   * <pre>
   * The time the log entry was received by Logging.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
   */
  @java.lang.Override
  public boolean hasReceiveTimestamp() {
    return receiveTimestamp_ != null;
  }
  /**
   * <pre>
   * The time the log entry was received by Logging.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getReceiveTimestamp() {
    return receiveTimestamp_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : receiveTimestamp_;
  }
  /**
   * <pre>
   * The time the log entry was received by Logging.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
   */
  private void setReceiveTimestamp(com.google.protobuf.Timestamp value) {
    value.getClass();
  receiveTimestamp_ = value;
    
    }
  /**
   * <pre>
   * The time the log entry was received by Logging.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeReceiveTimestamp(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (receiveTimestamp_ != null &&
        receiveTimestamp_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      receiveTimestamp_ =
        com.google.protobuf.Timestamp.newBuilder(receiveTimestamp_).mergeFrom(value).buildPartial();
    } else {
      receiveTimestamp_ = value;
    }
    
  }
  /**
   * <pre>
   * The time the log entry was received by Logging.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
   */
  private void clearReceiveTimestamp() {  receiveTimestamp_ = null;
    
  }

  public static final int SEVERITY_FIELD_NUMBER = 10;
  private int severity_;
  /**
   * <pre>
   * The severity of the log entry.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
   * @return The enum numeric value on the wire for severity.
   */
  @java.lang.Override
  public int getSeverityValue() {
    return severity_;
  }
  /**
   * <pre>
   * The severity of the log entry.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
   * @return The severity.
   */
  @java.lang.Override
  public google.events.cloud.audit.v1.LogSeverity getSeverity() {
    google.events.cloud.audit.v1.LogSeverity result = google.events.cloud.audit.v1.LogSeverity.forNumber(severity_);
    return result == null ? google.events.cloud.audit.v1.LogSeverity.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * The severity of the log entry.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
   * @param value The enum numeric value on the wire for severity to set.
   */
  private void setSeverityValue(int value) {
      severity_ = value;
  }
  /**
   * <pre>
   * The severity of the log entry.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
   * @param value The severity to set.
   */
  private void setSeverity(google.events.cloud.audit.v1.LogSeverity value) {
    severity_ = value.getNumber();
    
  }
  /**
   * <pre>
   * The severity of the log entry.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
   */
  private void clearSeverity() {
    
    severity_ = 0;
  }

  public static final int TRACE_FIELD_NUMBER = 22;
  private java.lang.String trace_;
  /**
   * <pre>
   * Resource name of the trace associated with the log entry, if any. If it
   * contains a relative resource name, the name is assumed to be relative to
   * `//tracing.googleapis.com`. Example:
   * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
   * </pre>
   *
   * <code>string trace = 22;</code>
   * @return The trace.
   */
  @java.lang.Override
  public java.lang.String getTrace() {
    return trace_;
  }
  /**
   * <pre>
   * Resource name of the trace associated with the log entry, if any. If it
   * contains a relative resource name, the name is assumed to be relative to
   * `//tracing.googleapis.com`. Example:
   * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
   * </pre>
   *
   * <code>string trace = 22;</code>
   * @return The bytes for trace.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTraceBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(trace_);
  }
  /**
   * <pre>
   * Resource name of the trace associated with the log entry, if any. If it
   * contains a relative resource name, the name is assumed to be relative to
   * `//tracing.googleapis.com`. Example:
   * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
   * </pre>
   *
   * <code>string trace = 22;</code>
   * @param value The trace to set.
   */
  private void setTrace(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    trace_ = value;
  }
  /**
   * <pre>
   * Resource name of the trace associated with the log entry, if any. If it
   * contains a relative resource name, the name is assumed to be relative to
   * `//tracing.googleapis.com`. Example:
   * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
   * </pre>
   *
   * <code>string trace = 22;</code>
   */
  private void clearTrace() {
    
    trace_ = getDefaultInstance().getTrace();
  }
  /**
   * <pre>
   * Resource name of the trace associated with the log entry, if any. If it
   * contains a relative resource name, the name is assumed to be relative to
   * `//tracing.googleapis.com`. Example:
   * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
   * </pre>
   *
   * <code>string trace = 22;</code>
   * @param value The bytes for trace to set.
   */
  private void setTraceBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    trace_ = value.toStringUtf8();
    
  }

  public static final int SPAN_ID_FIELD_NUMBER = 27;
  private java.lang.String spanId_;
  /**
   * <pre>
   * The span ID within the trace associated with the log entry, if any.
   * For Trace spans, this is the same format that the Trace API v2 uses: a
   * 16-character hexadecimal encoding of an 8-byte array, such as
   * `000000000000004a`.
   * </pre>
   *
   * <code>string span_id = 27;</code>
   * @return The spanId.
   */
  @java.lang.Override
  public java.lang.String getSpanId() {
    return spanId_;
  }
  /**
   * <pre>
   * The span ID within the trace associated with the log entry, if any.
   * For Trace spans, this is the same format that the Trace API v2 uses: a
   * 16-character hexadecimal encoding of an 8-byte array, such as
   * `000000000000004a`.
   * </pre>
   *
   * <code>string span_id = 27;</code>
   * @return The bytes for spanId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSpanIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(spanId_);
  }
  /**
   * <pre>
   * The span ID within the trace associated with the log entry, if any.
   * For Trace spans, this is the same format that the Trace API v2 uses: a
   * 16-character hexadecimal encoding of an 8-byte array, such as
   * `000000000000004a`.
   * </pre>
   *
   * <code>string span_id = 27;</code>
   * @param value The spanId to set.
   */
  private void setSpanId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    spanId_ = value;
  }
  /**
   * <pre>
   * The span ID within the trace associated with the log entry, if any.
   * For Trace spans, this is the same format that the Trace API v2 uses: a
   * 16-character hexadecimal encoding of an 8-byte array, such as
   * `000000000000004a`.
   * </pre>
   *
   * <code>string span_id = 27;</code>
   */
  private void clearSpanId() {
    
    spanId_ = getDefaultInstance().getSpanId();
  }
  /**
   * <pre>
   * The span ID within the trace associated with the log entry, if any.
   * For Trace spans, this is the same format that the Trace API v2 uses: a
   * 16-character hexadecimal encoding of an 8-byte array, such as
   * `000000000000004a`.
   * </pre>
   *
   * <code>string span_id = 27;</code>
   * @param value The bytes for spanId to set.
   */
  private void setSpanIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    spanId_ = value.toStringUtf8();
    
  }

  public static final int SPLIT_FIELD_NUMBER = 35;
  private google.events.cloud.audit.v1.LogSplit split_;
  /**
   * <pre>
   * Information indicating this LogEntry is part of a sequence of multiple logs
   * split from a single LogEntry.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
   */
  @java.lang.Override
  public boolean hasSplit() {
    return split_ != null;
  }
  /**
   * <pre>
   * Information indicating this LogEntry is part of a sequence of multiple logs
   * split from a single LogEntry.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
   */
  @java.lang.Override
  public google.events.cloud.audit.v1.LogSplit getSplit() {
    return split_ == null ? google.events.cloud.audit.v1.LogSplit.getDefaultInstance() : split_;
  }
  /**
   * <pre>
   * Information indicating this LogEntry is part of a sequence of multiple logs
   * split from a single LogEntry.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
   */
  private void setSplit(google.events.cloud.audit.v1.LogSplit value) {
    value.getClass();
  split_ = value;
    
    }
  /**
   * <pre>
   * Information indicating this LogEntry is part of a sequence of multiple logs
   * split from a single LogEntry.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeSplit(google.events.cloud.audit.v1.LogSplit value) {
    value.getClass();
  if (split_ != null &&
        split_ != google.events.cloud.audit.v1.LogSplit.getDefaultInstance()) {
      split_ =
        google.events.cloud.audit.v1.LogSplit.newBuilder(split_).mergeFrom(value).buildPartial();
    } else {
      split_ = value;
    }
    
  }
  /**
   * <pre>
   * Information indicating this LogEntry is part of a sequence of multiple logs
   * split from a single LogEntry.
   * </pre>
   *
   * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
   */
  private void clearSplit() {  split_ = null;
    
  }

  public static google.events.cloud.audit.v1.LogEntryData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.audit.v1.LogEntryData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.audit.v1.LogEntryData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.audit.v1.LogEntryData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.audit.v1.LogEntryData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.audit.v1.LogEntryData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.audit.v1.LogEntryData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.audit.v1.LogEntryData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.audit.v1.LogEntryData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.audit.v1.LogEntryData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.audit.v1.LogEntryData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.audit.v1.LogEntryData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.cloud.audit.v1.LogEntryData prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * The data within all Cloud Audit Logs log entry events.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.audit.v1.LogEntryData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.cloud.audit.v1.LogEntryData, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.audit.v1.LogEntryData)
      google.events.cloud.audit.v1.LogEntryDataOrBuilder {
    // Construct using google.events.cloud.audit.v1.LogEntryData.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The resource name of the log to which this log entry belongs.
     * </pre>
     *
     * <code>string log_name = 12;</code>
     * @return The logName.
     */
    @java.lang.Override
    public java.lang.String getLogName() {
      return instance.getLogName();
    }
    /**
     * <pre>
     * The resource name of the log to which this log entry belongs.
     * </pre>
     *
     * <code>string log_name = 12;</code>
     * @return The bytes for logName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLogNameBytes() {
      return instance.getLogNameBytes();
    }
    /**
     * <pre>
     * The resource name of the log to which this log entry belongs.
     * </pre>
     *
     * <code>string log_name = 12;</code>
     * @param value The logName to set.
     * @return This builder for chaining.
     */
    public Builder setLogName(
        java.lang.String value) {
      copyOnWrite();
      instance.setLogName(value);
      return this;
    }
    /**
     * <pre>
     * The resource name of the log to which this log entry belongs.
     * </pre>
     *
     * <code>string log_name = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearLogName() {
      copyOnWrite();
      instance.clearLogName();
      return this;
    }
    /**
     * <pre>
     * The resource name of the log to which this log entry belongs.
     * </pre>
     *
     * <code>string log_name = 12;</code>
     * @param value The bytes for logName to set.
     * @return This builder for chaining.
     */
    public Builder setLogNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setLogNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * The monitored resource that produced this log entry.
     * Example: a log entry that reports a database error would be associated with
     * the monitored resource designating the particular database that reported
     * the error.
     * </pre>
     *
     * <code>.com.google.api.MonitoredResource resource = 8;</code>
     */
    @java.lang.Override
    public boolean hasResource() {
      return instance.hasResource();
    }
    /**
     * <pre>
     * The monitored resource that produced this log entry.
     * Example: a log entry that reports a database error would be associated with
     * the monitored resource designating the particular database that reported
     * the error.
     * </pre>
     *
     * <code>.com.google.api.MonitoredResource resource = 8;</code>
     */
    @java.lang.Override
    public com.google.api.MonitoredResource getResource() {
      return instance.getResource();
    }
    /**
     * <pre>
     * The monitored resource that produced this log entry.
     * Example: a log entry that reports a database error would be associated with
     * the monitored resource designating the particular database that reported
     * the error.
     * </pre>
     *
     * <code>.com.google.api.MonitoredResource resource = 8;</code>
     */
    public Builder setResource(com.google.api.MonitoredResource value) {
      copyOnWrite();
      instance.setResource(value);
      return this;
      }
    /**
     * <pre>
     * The monitored resource that produced this log entry.
     * Example: a log entry that reports a database error would be associated with
     * the monitored resource designating the particular database that reported
     * the error.
     * </pre>
     *
     * <code>.com.google.api.MonitoredResource resource = 8;</code>
     */
    public Builder setResource(
        com.google.api.MonitoredResource.Builder builderForValue) {
      copyOnWrite();
      instance.setResource(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The monitored resource that produced this log entry.
     * Example: a log entry that reports a database error would be associated with
     * the monitored resource designating the particular database that reported
     * the error.
     * </pre>
     *
     * <code>.com.google.api.MonitoredResource resource = 8;</code>
     */
    public Builder mergeResource(com.google.api.MonitoredResource value) {
      copyOnWrite();
      instance.mergeResource(value);
      return this;
    }
    /**
     * <pre>
     * The monitored resource that produced this log entry.
     * Example: a log entry that reports a database error would be associated with
     * the monitored resource designating the particular database that reported
     * the error.
     * </pre>
     *
     * <code>.com.google.api.MonitoredResource resource = 8;</code>
     */
    public Builder clearResource() {  copyOnWrite();
      instance.clearResource();
      return this;
    }

    /**
     * <pre>
     * The log entry payload, which is always an AuditLog for Cloud Audit Log
     * events.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
     */
    @java.lang.Override
    public boolean hasProtoPayload() {
      return instance.hasProtoPayload();
    }
    /**
     * <pre>
     * The log entry payload, which is always an AuditLog for Cloud Audit Log
     * events.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
     */
    @java.lang.Override
    public google.events.cloud.audit.v1.AuditLog getProtoPayload() {
      return instance.getProtoPayload();
    }
    /**
     * <pre>
     * The log entry payload, which is always an AuditLog for Cloud Audit Log
     * events.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
     */
    public Builder setProtoPayload(google.events.cloud.audit.v1.AuditLog value) {
      copyOnWrite();
      instance.setProtoPayload(value);
      return this;
      }
    /**
     * <pre>
     * The log entry payload, which is always an AuditLog for Cloud Audit Log
     * events.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
     */
    public Builder setProtoPayload(
        google.events.cloud.audit.v1.AuditLog.Builder builderForValue) {
      copyOnWrite();
      instance.setProtoPayload(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The log entry payload, which is always an AuditLog for Cloud Audit Log
     * events.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
     */
    public Builder mergeProtoPayload(google.events.cloud.audit.v1.AuditLog value) {
      copyOnWrite();
      instance.mergeProtoPayload(value);
      return this;
    }
    /**
     * <pre>
     * The log entry payload, which is always an AuditLog for Cloud Audit Log
     * events.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.AuditLog proto_payload = 2;</code>
     */
    public Builder clearProtoPayload() {  copyOnWrite();
      instance.clearProtoPayload();
      return this;
    }

    /**
     * <pre>
     * A unique identifier for the log entry.
     * </pre>
     *
     * <code>string insert_id = 4;</code>
     * @return The insertId.
     */
    @java.lang.Override
    public java.lang.String getInsertId() {
      return instance.getInsertId();
    }
    /**
     * <pre>
     * A unique identifier for the log entry.
     * </pre>
     *
     * <code>string insert_id = 4;</code>
     * @return The bytes for insertId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInsertIdBytes() {
      return instance.getInsertIdBytes();
    }
    /**
     * <pre>
     * A unique identifier for the log entry.
     * </pre>
     *
     * <code>string insert_id = 4;</code>
     * @param value The insertId to set.
     * @return This builder for chaining.
     */
    public Builder setInsertId(
        java.lang.String value) {
      copyOnWrite();
      instance.setInsertId(value);
      return this;
    }
    /**
     * <pre>
     * A unique identifier for the log entry.
     * </pre>
     *
     * <code>string insert_id = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearInsertId() {
      copyOnWrite();
      instance.clearInsertId();
      return this;
    }
    /**
     * <pre>
     * A unique identifier for the log entry.
     * </pre>
     *
     * <code>string insert_id = 4;</code>
     * @param value The bytes for insertId to set.
     * @return This builder for chaining.
     */
    public Builder setInsertIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setInsertIdBytes(value);
      return this;
    }

    @java.lang.Override

    public int getLabelsCount() {
      return instance.getLabelsMap().size();
    }
    /**
     * <pre>
     * A set of user-defined (key, value) data that provides additional
     * information about the log entry.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    @java.lang.Override

    public boolean containsLabels(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getLabelsMap().containsKey(key);
    }

    public Builder clearLabels() {
      copyOnWrite();
      instance.getMutableLabelsMap().clear();
      return this;
    }
    /**
     * <pre>
     * A set of user-defined (key, value) data that provides additional
     * information about the log entry.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */

    public Builder removeLabels(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableLabelsMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * A set of user-defined (key, value) data that provides additional
     * information about the log entry.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getLabelsMap());
    }
    /**
     * <pre>
     * A set of user-defined (key, value) data that provides additional
     * information about the log entry.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getLabelsMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A set of user-defined (key, value) data that provides additional
     * information about the log entry.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    @java.lang.Override

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getLabelsMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * A set of user-defined (key, value) data that provides additional
     * information about the log entry.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    public Builder putLabels(
        java.lang.String key,
        java.lang.String value) {
      java.lang.Class<?> keyClass = key.getClass();
      java.lang.Class<?> valueClass = value.getClass();
      copyOnWrite();
      instance.getMutableLabelsMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * A set of user-defined (key, value) data that provides additional
     * information about the log entry.
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 11;</code>
     */
    public Builder putAllLabels(
        java.util.Map<java.lang.String, java.lang.String> values) {
      copyOnWrite();
      instance.getMutableLabelsMap().putAll(values);
      return this;
    }

    /**
     * <pre>
     * Information about an operation associated with the log entry, if
     * applicable.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
     */
    @java.lang.Override
    public boolean hasOperation() {
      return instance.hasOperation();
    }
    /**
     * <pre>
     * Information about an operation associated with the log entry, if
     * applicable.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
     */
    @java.lang.Override
    public google.events.cloud.audit.v1.LogEntryOperation getOperation() {
      return instance.getOperation();
    }
    /**
     * <pre>
     * Information about an operation associated with the log entry, if
     * applicable.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
     */
    public Builder setOperation(google.events.cloud.audit.v1.LogEntryOperation value) {
      copyOnWrite();
      instance.setOperation(value);
      return this;
      }
    /**
     * <pre>
     * Information about an operation associated with the log entry, if
     * applicable.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
     */
    public Builder setOperation(
        google.events.cloud.audit.v1.LogEntryOperation.Builder builderForValue) {
      copyOnWrite();
      instance.setOperation(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Information about an operation associated with the log entry, if
     * applicable.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
     */
    public Builder mergeOperation(google.events.cloud.audit.v1.LogEntryOperation value) {
      copyOnWrite();
      instance.mergeOperation(value);
      return this;
    }
    /**
     * <pre>
     * Information about an operation associated with the log entry, if
     * applicable.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogEntryOperation operation = 15;</code>
     */
    public Builder clearOperation() {  copyOnWrite();
      instance.clearOperation();
      return this;
    }

    /**
     * <pre>
     * The time the event described by the log entry occurred.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 9;</code>
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return instance.hasTimestamp();
    }
    /**
     * <pre>
     * The time the event described by the log entry occurred.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 9;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getTimestamp() {
      return instance.getTimestamp();
    }
    /**
     * <pre>
     * The time the event described by the log entry occurred.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 9;</code>
     */
    public Builder setTimestamp(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setTimestamp(value);
      return this;
      }
    /**
     * <pre>
     * The time the event described by the log entry occurred.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 9;</code>
     */
    public Builder setTimestamp(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setTimestamp(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The time the event described by the log entry occurred.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 9;</code>
     */
    public Builder mergeTimestamp(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeTimestamp(value);
      return this;
    }
    /**
     * <pre>
     * The time the event described by the log entry occurred.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timestamp = 9;</code>
     */
    public Builder clearTimestamp() {  copyOnWrite();
      instance.clearTimestamp();
      return this;
    }

    /**
     * <pre>
     * The time the log entry was received by Logging.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
     */
    @java.lang.Override
    public boolean hasReceiveTimestamp() {
      return instance.hasReceiveTimestamp();
    }
    /**
     * <pre>
     * The time the log entry was received by Logging.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getReceiveTimestamp() {
      return instance.getReceiveTimestamp();
    }
    /**
     * <pre>
     * The time the log entry was received by Logging.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
     */
    public Builder setReceiveTimestamp(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setReceiveTimestamp(value);
      return this;
      }
    /**
     * <pre>
     * The time the log entry was received by Logging.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
     */
    public Builder setReceiveTimestamp(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setReceiveTimestamp(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The time the log entry was received by Logging.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
     */
    public Builder mergeReceiveTimestamp(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeReceiveTimestamp(value);
      return this;
    }
    /**
     * <pre>
     * The time the log entry was received by Logging.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp receive_timestamp = 24;</code>
     */
    public Builder clearReceiveTimestamp() {  copyOnWrite();
      instance.clearReceiveTimestamp();
      return this;
    }

    /**
     * <pre>
     * The severity of the log entry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
     * @return The enum numeric value on the wire for severity.
     */
    @java.lang.Override
    public int getSeverityValue() {
      return instance.getSeverityValue();
    }
    /**
     * <pre>
     * The severity of the log entry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
     * @param value The severity to set.
     * @return This builder for chaining.
     */
    public Builder setSeverityValue(int value) {
      copyOnWrite();
      instance.setSeverityValue(value);
      return this;
    }
    /**
     * <pre>
     * The severity of the log entry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
     * @return The severity.
     */
    @java.lang.Override
    public google.events.cloud.audit.v1.LogSeverity getSeverity() {
      return instance.getSeverity();
    }
    /**
     * <pre>
     * The severity of the log entry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
     * @param value The enum numeric value on the wire for severity to set.
     * @return This builder for chaining.
     */
    public Builder setSeverity(google.events.cloud.audit.v1.LogSeverity value) {
      copyOnWrite();
      instance.setSeverity(value);
      return this;
    }
    /**
     * <pre>
     * The severity of the log entry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSeverity severity = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearSeverity() {
      copyOnWrite();
      instance.clearSeverity();
      return this;
    }

    /**
     * <pre>
     * Resource name of the trace associated with the log entry, if any. If it
     * contains a relative resource name, the name is assumed to be relative to
     * `//tracing.googleapis.com`. Example:
     * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
     * </pre>
     *
     * <code>string trace = 22;</code>
     * @return The trace.
     */
    @java.lang.Override
    public java.lang.String getTrace() {
      return instance.getTrace();
    }
    /**
     * <pre>
     * Resource name of the trace associated with the log entry, if any. If it
     * contains a relative resource name, the name is assumed to be relative to
     * `//tracing.googleapis.com`. Example:
     * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
     * </pre>
     *
     * <code>string trace = 22;</code>
     * @return The bytes for trace.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTraceBytes() {
      return instance.getTraceBytes();
    }
    /**
     * <pre>
     * Resource name of the trace associated with the log entry, if any. If it
     * contains a relative resource name, the name is assumed to be relative to
     * `//tracing.googleapis.com`. Example:
     * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
     * </pre>
     *
     * <code>string trace = 22;</code>
     * @param value The trace to set.
     * @return This builder for chaining.
     */
    public Builder setTrace(
        java.lang.String value) {
      copyOnWrite();
      instance.setTrace(value);
      return this;
    }
    /**
     * <pre>
     * Resource name of the trace associated with the log entry, if any. If it
     * contains a relative resource name, the name is assumed to be relative to
     * `//tracing.googleapis.com`. Example:
     * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
     * </pre>
     *
     * <code>string trace = 22;</code>
     * @return This builder for chaining.
     */
    public Builder clearTrace() {
      copyOnWrite();
      instance.clearTrace();
      return this;
    }
    /**
     * <pre>
     * Resource name of the trace associated with the log entry, if any. If it
     * contains a relative resource name, the name is assumed to be relative to
     * `//tracing.googleapis.com`. Example:
     * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
     * </pre>
     *
     * <code>string trace = 22;</code>
     * @param value The bytes for trace to set.
     * @return This builder for chaining.
     */
    public Builder setTraceBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setTraceBytes(value);
      return this;
    }

    /**
     * <pre>
     * The span ID within the trace associated with the log entry, if any.
     * For Trace spans, this is the same format that the Trace API v2 uses: a
     * 16-character hexadecimal encoding of an 8-byte array, such as
     * `000000000000004a`.
     * </pre>
     *
     * <code>string span_id = 27;</code>
     * @return The spanId.
     */
    @java.lang.Override
    public java.lang.String getSpanId() {
      return instance.getSpanId();
    }
    /**
     * <pre>
     * The span ID within the trace associated with the log entry, if any.
     * For Trace spans, this is the same format that the Trace API v2 uses: a
     * 16-character hexadecimal encoding of an 8-byte array, such as
     * `000000000000004a`.
     * </pre>
     *
     * <code>string span_id = 27;</code>
     * @return The bytes for spanId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSpanIdBytes() {
      return instance.getSpanIdBytes();
    }
    /**
     * <pre>
     * The span ID within the trace associated with the log entry, if any.
     * For Trace spans, this is the same format that the Trace API v2 uses: a
     * 16-character hexadecimal encoding of an 8-byte array, such as
     * `000000000000004a`.
     * </pre>
     *
     * <code>string span_id = 27;</code>
     * @param value The spanId to set.
     * @return This builder for chaining.
     */
    public Builder setSpanId(
        java.lang.String value) {
      copyOnWrite();
      instance.setSpanId(value);
      return this;
    }
    /**
     * <pre>
     * The span ID within the trace associated with the log entry, if any.
     * For Trace spans, this is the same format that the Trace API v2 uses: a
     * 16-character hexadecimal encoding of an 8-byte array, such as
     * `000000000000004a`.
     * </pre>
     *
     * <code>string span_id = 27;</code>
     * @return This builder for chaining.
     */
    public Builder clearSpanId() {
      copyOnWrite();
      instance.clearSpanId();
      return this;
    }
    /**
     * <pre>
     * The span ID within the trace associated with the log entry, if any.
     * For Trace spans, this is the same format that the Trace API v2 uses: a
     * 16-character hexadecimal encoding of an 8-byte array, such as
     * `000000000000004a`.
     * </pre>
     *
     * <code>string span_id = 27;</code>
     * @param value The bytes for spanId to set.
     * @return This builder for chaining.
     */
    public Builder setSpanIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSpanIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * Information indicating this LogEntry is part of a sequence of multiple logs
     * split from a single LogEntry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
     */
    @java.lang.Override
    public boolean hasSplit() {
      return instance.hasSplit();
    }
    /**
     * <pre>
     * Information indicating this LogEntry is part of a sequence of multiple logs
     * split from a single LogEntry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
     */
    @java.lang.Override
    public google.events.cloud.audit.v1.LogSplit getSplit() {
      return instance.getSplit();
    }
    /**
     * <pre>
     * Information indicating this LogEntry is part of a sequence of multiple logs
     * split from a single LogEntry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
     */
    public Builder setSplit(google.events.cloud.audit.v1.LogSplit value) {
      copyOnWrite();
      instance.setSplit(value);
      return this;
      }
    /**
     * <pre>
     * Information indicating this LogEntry is part of a sequence of multiple logs
     * split from a single LogEntry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
     */
    public Builder setSplit(
        google.events.cloud.audit.v1.LogSplit.Builder builderForValue) {
      copyOnWrite();
      instance.setSplit(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Information indicating this LogEntry is part of a sequence of multiple logs
     * split from a single LogEntry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
     */
    public Builder mergeSplit(google.events.cloud.audit.v1.LogSplit value) {
      copyOnWrite();
      instance.mergeSplit(value);
      return this;
    }
    /**
     * <pre>
     * Information indicating this LogEntry is part of a sequence of multiple logs
     * split from a single LogEntry.
     * </pre>
     *
     * <code>.google.events.cloud.audit.v1.LogSplit split = 35;</code>
     */
    public Builder clearSplit() {  copyOnWrite();
      instance.clearSplit();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.audit.v1.LogEntryData)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.cloud.audit.v1.LogEntryData();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "protoPayload_",
            "insertId_",
            "resource_",
            "timestamp_",
            "severity_",
            "labels_",
            LabelsDefaultEntryHolder.defaultEntry,
            "logName_",
            "operation_",
            "trace_",
            "receiveTimestamp_",
            "spanId_",
            "split_",
          };
          java.lang.String info =
              "\u0000\f\u0000\u0000\u0002#\f\u0001\u0000\u0000\u0002\t\u0004\u0208\b\t\t\t\n\f\u000b" +
              "2\f\u0208\u000f\t\u0016\u0208\u0018\t\u001b\u0208#\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.cloud.audit.v1.LogEntryData> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.cloud.audit.v1.LogEntryData.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.cloud.audit.v1.LogEntryData>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.cloud.audit.v1.LogEntryData)
  private static final google.events.cloud.audit.v1.LogEntryData DEFAULT_INSTANCE;
  static {
    LogEntryData defaultInstance = new LogEntryData();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      LogEntryData.class, defaultInstance);
  }

  public static google.events.cloud.audit.v1.LogEntryData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<LogEntryData> PARSER;

  public static com.google.protobuf.Parser<LogEntryData> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

