// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/iot/v1/data.proto

package google.events.cloud.iot.v1;

/**
 * <pre>
 * Details of an X.509 certificate. For informational purposes only.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.iot.v1.X509CertificateDetails}
 */
public  final class X509CertificateDetails extends
    com.google.protobuf.GeneratedMessageLite<
        X509CertificateDetails, X509CertificateDetails.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.iot.v1.X509CertificateDetails)
    X509CertificateDetailsOrBuilder {
  private X509CertificateDetails() {
    issuer_ = "";
    subject_ = "";
    signatureAlgorithm_ = "";
    publicKeyType_ = "";
  }
  public static final int ISSUER_FIELD_NUMBER = 1;
  private java.lang.String issuer_;
  /**
   * <pre>
   * The entity that signed the certificate.
   * </pre>
   *
   * <code>string issuer = 1;</code>
   * @return The issuer.
   */
  @java.lang.Override
  public java.lang.String getIssuer() {
    return issuer_;
  }
  /**
   * <pre>
   * The entity that signed the certificate.
   * </pre>
   *
   * <code>string issuer = 1;</code>
   * @return The bytes for issuer.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIssuerBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(issuer_);
  }
  /**
   * <pre>
   * The entity that signed the certificate.
   * </pre>
   *
   * <code>string issuer = 1;</code>
   * @param value The issuer to set.
   */
  private void setIssuer(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    issuer_ = value;
  }
  /**
   * <pre>
   * The entity that signed the certificate.
   * </pre>
   *
   * <code>string issuer = 1;</code>
   */
  private void clearIssuer() {
    
    issuer_ = getDefaultInstance().getIssuer();
  }
  /**
   * <pre>
   * The entity that signed the certificate.
   * </pre>
   *
   * <code>string issuer = 1;</code>
   * @param value The bytes for issuer to set.
   */
  private void setIssuerBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    issuer_ = value.toStringUtf8();
    
  }

  public static final int SUBJECT_FIELD_NUMBER = 2;
  private java.lang.String subject_;
  /**
   * <pre>
   * The entity the certificate and public key belong to.
   * </pre>
   *
   * <code>string subject = 2;</code>
   * @return The subject.
   */
  @java.lang.Override
  public java.lang.String getSubject() {
    return subject_;
  }
  /**
   * <pre>
   * The entity the certificate and public key belong to.
   * </pre>
   *
   * <code>string subject = 2;</code>
   * @return The bytes for subject.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSubjectBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(subject_);
  }
  /**
   * <pre>
   * The entity the certificate and public key belong to.
   * </pre>
   *
   * <code>string subject = 2;</code>
   * @param value The subject to set.
   */
  private void setSubject(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    subject_ = value;
  }
  /**
   * <pre>
   * The entity the certificate and public key belong to.
   * </pre>
   *
   * <code>string subject = 2;</code>
   */
  private void clearSubject() {
    
    subject_ = getDefaultInstance().getSubject();
  }
  /**
   * <pre>
   * The entity the certificate and public key belong to.
   * </pre>
   *
   * <code>string subject = 2;</code>
   * @param value The bytes for subject to set.
   */
  private void setSubjectBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    subject_ = value.toStringUtf8();
    
  }

  public static final int START_TIME_FIELD_NUMBER = 3;
  private com.google.protobuf.Timestamp startTime_;
  /**
   * <pre>
   * The time the certificate becomes valid.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 3;</code>
   */
  @java.lang.Override
  public boolean hasStartTime() {
    return startTime_ != null;
  }
  /**
   * <pre>
   * The time the certificate becomes valid.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getStartTime() {
    return startTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : startTime_;
  }
  /**
   * <pre>
   * The time the certificate becomes valid.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 3;</code>
   */
  private void setStartTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  startTime_ = value;
    
    }
  /**
   * <pre>
   * The time the certificate becomes valid.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeStartTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (startTime_ != null &&
        startTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      startTime_ =
        com.google.protobuf.Timestamp.newBuilder(startTime_).mergeFrom(value).buildPartial();
    } else {
      startTime_ = value;
    }
    
  }
  /**
   * <pre>
   * The time the certificate becomes valid.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp start_time = 3;</code>
   */
  private void clearStartTime() {  startTime_ = null;
    
  }

  public static final int EXPIRY_TIME_FIELD_NUMBER = 4;
  private com.google.protobuf.Timestamp expiryTime_;
  /**
   * <pre>
   * The time the certificate becomes invalid.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiry_time = 4;</code>
   */
  @java.lang.Override
  public boolean hasExpiryTime() {
    return expiryTime_ != null;
  }
  /**
   * <pre>
   * The time the certificate becomes invalid.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiry_time = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getExpiryTime() {
    return expiryTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expiryTime_;
  }
  /**
   * <pre>
   * The time the certificate becomes invalid.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiry_time = 4;</code>
   */
  private void setExpiryTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  expiryTime_ = value;
    
    }
  /**
   * <pre>
   * The time the certificate becomes invalid.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiry_time = 4;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeExpiryTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (expiryTime_ != null &&
        expiryTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      expiryTime_ =
        com.google.protobuf.Timestamp.newBuilder(expiryTime_).mergeFrom(value).buildPartial();
    } else {
      expiryTime_ = value;
    }
    
  }
  /**
   * <pre>
   * The time the certificate becomes invalid.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expiry_time = 4;</code>
   */
  private void clearExpiryTime() {  expiryTime_ = null;
    
  }

  public static final int SIGNATURE_ALGORITHM_FIELD_NUMBER = 5;
  private java.lang.String signatureAlgorithm_;
  /**
   * <pre>
   * The algorithm used to sign the certificate.
   * </pre>
   *
   * <code>string signature_algorithm = 5;</code>
   * @return The signatureAlgorithm.
   */
  @java.lang.Override
  public java.lang.String getSignatureAlgorithm() {
    return signatureAlgorithm_;
  }
  /**
   * <pre>
   * The algorithm used to sign the certificate.
   * </pre>
   *
   * <code>string signature_algorithm = 5;</code>
   * @return The bytes for signatureAlgorithm.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSignatureAlgorithmBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(signatureAlgorithm_);
  }
  /**
   * <pre>
   * The algorithm used to sign the certificate.
   * </pre>
   *
   * <code>string signature_algorithm = 5;</code>
   * @param value The signatureAlgorithm to set.
   */
  private void setSignatureAlgorithm(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    signatureAlgorithm_ = value;
  }
  /**
   * <pre>
   * The algorithm used to sign the certificate.
   * </pre>
   *
   * <code>string signature_algorithm = 5;</code>
   */
  private void clearSignatureAlgorithm() {
    
    signatureAlgorithm_ = getDefaultInstance().getSignatureAlgorithm();
  }
  /**
   * <pre>
   * The algorithm used to sign the certificate.
   * </pre>
   *
   * <code>string signature_algorithm = 5;</code>
   * @param value The bytes for signatureAlgorithm to set.
   */
  private void setSignatureAlgorithmBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    signatureAlgorithm_ = value.toStringUtf8();
    
  }

  public static final int PUBLIC_KEY_TYPE_FIELD_NUMBER = 6;
  private java.lang.String publicKeyType_;
  /**
   * <pre>
   * The type of public key in the certificate.
   * </pre>
   *
   * <code>string public_key_type = 6;</code>
   * @return The publicKeyType.
   */
  @java.lang.Override
  public java.lang.String getPublicKeyType() {
    return publicKeyType_;
  }
  /**
   * <pre>
   * The type of public key in the certificate.
   * </pre>
   *
   * <code>string public_key_type = 6;</code>
   * @return The bytes for publicKeyType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPublicKeyTypeBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(publicKeyType_);
  }
  /**
   * <pre>
   * The type of public key in the certificate.
   * </pre>
   *
   * <code>string public_key_type = 6;</code>
   * @param value The publicKeyType to set.
   */
  private void setPublicKeyType(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    publicKeyType_ = value;
  }
  /**
   * <pre>
   * The type of public key in the certificate.
   * </pre>
   *
   * <code>string public_key_type = 6;</code>
   */
  private void clearPublicKeyType() {
    
    publicKeyType_ = getDefaultInstance().getPublicKeyType();
  }
  /**
   * <pre>
   * The type of public key in the certificate.
   * </pre>
   *
   * <code>string public_key_type = 6;</code>
   * @param value The bytes for publicKeyType to set.
   */
  private void setPublicKeyTypeBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    publicKeyType_ = value.toStringUtf8();
    
  }

  public static google.events.cloud.iot.v1.X509CertificateDetails parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.X509CertificateDetails parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.X509CertificateDetails parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.X509CertificateDetails parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.X509CertificateDetails parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.X509CertificateDetails parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.X509CertificateDetails parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.X509CertificateDetails parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.X509CertificateDetails parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.X509CertificateDetails parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.X509CertificateDetails parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.X509CertificateDetails parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.cloud.iot.v1.X509CertificateDetails prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Details of an X.509 certificate. For informational purposes only.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.iot.v1.X509CertificateDetails}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.cloud.iot.v1.X509CertificateDetails, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.iot.v1.X509CertificateDetails)
      google.events.cloud.iot.v1.X509CertificateDetailsOrBuilder {
    // Construct using google.events.cloud.iot.v1.X509CertificateDetails.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The entity that signed the certificate.
     * </pre>
     *
     * <code>string issuer = 1;</code>
     * @return The issuer.
     */
    @java.lang.Override
    public java.lang.String getIssuer() {
      return instance.getIssuer();
    }
    /**
     * <pre>
     * The entity that signed the certificate.
     * </pre>
     *
     * <code>string issuer = 1;</code>
     * @return The bytes for issuer.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIssuerBytes() {
      return instance.getIssuerBytes();
    }
    /**
     * <pre>
     * The entity that signed the certificate.
     * </pre>
     *
     * <code>string issuer = 1;</code>
     * @param value The issuer to set.
     * @return This builder for chaining.
     */
    public Builder setIssuer(
        java.lang.String value) {
      copyOnWrite();
      instance.setIssuer(value);
      return this;
    }
    /**
     * <pre>
     * The entity that signed the certificate.
     * </pre>
     *
     * <code>string issuer = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearIssuer() {
      copyOnWrite();
      instance.clearIssuer();
      return this;
    }
    /**
     * <pre>
     * The entity that signed the certificate.
     * </pre>
     *
     * <code>string issuer = 1;</code>
     * @param value The bytes for issuer to set.
     * @return This builder for chaining.
     */
    public Builder setIssuerBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setIssuerBytes(value);
      return this;
    }

    /**
     * <pre>
     * The entity the certificate and public key belong to.
     * </pre>
     *
     * <code>string subject = 2;</code>
     * @return The subject.
     */
    @java.lang.Override
    public java.lang.String getSubject() {
      return instance.getSubject();
    }
    /**
     * <pre>
     * The entity the certificate and public key belong to.
     * </pre>
     *
     * <code>string subject = 2;</code>
     * @return The bytes for subject.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSubjectBytes() {
      return instance.getSubjectBytes();
    }
    /**
     * <pre>
     * The entity the certificate and public key belong to.
     * </pre>
     *
     * <code>string subject = 2;</code>
     * @param value The subject to set.
     * @return This builder for chaining.
     */
    public Builder setSubject(
        java.lang.String value) {
      copyOnWrite();
      instance.setSubject(value);
      return this;
    }
    /**
     * <pre>
     * The entity the certificate and public key belong to.
     * </pre>
     *
     * <code>string subject = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSubject() {
      copyOnWrite();
      instance.clearSubject();
      return this;
    }
    /**
     * <pre>
     * The entity the certificate and public key belong to.
     * </pre>
     *
     * <code>string subject = 2;</code>
     * @param value The bytes for subject to set.
     * @return This builder for chaining.
     */
    public Builder setSubjectBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSubjectBytes(value);
      return this;
    }

    /**
     * <pre>
     * The time the certificate becomes valid.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 3;</code>
     */
    @java.lang.Override
    public boolean hasStartTime() {
      return instance.hasStartTime();
    }
    /**
     * <pre>
     * The time the certificate becomes valid.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getStartTime() {
      return instance.getStartTime();
    }
    /**
     * <pre>
     * The time the certificate becomes valid.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 3;</code>
     */
    public Builder setStartTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setStartTime(value);
      return this;
      }
    /**
     * <pre>
     * The time the certificate becomes valid.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 3;</code>
     */
    public Builder setStartTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setStartTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The time the certificate becomes valid.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 3;</code>
     */
    public Builder mergeStartTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeStartTime(value);
      return this;
    }
    /**
     * <pre>
     * The time the certificate becomes valid.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp start_time = 3;</code>
     */
    public Builder clearStartTime() {  copyOnWrite();
      instance.clearStartTime();
      return this;
    }

    /**
     * <pre>
     * The time the certificate becomes invalid.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiry_time = 4;</code>
     */
    @java.lang.Override
    public boolean hasExpiryTime() {
      return instance.hasExpiryTime();
    }
    /**
     * <pre>
     * The time the certificate becomes invalid.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiry_time = 4;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getExpiryTime() {
      return instance.getExpiryTime();
    }
    /**
     * <pre>
     * The time the certificate becomes invalid.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiry_time = 4;</code>
     */
    public Builder setExpiryTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setExpiryTime(value);
      return this;
      }
    /**
     * <pre>
     * The time the certificate becomes invalid.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiry_time = 4;</code>
     */
    public Builder setExpiryTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setExpiryTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The time the certificate becomes invalid.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiry_time = 4;</code>
     */
    public Builder mergeExpiryTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeExpiryTime(value);
      return this;
    }
    /**
     * <pre>
     * The time the certificate becomes invalid.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expiry_time = 4;</code>
     */
    public Builder clearExpiryTime() {  copyOnWrite();
      instance.clearExpiryTime();
      return this;
    }

    /**
     * <pre>
     * The algorithm used to sign the certificate.
     * </pre>
     *
     * <code>string signature_algorithm = 5;</code>
     * @return The signatureAlgorithm.
     */
    @java.lang.Override
    public java.lang.String getSignatureAlgorithm() {
      return instance.getSignatureAlgorithm();
    }
    /**
     * <pre>
     * The algorithm used to sign the certificate.
     * </pre>
     *
     * <code>string signature_algorithm = 5;</code>
     * @return The bytes for signatureAlgorithm.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSignatureAlgorithmBytes() {
      return instance.getSignatureAlgorithmBytes();
    }
    /**
     * <pre>
     * The algorithm used to sign the certificate.
     * </pre>
     *
     * <code>string signature_algorithm = 5;</code>
     * @param value The signatureAlgorithm to set.
     * @return This builder for chaining.
     */
    public Builder setSignatureAlgorithm(
        java.lang.String value) {
      copyOnWrite();
      instance.setSignatureAlgorithm(value);
      return this;
    }
    /**
     * <pre>
     * The algorithm used to sign the certificate.
     * </pre>
     *
     * <code>string signature_algorithm = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearSignatureAlgorithm() {
      copyOnWrite();
      instance.clearSignatureAlgorithm();
      return this;
    }
    /**
     * <pre>
     * The algorithm used to sign the certificate.
     * </pre>
     *
     * <code>string signature_algorithm = 5;</code>
     * @param value The bytes for signatureAlgorithm to set.
     * @return This builder for chaining.
     */
    public Builder setSignatureAlgorithmBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSignatureAlgorithmBytes(value);
      return this;
    }

    /**
     * <pre>
     * The type of public key in the certificate.
     * </pre>
     *
     * <code>string public_key_type = 6;</code>
     * @return The publicKeyType.
     */
    @java.lang.Override
    public java.lang.String getPublicKeyType() {
      return instance.getPublicKeyType();
    }
    /**
     * <pre>
     * The type of public key in the certificate.
     * </pre>
     *
     * <code>string public_key_type = 6;</code>
     * @return The bytes for publicKeyType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPublicKeyTypeBytes() {
      return instance.getPublicKeyTypeBytes();
    }
    /**
     * <pre>
     * The type of public key in the certificate.
     * </pre>
     *
     * <code>string public_key_type = 6;</code>
     * @param value The publicKeyType to set.
     * @return This builder for chaining.
     */
    public Builder setPublicKeyType(
        java.lang.String value) {
      copyOnWrite();
      instance.setPublicKeyType(value);
      return this;
    }
    /**
     * <pre>
     * The type of public key in the certificate.
     * </pre>
     *
     * <code>string public_key_type = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearPublicKeyType() {
      copyOnWrite();
      instance.clearPublicKeyType();
      return this;
    }
    /**
     * <pre>
     * The type of public key in the certificate.
     * </pre>
     *
     * <code>string public_key_type = 6;</code>
     * @param value The bytes for publicKeyType to set.
     * @return This builder for chaining.
     */
    public Builder setPublicKeyTypeBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPublicKeyTypeBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.iot.v1.X509CertificateDetails)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.cloud.iot.v1.X509CertificateDetails();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "issuer_",
            "subject_",
            "startTime_",
            "expiryTime_",
            "signatureAlgorithm_",
            "publicKeyType_",
          };
          java.lang.String info =
              "\u0000\u0006\u0000\u0000\u0001\u0006\u0006\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
              "\u0003\t\u0004\t\u0005\u0208\u0006\u0208";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.cloud.iot.v1.X509CertificateDetails> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.cloud.iot.v1.X509CertificateDetails.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.cloud.iot.v1.X509CertificateDetails>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.cloud.iot.v1.X509CertificateDetails)
  private static final google.events.cloud.iot.v1.X509CertificateDetails DEFAULT_INSTANCE;
  static {
    X509CertificateDetails defaultInstance = new X509CertificateDetails();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      X509CertificateDetails.class, defaultInstance);
  }

  public static google.events.cloud.iot.v1.X509CertificateDetails getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<X509CertificateDetails> PARSER;

  public static com.google.protobuf.Parser<X509CertificateDetails> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

