// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/iot/v1/data.proto

package google.events.cloud.iot.v1;

/**
 * <pre>
 * A server-stored registry credential used to validate device credentials.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.iot.v1.RegistryCredential}
 */
public  final class RegistryCredential extends
    com.google.protobuf.GeneratedMessageLite<
        RegistryCredential, RegistryCredential.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.iot.v1.RegistryCredential)
    RegistryCredentialOrBuilder {
  private RegistryCredential() {
  }
  private int credentialCase_ = 0;
  private java.lang.Object credential_;
  public enum CredentialCase {
    PUBLIC_KEY_CERTIFICATE(1),
    CREDENTIAL_NOT_SET(0);
    private final int value;
    private CredentialCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CredentialCase valueOf(int value) {
      return forNumber(value);
    }

    public static CredentialCase forNumber(int value) {
      switch (value) {
        case 1: return PUBLIC_KEY_CERTIFICATE;
        case 0: return CREDENTIAL_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public CredentialCase
  getCredentialCase() {
    return CredentialCase.forNumber(
        credentialCase_);
  }

  private void clearCredential() {
    credentialCase_ = 0;
    credential_ = null;
  }

  public static final int PUBLIC_KEY_CERTIFICATE_FIELD_NUMBER = 1;
  /**
   * <pre>
   * A public key certificate used to verify the device credentials.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;</code>
   */
  @java.lang.Override
  public boolean hasPublicKeyCertificate() {
    return credentialCase_ == 1;
  }
  /**
   * <pre>
   * A public key certificate used to verify the device credentials.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;</code>
   */
  @java.lang.Override
  public google.events.cloud.iot.v1.PublicKeyCertificate getPublicKeyCertificate() {
    if (credentialCase_ == 1) {
       return (google.events.cloud.iot.v1.PublicKeyCertificate) credential_;
    }
    return google.events.cloud.iot.v1.PublicKeyCertificate.getDefaultInstance();
  }
  /**
   * <pre>
   * A public key certificate used to verify the device credentials.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;</code>
   */
  private void setPublicKeyCertificate(google.events.cloud.iot.v1.PublicKeyCertificate value) {
    value.getClass();
  credential_ = value;
    credentialCase_ = 1;
  }
  /**
   * <pre>
   * A public key certificate used to verify the device credentials.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;</code>
   */
  private void mergePublicKeyCertificate(google.events.cloud.iot.v1.PublicKeyCertificate value) {
    value.getClass();
  if (credentialCase_ == 1 &&
        credential_ != google.events.cloud.iot.v1.PublicKeyCertificate.getDefaultInstance()) {
      credential_ = google.events.cloud.iot.v1.PublicKeyCertificate.newBuilder((google.events.cloud.iot.v1.PublicKeyCertificate) credential_)
          .mergeFrom(value).buildPartial();
    } else {
      credential_ = value;
    }
    credentialCase_ = 1;
  }
  /**
   * <pre>
   * A public key certificate used to verify the device credentials.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;</code>
   */
  private void clearPublicKeyCertificate() {
    if (credentialCase_ == 1) {
      credentialCase_ = 0;
      credential_ = null;
    }
  }

  public static google.events.cloud.iot.v1.RegistryCredential parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.RegistryCredential parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.RegistryCredential parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.RegistryCredential parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.RegistryCredential parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.RegistryCredential parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.RegistryCredential parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.RegistryCredential parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.RegistryCredential parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.RegistryCredential parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.RegistryCredential parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.RegistryCredential parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.cloud.iot.v1.RegistryCredential prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A server-stored registry credential used to validate device credentials.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.iot.v1.RegistryCredential}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.cloud.iot.v1.RegistryCredential, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.iot.v1.RegistryCredential)
      google.events.cloud.iot.v1.RegistryCredentialOrBuilder {
    // Construct using google.events.cloud.iot.v1.RegistryCredential.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public CredentialCase
        getCredentialCase() {
      return instance.getCredentialCase();
    }

    public Builder clearCredential() {
      copyOnWrite();
      instance.clearCredential();
      return this;
    }


    /**
     * <pre>
     * A public key certificate used to verify the device credentials.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;</code>
     */
    @java.lang.Override
    public boolean hasPublicKeyCertificate() {
      return instance.hasPublicKeyCertificate();
    }
    /**
     * <pre>
     * A public key certificate used to verify the device credentials.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;</code>
     */
    @java.lang.Override
    public google.events.cloud.iot.v1.PublicKeyCertificate getPublicKeyCertificate() {
      return instance.getPublicKeyCertificate();
    }
    /**
     * <pre>
     * A public key certificate used to verify the device credentials.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;</code>
     */
    public Builder setPublicKeyCertificate(google.events.cloud.iot.v1.PublicKeyCertificate value) {
      copyOnWrite();
      instance.setPublicKeyCertificate(value);
      return this;
    }
    /**
     * <pre>
     * A public key certificate used to verify the device credentials.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;</code>
     */
    public Builder setPublicKeyCertificate(
        google.events.cloud.iot.v1.PublicKeyCertificate.Builder builderForValue) {
      copyOnWrite();
      instance.setPublicKeyCertificate(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A public key certificate used to verify the device credentials.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;</code>
     */
    public Builder mergePublicKeyCertificate(google.events.cloud.iot.v1.PublicKeyCertificate value) {
      copyOnWrite();
      instance.mergePublicKeyCertificate(value);
      return this;
    }
    /**
     * <pre>
     * A public key certificate used to verify the device credentials.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.PublicKeyCertificate public_key_certificate = 1;</code>
     */
    public Builder clearPublicKeyCertificate() {
      copyOnWrite();
      instance.clearPublicKeyCertificate();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.iot.v1.RegistryCredential)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.cloud.iot.v1.RegistryCredential();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "credential_",
            "credentialCase_",
            google.events.cloud.iot.v1.PublicKeyCertificate.class,
          };
          java.lang.String info =
              "\u0000\u0001\u0001\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001<\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.cloud.iot.v1.RegistryCredential> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.cloud.iot.v1.RegistryCredential.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.cloud.iot.v1.RegistryCredential>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.cloud.iot.v1.RegistryCredential)
  private static final google.events.cloud.iot.v1.RegistryCredential DEFAULT_INSTANCE;
  static {
    RegistryCredential defaultInstance = new RegistryCredential();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      RegistryCredential.class, defaultInstance);
  }

  public static google.events.cloud.iot.v1.RegistryCredential getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<RegistryCredential> PARSER;

  public static com.google.protobuf.Parser<RegistryCredential> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

