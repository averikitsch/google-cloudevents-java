// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/iot/v1/data.proto

package google.events.cloud.iot.v1;

/**
 * <pre>
 * The device resource.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.iot.v1.Device}
 */
public  final class Device extends
    com.google.protobuf.GeneratedMessageLite<
        Device, Device.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.iot.v1.Device)
    DeviceOrBuilder {
  private Device() {
    id_ = "";
    name_ = "";
    credentials_ = emptyProtobufList();
  }
  public static final int ID_FIELD_NUMBER = 1;
  private java.lang.String id_;
  /**
   * <pre>
   * The user-defined device identifier. The device ID must be unique
   * within a device registry.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The id.
   */
  @java.lang.Override
  public java.lang.String getId() {
    return id_;
  }
  /**
   * <pre>
   * The user-defined device identifier. The device ID must be unique
   * within a device registry.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(id_);
  }
  /**
   * <pre>
   * The user-defined device identifier. The device ID must be unique
   * within a device registry.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @param value The id to set.
   */
  private void setId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    id_ = value;
  }
  /**
   * <pre>
   * The user-defined device identifier. The device ID must be unique
   * within a device registry.
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  private void clearId() {
    
    id_ = getDefaultInstance().getId();
  }
  /**
   * <pre>
   * The user-defined device identifier. The device ID must be unique
   * within a device registry.
   * </pre>
   *
   * <code>string id = 1;</code>
   * @param value The bytes for id to set.
   */
  private void setIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    id_ = value.toStringUtf8();
    
  }

  public static final int NAME_FIELD_NUMBER = 2;
  private java.lang.String name_;
  /**
   * <pre>
   * The resource path name. For example,
   * `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
   * `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
   * When `name` is populated as a response from the service, it always ends
   * in the device numeric ID.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <pre>
   * The resource path name. For example,
   * `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
   * `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
   * When `name` is populated as a response from the service, it always ends
   * in the device numeric ID.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <pre>
   * The resource path name. For example,
   * `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
   * `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
   * When `name` is populated as a response from the service, it always ends
   * in the device numeric ID.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @param value The name to set.
   */
  private void setName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    name_ = value;
  }
  /**
   * <pre>
   * The resource path name. For example,
   * `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
   * `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
   * When `name` is populated as a response from the service, it always ends
   * in the device numeric ID.
   * </pre>
   *
   * <code>string name = 2;</code>
   */
  private void clearName() {
    
    name_ = getDefaultInstance().getName();
  }
  /**
   * <pre>
   * The resource path name. For example,
   * `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
   * `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
   * When `name` is populated as a response from the service, it always ends
   * in the device numeric ID.
   * </pre>
   *
   * <code>string name = 2;</code>
   * @param value The bytes for name to set.
   */
  private void setNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    name_ = value.toStringUtf8();
    
  }

  public static final int NUM_ID_FIELD_NUMBER = 3;
  private long numId_;
  /**
   * <pre>
   * [Output only] A server-defined unique numeric ID for the device. This is a
   * more compact way to identify devices, and it is globally unique.
   * </pre>
   *
   * <code>uint64 num_id = 3;</code>
   * @return The numId.
   */
  @java.lang.Override
  public long getNumId() {
    return numId_;
  }
  /**
   * <pre>
   * [Output only] A server-defined unique numeric ID for the device. This is a
   * more compact way to identify devices, and it is globally unique.
   * </pre>
   *
   * <code>uint64 num_id = 3;</code>
   * @param value The numId to set.
   */
  private void setNumId(long value) {
    
    numId_ = value;
  }
  /**
   * <pre>
   * [Output only] A server-defined unique numeric ID for the device. This is a
   * more compact way to identify devices, and it is globally unique.
   * </pre>
   *
   * <code>uint64 num_id = 3;</code>
   */
  private void clearNumId() {
    
    numId_ = 0L;
  }

  public static final int CREDENTIALS_FIELD_NUMBER = 12;
  private com.google.protobuf.Internal.ProtobufList<google.events.cloud.iot.v1.DeviceCredential> credentials_;
  /**
   * <pre>
   * The credentials used to authenticate this device. To allow credential
   * rotation without interruption, multiple device credentials can be bound to
   * this device. No more than 3 credentials can be bound to a single device at
   * a time. When new credentials are added to a device, they are verified
   * against the registry credentials. For details, see the description of the
   * `DeviceRegistry.credentials` field.
   * </pre>
   *
   * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
   */
  @java.lang.Override
  public java.util.List<google.events.cloud.iot.v1.DeviceCredential> getCredentialsList() {
    return credentials_;
  }
  /**
   * <pre>
   * The credentials used to authenticate this device. To allow credential
   * rotation without interruption, multiple device credentials can be bound to
   * this device. No more than 3 credentials can be bound to a single device at
   * a time. When new credentials are added to a device, they are verified
   * against the registry credentials. For details, see the description of the
   * `DeviceRegistry.credentials` field.
   * </pre>
   *
   * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
   */
  public java.util.List<? extends google.events.cloud.iot.v1.DeviceCredentialOrBuilder> 
      getCredentialsOrBuilderList() {
    return credentials_;
  }
  /**
   * <pre>
   * The credentials used to authenticate this device. To allow credential
   * rotation without interruption, multiple device credentials can be bound to
   * this device. No more than 3 credentials can be bound to a single device at
   * a time. When new credentials are added to a device, they are verified
   * against the registry credentials. For details, see the description of the
   * `DeviceRegistry.credentials` field.
   * </pre>
   *
   * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
   */
  @java.lang.Override
  public int getCredentialsCount() {
    return credentials_.size();
  }
  /**
   * <pre>
   * The credentials used to authenticate this device. To allow credential
   * rotation without interruption, multiple device credentials can be bound to
   * this device. No more than 3 credentials can be bound to a single device at
   * a time. When new credentials are added to a device, they are verified
   * against the registry credentials. For details, see the description of the
   * `DeviceRegistry.credentials` field.
   * </pre>
   *
   * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
   */
  @java.lang.Override
  public google.events.cloud.iot.v1.DeviceCredential getCredentials(int index) {
    return credentials_.get(index);
  }
  /**
   * <pre>
   * The credentials used to authenticate this device. To allow credential
   * rotation without interruption, multiple device credentials can be bound to
   * this device. No more than 3 credentials can be bound to a single device at
   * a time. When new credentials are added to a device, they are verified
   * against the registry credentials. For details, see the description of the
   * `DeviceRegistry.credentials` field.
   * </pre>
   *
   * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
   */
  public google.events.cloud.iot.v1.DeviceCredentialOrBuilder getCredentialsOrBuilder(
      int index) {
    return credentials_.get(index);
  }
  private void ensureCredentialsIsMutable() {
    com.google.protobuf.Internal.ProtobufList<google.events.cloud.iot.v1.DeviceCredential> tmp = credentials_;
    if (!tmp.isModifiable()) {
      credentials_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * The credentials used to authenticate this device. To allow credential
   * rotation without interruption, multiple device credentials can be bound to
   * this device. No more than 3 credentials can be bound to a single device at
   * a time. When new credentials are added to a device, they are verified
   * against the registry credentials. For details, see the description of the
   * `DeviceRegistry.credentials` field.
   * </pre>
   *
   * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
   */
  private void setCredentials(
      int index, google.events.cloud.iot.v1.DeviceCredential value) {
    value.getClass();
  ensureCredentialsIsMutable();
    credentials_.set(index, value);
  }
  /**
   * <pre>
   * The credentials used to authenticate this device. To allow credential
   * rotation without interruption, multiple device credentials can be bound to
   * this device. No more than 3 credentials can be bound to a single device at
   * a time. When new credentials are added to a device, they are verified
   * against the registry credentials. For details, see the description of the
   * `DeviceRegistry.credentials` field.
   * </pre>
   *
   * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
   */
  private void addCredentials(google.events.cloud.iot.v1.DeviceCredential value) {
    value.getClass();
  ensureCredentialsIsMutable();
    credentials_.add(value);
  }
  /**
   * <pre>
   * The credentials used to authenticate this device. To allow credential
   * rotation without interruption, multiple device credentials can be bound to
   * this device. No more than 3 credentials can be bound to a single device at
   * a time. When new credentials are added to a device, they are verified
   * against the registry credentials. For details, see the description of the
   * `DeviceRegistry.credentials` field.
   * </pre>
   *
   * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
   */
  private void addCredentials(
      int index, google.events.cloud.iot.v1.DeviceCredential value) {
    value.getClass();
  ensureCredentialsIsMutable();
    credentials_.add(index, value);
  }
  /**
   * <pre>
   * The credentials used to authenticate this device. To allow credential
   * rotation without interruption, multiple device credentials can be bound to
   * this device. No more than 3 credentials can be bound to a single device at
   * a time. When new credentials are added to a device, they are verified
   * against the registry credentials. For details, see the description of the
   * `DeviceRegistry.credentials` field.
   * </pre>
   *
   * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
   */
  private void addAllCredentials(
      java.lang.Iterable<? extends google.events.cloud.iot.v1.DeviceCredential> values) {
    ensureCredentialsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, credentials_);
  }
  /**
   * <pre>
   * The credentials used to authenticate this device. To allow credential
   * rotation without interruption, multiple device credentials can be bound to
   * this device. No more than 3 credentials can be bound to a single device at
   * a time. When new credentials are added to a device, they are verified
   * against the registry credentials. For details, see the description of the
   * `DeviceRegistry.credentials` field.
   * </pre>
   *
   * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
   */
  private void clearCredentials() {
    credentials_ = emptyProtobufList();
  }
  /**
   * <pre>
   * The credentials used to authenticate this device. To allow credential
   * rotation without interruption, multiple device credentials can be bound to
   * this device. No more than 3 credentials can be bound to a single device at
   * a time. When new credentials are added to a device, they are verified
   * against the registry credentials. For details, see the description of the
   * `DeviceRegistry.credentials` field.
   * </pre>
   *
   * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
   */
  private void removeCredentials(int index) {
    ensureCredentialsIsMutable();
    credentials_.remove(index);
  }

  public static final int LAST_HEARTBEAT_TIME_FIELD_NUMBER = 7;
  private com.google.protobuf.Timestamp lastHeartbeatTime_;
  /**
   * <pre>
   * [Output only] The last time an MQTT `PINGREQ` was received. This field
   * applies only to devices connecting through MQTT. MQTT clients usually only
   * send `PINGREQ` messages if the connection is idle, and no other messages
   * have been sent. Timestamps are periodically collected and written to
   * storage; they may be stale by a few minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_heartbeat_time = 7;</code>
   */
  @java.lang.Override
  public boolean hasLastHeartbeatTime() {
    return lastHeartbeatTime_ != null;
  }
  /**
   * <pre>
   * [Output only] The last time an MQTT `PINGREQ` was received. This field
   * applies only to devices connecting through MQTT. MQTT clients usually only
   * send `PINGREQ` messages if the connection is idle, and no other messages
   * have been sent. Timestamps are periodically collected and written to
   * storage; they may be stale by a few minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_heartbeat_time = 7;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getLastHeartbeatTime() {
    return lastHeartbeatTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lastHeartbeatTime_;
  }
  /**
   * <pre>
   * [Output only] The last time an MQTT `PINGREQ` was received. This field
   * applies only to devices connecting through MQTT. MQTT clients usually only
   * send `PINGREQ` messages if the connection is idle, and no other messages
   * have been sent. Timestamps are periodically collected and written to
   * storage; they may be stale by a few minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_heartbeat_time = 7;</code>
   */
  private void setLastHeartbeatTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  lastHeartbeatTime_ = value;
    
    }
  /**
   * <pre>
   * [Output only] The last time an MQTT `PINGREQ` was received. This field
   * applies only to devices connecting through MQTT. MQTT clients usually only
   * send `PINGREQ` messages if the connection is idle, and no other messages
   * have been sent. Timestamps are periodically collected and written to
   * storage; they may be stale by a few minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_heartbeat_time = 7;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeLastHeartbeatTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (lastHeartbeatTime_ != null &&
        lastHeartbeatTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      lastHeartbeatTime_ =
        com.google.protobuf.Timestamp.newBuilder(lastHeartbeatTime_).mergeFrom(value).buildPartial();
    } else {
      lastHeartbeatTime_ = value;
    }
    
  }
  /**
   * <pre>
   * [Output only] The last time an MQTT `PINGREQ` was received. This field
   * applies only to devices connecting through MQTT. MQTT clients usually only
   * send `PINGREQ` messages if the connection is idle, and no other messages
   * have been sent. Timestamps are periodically collected and written to
   * storage; they may be stale by a few minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_heartbeat_time = 7;</code>
   */
  private void clearLastHeartbeatTime() {  lastHeartbeatTime_ = null;
    
  }

  public static final int LAST_EVENT_TIME_FIELD_NUMBER = 8;
  private com.google.protobuf.Timestamp lastEventTime_;
  /**
   * <pre>
   * [Output only] The last time a telemetry event was received. Timestamps are
   * periodically collected and written to storage; they may be stale by a few
   * minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
   */
  @java.lang.Override
  public boolean hasLastEventTime() {
    return lastEventTime_ != null;
  }
  /**
   * <pre>
   * [Output only] The last time a telemetry event was received. Timestamps are
   * periodically collected and written to storage; they may be stale by a few
   * minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getLastEventTime() {
    return lastEventTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lastEventTime_;
  }
  /**
   * <pre>
   * [Output only] The last time a telemetry event was received. Timestamps are
   * periodically collected and written to storage; they may be stale by a few
   * minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
   */
  private void setLastEventTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  lastEventTime_ = value;
    
    }
  /**
   * <pre>
   * [Output only] The last time a telemetry event was received. Timestamps are
   * periodically collected and written to storage; they may be stale by a few
   * minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeLastEventTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (lastEventTime_ != null &&
        lastEventTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      lastEventTime_ =
        com.google.protobuf.Timestamp.newBuilder(lastEventTime_).mergeFrom(value).buildPartial();
    } else {
      lastEventTime_ = value;
    }
    
  }
  /**
   * <pre>
   * [Output only] The last time a telemetry event was received. Timestamps are
   * periodically collected and written to storage; they may be stale by a few
   * minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
   */
  private void clearLastEventTime() {  lastEventTime_ = null;
    
  }

  public static final int LAST_STATE_TIME_FIELD_NUMBER = 20;
  private com.google.protobuf.Timestamp lastStateTime_;
  /**
   * <pre>
   * [Output only] The last time a state event was received. Timestamps are
   * periodically collected and written to storage; they may be stale by a few
   * minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_state_time = 20;</code>
   */
  @java.lang.Override
  public boolean hasLastStateTime() {
    return lastStateTime_ != null;
  }
  /**
   * <pre>
   * [Output only] The last time a state event was received. Timestamps are
   * periodically collected and written to storage; they may be stale by a few
   * minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_state_time = 20;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getLastStateTime() {
    return lastStateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lastStateTime_;
  }
  /**
   * <pre>
   * [Output only] The last time a state event was received. Timestamps are
   * periodically collected and written to storage; they may be stale by a few
   * minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_state_time = 20;</code>
   */
  private void setLastStateTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  lastStateTime_ = value;
    
    }
  /**
   * <pre>
   * [Output only] The last time a state event was received. Timestamps are
   * periodically collected and written to storage; they may be stale by a few
   * minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_state_time = 20;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeLastStateTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (lastStateTime_ != null &&
        lastStateTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      lastStateTime_ =
        com.google.protobuf.Timestamp.newBuilder(lastStateTime_).mergeFrom(value).buildPartial();
    } else {
      lastStateTime_ = value;
    }
    
  }
  /**
   * <pre>
   * [Output only] The last time a state event was received. Timestamps are
   * periodically collected and written to storage; they may be stale by a few
   * minutes.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_state_time = 20;</code>
   */
  private void clearLastStateTime() {  lastStateTime_ = null;
    
  }

  public static final int LAST_CONFIG_ACK_TIME_FIELD_NUMBER = 14;
  private com.google.protobuf.Timestamp lastConfigAckTime_;
  /**
   * <pre>
   * [Output only] The last time a cloud-to-device config version acknowledgment
   * was received from the device. This field is only for configurations
   * sent through MQTT.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_config_ack_time = 14;</code>
   */
  @java.lang.Override
  public boolean hasLastConfigAckTime() {
    return lastConfigAckTime_ != null;
  }
  /**
   * <pre>
   * [Output only] The last time a cloud-to-device config version acknowledgment
   * was received from the device. This field is only for configurations
   * sent through MQTT.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_config_ack_time = 14;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getLastConfigAckTime() {
    return lastConfigAckTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lastConfigAckTime_;
  }
  /**
   * <pre>
   * [Output only] The last time a cloud-to-device config version acknowledgment
   * was received from the device. This field is only for configurations
   * sent through MQTT.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_config_ack_time = 14;</code>
   */
  private void setLastConfigAckTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  lastConfigAckTime_ = value;
    
    }
  /**
   * <pre>
   * [Output only] The last time a cloud-to-device config version acknowledgment
   * was received from the device. This field is only for configurations
   * sent through MQTT.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_config_ack_time = 14;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeLastConfigAckTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (lastConfigAckTime_ != null &&
        lastConfigAckTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      lastConfigAckTime_ =
        com.google.protobuf.Timestamp.newBuilder(lastConfigAckTime_).mergeFrom(value).buildPartial();
    } else {
      lastConfigAckTime_ = value;
    }
    
  }
  /**
   * <pre>
   * [Output only] The last time a cloud-to-device config version acknowledgment
   * was received from the device. This field is only for configurations
   * sent through MQTT.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_config_ack_time = 14;</code>
   */
  private void clearLastConfigAckTime() {  lastConfigAckTime_ = null;
    
  }

  public static final int LAST_CONFIG_SEND_TIME_FIELD_NUMBER = 18;
  private com.google.protobuf.Timestamp lastConfigSendTime_;
  /**
   * <pre>
   * [Output only] The last time a cloud-to-device config version was sent to
   * the device.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_config_send_time = 18;</code>
   */
  @java.lang.Override
  public boolean hasLastConfigSendTime() {
    return lastConfigSendTime_ != null;
  }
  /**
   * <pre>
   * [Output only] The last time a cloud-to-device config version was sent to
   * the device.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_config_send_time = 18;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getLastConfigSendTime() {
    return lastConfigSendTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lastConfigSendTime_;
  }
  /**
   * <pre>
   * [Output only] The last time a cloud-to-device config version was sent to
   * the device.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_config_send_time = 18;</code>
   */
  private void setLastConfigSendTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  lastConfigSendTime_ = value;
    
    }
  /**
   * <pre>
   * [Output only] The last time a cloud-to-device config version was sent to
   * the device.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_config_send_time = 18;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeLastConfigSendTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (lastConfigSendTime_ != null &&
        lastConfigSendTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      lastConfigSendTime_ =
        com.google.protobuf.Timestamp.newBuilder(lastConfigSendTime_).mergeFrom(value).buildPartial();
    } else {
      lastConfigSendTime_ = value;
    }
    
  }
  /**
   * <pre>
   * [Output only] The last time a cloud-to-device config version was sent to
   * the device.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_config_send_time = 18;</code>
   */
  private void clearLastConfigSendTime() {  lastConfigSendTime_ = null;
    
  }

  public static final int BLOCKED_FIELD_NUMBER = 19;
  private boolean blocked_;
  /**
   * <pre>
   * If a device is blocked, connections or requests from this device will fail.
   * Can be used to temporarily prevent the device from connecting if, for
   * example, the sensor is generating bad data and needs maintenance.
   * </pre>
   *
   * <code>bool blocked = 19;</code>
   * @return The blocked.
   */
  @java.lang.Override
  public boolean getBlocked() {
    return blocked_;
  }
  /**
   * <pre>
   * If a device is blocked, connections or requests from this device will fail.
   * Can be used to temporarily prevent the device from connecting if, for
   * example, the sensor is generating bad data and needs maintenance.
   * </pre>
   *
   * <code>bool blocked = 19;</code>
   * @param value The blocked to set.
   */
  private void setBlocked(boolean value) {
    
    blocked_ = value;
  }
  /**
   * <pre>
   * If a device is blocked, connections or requests from this device will fail.
   * Can be used to temporarily prevent the device from connecting if, for
   * example, the sensor is generating bad data and needs maintenance.
   * </pre>
   *
   * <code>bool blocked = 19;</code>
   */
  private void clearBlocked() {
    
    blocked_ = false;
  }

  public static final int LAST_ERROR_TIME_FIELD_NUMBER = 10;
  private com.google.protobuf.Timestamp lastErrorTime_;
  /**
   * <pre>
   * [Output only] The time the most recent error occurred, such as a failure to
   * publish to Cloud Pub/Sub. This field is the timestamp of
   * 'last_error_status'.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_error_time = 10;</code>
   */
  @java.lang.Override
  public boolean hasLastErrorTime() {
    return lastErrorTime_ != null;
  }
  /**
   * <pre>
   * [Output only] The time the most recent error occurred, such as a failure to
   * publish to Cloud Pub/Sub. This field is the timestamp of
   * 'last_error_status'.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_error_time = 10;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getLastErrorTime() {
    return lastErrorTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : lastErrorTime_;
  }
  /**
   * <pre>
   * [Output only] The time the most recent error occurred, such as a failure to
   * publish to Cloud Pub/Sub. This field is the timestamp of
   * 'last_error_status'.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_error_time = 10;</code>
   */
  private void setLastErrorTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  lastErrorTime_ = value;
    
    }
  /**
   * <pre>
   * [Output only] The time the most recent error occurred, such as a failure to
   * publish to Cloud Pub/Sub. This field is the timestamp of
   * 'last_error_status'.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_error_time = 10;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeLastErrorTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (lastErrorTime_ != null &&
        lastErrorTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      lastErrorTime_ =
        com.google.protobuf.Timestamp.newBuilder(lastErrorTime_).mergeFrom(value).buildPartial();
    } else {
      lastErrorTime_ = value;
    }
    
  }
  /**
   * <pre>
   * [Output only] The time the most recent error occurred, such as a failure to
   * publish to Cloud Pub/Sub. This field is the timestamp of
   * 'last_error_status'.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_error_time = 10;</code>
   */
  private void clearLastErrorTime() {  lastErrorTime_ = null;
    
  }

  public static final int LAST_ERROR_STATUS_FIELD_NUMBER = 11;
  private com.google.rpc.Status lastErrorStatus_;
  /**
   * <pre>
   * [Output only] The error message of the most recent error, such as a failure
   * to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
   * field. If no errors have occurred, this field has an empty message
   * and the status code 0 == OK. Otherwise, this field is expected to have a
   * status code other than OK.
   * </pre>
   *
   * <code>.google.rpc.Status last_error_status = 11;</code>
   */
  @java.lang.Override
  public boolean hasLastErrorStatus() {
    return lastErrorStatus_ != null;
  }
  /**
   * <pre>
   * [Output only] The error message of the most recent error, such as a failure
   * to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
   * field. If no errors have occurred, this field has an empty message
   * and the status code 0 == OK. Otherwise, this field is expected to have a
   * status code other than OK.
   * </pre>
   *
   * <code>.google.rpc.Status last_error_status = 11;</code>
   */
  @java.lang.Override
  public com.google.rpc.Status getLastErrorStatus() {
    return lastErrorStatus_ == null ? com.google.rpc.Status.getDefaultInstance() : lastErrorStatus_;
  }
  /**
   * <pre>
   * [Output only] The error message of the most recent error, such as a failure
   * to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
   * field. If no errors have occurred, this field has an empty message
   * and the status code 0 == OK. Otherwise, this field is expected to have a
   * status code other than OK.
   * </pre>
   *
   * <code>.google.rpc.Status last_error_status = 11;</code>
   */
  private void setLastErrorStatus(com.google.rpc.Status value) {
    value.getClass();
  lastErrorStatus_ = value;
    
    }
  /**
   * <pre>
   * [Output only] The error message of the most recent error, such as a failure
   * to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
   * field. If no errors have occurred, this field has an empty message
   * and the status code 0 == OK. Otherwise, this field is expected to have a
   * status code other than OK.
   * </pre>
   *
   * <code>.google.rpc.Status last_error_status = 11;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeLastErrorStatus(com.google.rpc.Status value) {
    value.getClass();
  if (lastErrorStatus_ != null &&
        lastErrorStatus_ != com.google.rpc.Status.getDefaultInstance()) {
      lastErrorStatus_ =
        com.google.rpc.Status.newBuilder(lastErrorStatus_).mergeFrom(value).buildPartial();
    } else {
      lastErrorStatus_ = value;
    }
    
  }
  /**
   * <pre>
   * [Output only] The error message of the most recent error, such as a failure
   * to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
   * field. If no errors have occurred, this field has an empty message
   * and the status code 0 == OK. Otherwise, this field is expected to have a
   * status code other than OK.
   * </pre>
   *
   * <code>.google.rpc.Status last_error_status = 11;</code>
   */
  private void clearLastErrorStatus() {  lastErrorStatus_ = null;
    
  }

  public static final int CONFIG_FIELD_NUMBER = 13;
  private google.events.cloud.iot.v1.DeviceConfig config_;
  /**
   * <pre>
   * The most recent device configuration, which is eventually sent from
   * Cloud IoT Core to the device. If not present on creation, the
   * configuration will be initialized with an empty payload and version value
   * of `1`. To update this field after creation, use the
   * `DeviceManager.ModifyCloudToDeviceConfig` method.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.DeviceConfig config = 13;</code>
   */
  @java.lang.Override
  public boolean hasConfig() {
    return config_ != null;
  }
  /**
   * <pre>
   * The most recent device configuration, which is eventually sent from
   * Cloud IoT Core to the device. If not present on creation, the
   * configuration will be initialized with an empty payload and version value
   * of `1`. To update this field after creation, use the
   * `DeviceManager.ModifyCloudToDeviceConfig` method.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.DeviceConfig config = 13;</code>
   */
  @java.lang.Override
  public google.events.cloud.iot.v1.DeviceConfig getConfig() {
    return config_ == null ? google.events.cloud.iot.v1.DeviceConfig.getDefaultInstance() : config_;
  }
  /**
   * <pre>
   * The most recent device configuration, which is eventually sent from
   * Cloud IoT Core to the device. If not present on creation, the
   * configuration will be initialized with an empty payload and version value
   * of `1`. To update this field after creation, use the
   * `DeviceManager.ModifyCloudToDeviceConfig` method.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.DeviceConfig config = 13;</code>
   */
  private void setConfig(google.events.cloud.iot.v1.DeviceConfig value) {
    value.getClass();
  config_ = value;
    
    }
  /**
   * <pre>
   * The most recent device configuration, which is eventually sent from
   * Cloud IoT Core to the device. If not present on creation, the
   * configuration will be initialized with an empty payload and version value
   * of `1`. To update this field after creation, use the
   * `DeviceManager.ModifyCloudToDeviceConfig` method.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.DeviceConfig config = 13;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeConfig(google.events.cloud.iot.v1.DeviceConfig value) {
    value.getClass();
  if (config_ != null &&
        config_ != google.events.cloud.iot.v1.DeviceConfig.getDefaultInstance()) {
      config_ =
        google.events.cloud.iot.v1.DeviceConfig.newBuilder(config_).mergeFrom(value).buildPartial();
    } else {
      config_ = value;
    }
    
  }
  /**
   * <pre>
   * The most recent device configuration, which is eventually sent from
   * Cloud IoT Core to the device. If not present on creation, the
   * configuration will be initialized with an empty payload and version value
   * of `1`. To update this field after creation, use the
   * `DeviceManager.ModifyCloudToDeviceConfig` method.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.DeviceConfig config = 13;</code>
   */
  private void clearConfig() {  config_ = null;
    
  }

  public static final int STATE_FIELD_NUMBER = 16;
  private google.events.cloud.iot.v1.DeviceState state_;
  /**
   * <pre>
   * [Output only] The state most recently received from the device. If no state
   * has been reported, this field is not present.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.DeviceState state = 16;</code>
   */
  @java.lang.Override
  public boolean hasState() {
    return state_ != null;
  }
  /**
   * <pre>
   * [Output only] The state most recently received from the device. If no state
   * has been reported, this field is not present.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.DeviceState state = 16;</code>
   */
  @java.lang.Override
  public google.events.cloud.iot.v1.DeviceState getState() {
    return state_ == null ? google.events.cloud.iot.v1.DeviceState.getDefaultInstance() : state_;
  }
  /**
   * <pre>
   * [Output only] The state most recently received from the device. If no state
   * has been reported, this field is not present.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.DeviceState state = 16;</code>
   */
  private void setState(google.events.cloud.iot.v1.DeviceState value) {
    value.getClass();
  state_ = value;
    
    }
  /**
   * <pre>
   * [Output only] The state most recently received from the device. If no state
   * has been reported, this field is not present.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.DeviceState state = 16;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeState(google.events.cloud.iot.v1.DeviceState value) {
    value.getClass();
  if (state_ != null &&
        state_ != google.events.cloud.iot.v1.DeviceState.getDefaultInstance()) {
      state_ =
        google.events.cloud.iot.v1.DeviceState.newBuilder(state_).mergeFrom(value).buildPartial();
    } else {
      state_ = value;
    }
    
  }
  /**
   * <pre>
   * [Output only] The state most recently received from the device. If no state
   * has been reported, this field is not present.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.DeviceState state = 16;</code>
   */
  private void clearState() {  state_ = null;
    
  }

  public static final int LOG_LEVEL_FIELD_NUMBER = 21;
  private int logLevel_;
  /**
   * <pre>
   * **Beta Feature**
   * The logging verbosity for device activity. If unspecified,
   * DeviceRegistry.log_level will be used.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.LogLevel log_level = 21;</code>
   * @return The enum numeric value on the wire for logLevel.
   */
  @java.lang.Override
  public int getLogLevelValue() {
    return logLevel_;
  }
  /**
   * <pre>
   * **Beta Feature**
   * The logging verbosity for device activity. If unspecified,
   * DeviceRegistry.log_level will be used.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.LogLevel log_level = 21;</code>
   * @return The logLevel.
   */
  @java.lang.Override
  public google.events.cloud.iot.v1.LogLevel getLogLevel() {
    google.events.cloud.iot.v1.LogLevel result = google.events.cloud.iot.v1.LogLevel.forNumber(logLevel_);
    return result == null ? google.events.cloud.iot.v1.LogLevel.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * **Beta Feature**
   * The logging verbosity for device activity. If unspecified,
   * DeviceRegistry.log_level will be used.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.LogLevel log_level = 21;</code>
   * @param value The enum numeric value on the wire for logLevel to set.
   */
  private void setLogLevelValue(int value) {
      logLevel_ = value;
  }
  /**
   * <pre>
   * **Beta Feature**
   * The logging verbosity for device activity. If unspecified,
   * DeviceRegistry.log_level will be used.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.LogLevel log_level = 21;</code>
   * @param value The logLevel to set.
   */
  private void setLogLevel(google.events.cloud.iot.v1.LogLevel value) {
    logLevel_ = value.getNumber();
    
  }
  /**
   * <pre>
   * **Beta Feature**
   * The logging verbosity for device activity. If unspecified,
   * DeviceRegistry.log_level will be used.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.LogLevel log_level = 21;</code>
   */
  private void clearLogLevel() {
    
    logLevel_ = 0;
  }

  public static final int METADATA_FIELD_NUMBER = 17;
  private static final class MetadataDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.String, java.lang.String> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.String, java.lang.String>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.STRING,
                "");
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.String, java.lang.String> metadata_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetMetadata() {
    return metadata_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.String, java.lang.String>
  internalGetMutableMetadata() {
    if (!metadata_.isMutable()) {
      metadata_ = metadata_.mutableCopy();
    }
    return metadata_;
  }
  @java.lang.Override

  public int getMetadataCount() {
    return internalGetMetadata().size();
  }
  /**
   * <pre>
   * The metadata key-value pairs assigned to the device. This metadata is not
   * interpreted or indexed by Cloud IoT Core. It can be used to add contextual
   * information for the device.
   * Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
   * be less than 128 bytes in length.
   * Values are free-form strings. Each value must be less than or equal to 32
   * KB in size.
   * The total size of all keys and values must be less than 256 KB, and the
   * maximum number of key-value pairs is 500.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 17;</code>
   */
  @java.lang.Override

  public boolean containsMetadata(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    return internalGetMetadata().containsKey(key);
  }
  /**
   * Use {@link #getMetadataMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
    return getMetadataMap();
  }
  /**
   * <pre>
   * The metadata key-value pairs assigned to the device. This metadata is not
   * interpreted or indexed by Cloud IoT Core. It can be used to add contextual
   * information for the device.
   * Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
   * be less than 128 bytes in length.
   * Values are free-form strings. Each value must be less than or equal to 32
   * KB in size.
   * The total size of all keys and values must be less than 256 KB, and the
   * maximum number of key-value pairs is 500.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 17;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetMetadata());
  }
  /**
   * <pre>
   * The metadata key-value pairs assigned to the device. This metadata is not
   * interpreted or indexed by Cloud IoT Core. It can be used to add contextual
   * information for the device.
   * Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
   * be less than 128 bytes in length.
   * Values are free-form strings. Each value must be less than or equal to 32
   * KB in size.
   * The total size of all keys and values must be less than 256 KB, and the
   * maximum number of key-value pairs is 500.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 17;</code>
   */
  @java.lang.Override

  public java.lang.String getMetadataOrDefault(
      java.lang.String key,
      java.lang.String defaultValue) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetMetadata();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * The metadata key-value pairs assigned to the device. This metadata is not
   * interpreted or indexed by Cloud IoT Core. It can be used to add contextual
   * information for the device.
   * Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
   * be less than 128 bytes in length.
   * Values are free-form strings. Each value must be less than or equal to 32
   * KB in size.
   * The total size of all keys and values must be less than 256 KB, and the
   * maximum number of key-value pairs is 500.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 17;</code>
   */
  @java.lang.Override

  public java.lang.String getMetadataOrThrow(
      java.lang.String key) {
    java.lang.Class<?> keyClass = key.getClass();
    java.util.Map<java.lang.String, java.lang.String> map =
        internalGetMetadata();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <pre>
   * The metadata key-value pairs assigned to the device. This metadata is not
   * interpreted or indexed by Cloud IoT Core. It can be used to add contextual
   * information for the device.
   * Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
   * be less than 128 bytes in length.
   * Values are free-form strings. Each value must be less than or equal to 32
   * KB in size.
   * The total size of all keys and values must be less than 256 KB, and the
   * maximum number of key-value pairs is 500.
   * </pre>
   *
   * <code>map&lt;string, string&gt; metadata = 17;</code>
   */
  private java.util.Map<java.lang.String, java.lang.String>
  getMutableMetadataMap() {
    return internalGetMutableMetadata();
  }

  public static final int GATEWAY_CONFIG_FIELD_NUMBER = 24;
  private google.events.cloud.iot.v1.GatewayConfig gatewayConfig_;
  /**
   * <pre>
   * Gateway-related configuration and state.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.GatewayConfig gateway_config = 24;</code>
   */
  @java.lang.Override
  public boolean hasGatewayConfig() {
    return gatewayConfig_ != null;
  }
  /**
   * <pre>
   * Gateway-related configuration and state.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.GatewayConfig gateway_config = 24;</code>
   */
  @java.lang.Override
  public google.events.cloud.iot.v1.GatewayConfig getGatewayConfig() {
    return gatewayConfig_ == null ? google.events.cloud.iot.v1.GatewayConfig.getDefaultInstance() : gatewayConfig_;
  }
  /**
   * <pre>
   * Gateway-related configuration and state.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.GatewayConfig gateway_config = 24;</code>
   */
  private void setGatewayConfig(google.events.cloud.iot.v1.GatewayConfig value) {
    value.getClass();
  gatewayConfig_ = value;
    
    }
  /**
   * <pre>
   * Gateway-related configuration and state.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.GatewayConfig gateway_config = 24;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeGatewayConfig(google.events.cloud.iot.v1.GatewayConfig value) {
    value.getClass();
  if (gatewayConfig_ != null &&
        gatewayConfig_ != google.events.cloud.iot.v1.GatewayConfig.getDefaultInstance()) {
      gatewayConfig_ =
        google.events.cloud.iot.v1.GatewayConfig.newBuilder(gatewayConfig_).mergeFrom(value).buildPartial();
    } else {
      gatewayConfig_ = value;
    }
    
  }
  /**
   * <pre>
   * Gateway-related configuration and state.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.GatewayConfig gateway_config = 24;</code>
   */
  private void clearGatewayConfig() {  gatewayConfig_ = null;
    
  }

  public static google.events.cloud.iot.v1.Device parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.Device parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.Device parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.Device parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.Device parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.Device parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.Device parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.Device parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.Device parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.Device parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.Device parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.Device parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.cloud.iot.v1.Device prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * The device resource.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.iot.v1.Device}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.cloud.iot.v1.Device, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.iot.v1.Device)
      google.events.cloud.iot.v1.DeviceOrBuilder {
    // Construct using google.events.cloud.iot.v1.Device.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The user-defined device identifier. The device ID must be unique
     * within a device registry.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      return instance.getId();
    }
    /**
     * <pre>
     * The user-defined device identifier. The device ID must be unique
     * within a device registry.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      return instance.getIdBytes();
    }
    /**
     * <pre>
     * The user-defined device identifier. The device ID must be unique
     * within a device registry.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        java.lang.String value) {
      copyOnWrite();
      instance.setId(value);
      return this;
    }
    /**
     * <pre>
     * The user-defined device identifier. The device ID must be unique
     * within a device registry.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      copyOnWrite();
      instance.clearId();
      return this;
    }
    /**
     * <pre>
     * The user-defined device identifier. The device ID must be unique
     * within a device registry.
     * </pre>
     *
     * <code>string id = 1;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setIdBytes(value);
      return this;
    }

    /**
     * <pre>
     * The resource path name. For example,
     * `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
     * `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
     * When `name` is populated as a response from the service, it always ends
     * in the device numeric ID.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <pre>
     * The resource path name. For example,
     * `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
     * `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
     * When `name` is populated as a response from the service, it always ends
     * in the device numeric ID.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <pre>
     * The resource path name. For example,
     * `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
     * `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
     * When `name` is populated as a response from the service, it always ends
     * in the device numeric ID.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <pre>
     * The resource path name. For example,
     * `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
     * `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
     * When `name` is populated as a response from the service, it always ends
     * in the device numeric ID.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <pre>
     * The resource path name. For example,
     * `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or
     * `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.
     * When `name` is populated as a response from the service, it always ends
     * in the device numeric ID.
     * </pre>
     *
     * <code>string name = 2;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * [Output only] A server-defined unique numeric ID for the device. This is a
     * more compact way to identify devices, and it is globally unique.
     * </pre>
     *
     * <code>uint64 num_id = 3;</code>
     * @return The numId.
     */
    @java.lang.Override
    public long getNumId() {
      return instance.getNumId();
    }
    /**
     * <pre>
     * [Output only] A server-defined unique numeric ID for the device. This is a
     * more compact way to identify devices, and it is globally unique.
     * </pre>
     *
     * <code>uint64 num_id = 3;</code>
     * @param value The numId to set.
     * @return This builder for chaining.
     */
    public Builder setNumId(long value) {
      copyOnWrite();
      instance.setNumId(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] A server-defined unique numeric ID for the device. This is a
     * more compact way to identify devices, and it is globally unique.
     * </pre>
     *
     * <code>uint64 num_id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearNumId() {
      copyOnWrite();
      instance.clearNumId();
      return this;
    }

    /**
     * <pre>
     * The credentials used to authenticate this device. To allow credential
     * rotation without interruption, multiple device credentials can be bound to
     * this device. No more than 3 credentials can be bound to a single device at
     * a time. When new credentials are added to a device, they are verified
     * against the registry credentials. For details, see the description of the
     * `DeviceRegistry.credentials` field.
     * </pre>
     *
     * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
     */
    @java.lang.Override
    public java.util.List<google.events.cloud.iot.v1.DeviceCredential> getCredentialsList() {
      return java.util.Collections.unmodifiableList(
          instance.getCredentialsList());
    }
    /**
     * <pre>
     * The credentials used to authenticate this device. To allow credential
     * rotation without interruption, multiple device credentials can be bound to
     * this device. No more than 3 credentials can be bound to a single device at
     * a time. When new credentials are added to a device, they are verified
     * against the registry credentials. For details, see the description of the
     * `DeviceRegistry.credentials` field.
     * </pre>
     *
     * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
     */
    @java.lang.Override
    public int getCredentialsCount() {
      return instance.getCredentialsCount();
    }/**
     * <pre>
     * The credentials used to authenticate this device. To allow credential
     * rotation without interruption, multiple device credentials can be bound to
     * this device. No more than 3 credentials can be bound to a single device at
     * a time. When new credentials are added to a device, they are verified
     * against the registry credentials. For details, see the description of the
     * `DeviceRegistry.credentials` field.
     * </pre>
     *
     * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
     */
    @java.lang.Override
    public google.events.cloud.iot.v1.DeviceCredential getCredentials(int index) {
      return instance.getCredentials(index);
    }
    /**
     * <pre>
     * The credentials used to authenticate this device. To allow credential
     * rotation without interruption, multiple device credentials can be bound to
     * this device. No more than 3 credentials can be bound to a single device at
     * a time. When new credentials are added to a device, they are verified
     * against the registry credentials. For details, see the description of the
     * `DeviceRegistry.credentials` field.
     * </pre>
     *
     * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
     */
    public Builder setCredentials(
        int index, google.events.cloud.iot.v1.DeviceCredential value) {
      copyOnWrite();
      instance.setCredentials(index, value);
      return this;
    }
    /**
     * <pre>
     * The credentials used to authenticate this device. To allow credential
     * rotation without interruption, multiple device credentials can be bound to
     * this device. No more than 3 credentials can be bound to a single device at
     * a time. When new credentials are added to a device, they are verified
     * against the registry credentials. For details, see the description of the
     * `DeviceRegistry.credentials` field.
     * </pre>
     *
     * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
     */
    public Builder setCredentials(
        int index, google.events.cloud.iot.v1.DeviceCredential.Builder builderForValue) {
      copyOnWrite();
      instance.setCredentials(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The credentials used to authenticate this device. To allow credential
     * rotation without interruption, multiple device credentials can be bound to
     * this device. No more than 3 credentials can be bound to a single device at
     * a time. When new credentials are added to a device, they are verified
     * against the registry credentials. For details, see the description of the
     * `DeviceRegistry.credentials` field.
     * </pre>
     *
     * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
     */
    public Builder addCredentials(google.events.cloud.iot.v1.DeviceCredential value) {
      copyOnWrite();
      instance.addCredentials(value);
      return this;
    }
    /**
     * <pre>
     * The credentials used to authenticate this device. To allow credential
     * rotation without interruption, multiple device credentials can be bound to
     * this device. No more than 3 credentials can be bound to a single device at
     * a time. When new credentials are added to a device, they are verified
     * against the registry credentials. For details, see the description of the
     * `DeviceRegistry.credentials` field.
     * </pre>
     *
     * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
     */
    public Builder addCredentials(
        int index, google.events.cloud.iot.v1.DeviceCredential value) {
      copyOnWrite();
      instance.addCredentials(index, value);
      return this;
    }
    /**
     * <pre>
     * The credentials used to authenticate this device. To allow credential
     * rotation without interruption, multiple device credentials can be bound to
     * this device. No more than 3 credentials can be bound to a single device at
     * a time. When new credentials are added to a device, they are verified
     * against the registry credentials. For details, see the description of the
     * `DeviceRegistry.credentials` field.
     * </pre>
     *
     * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
     */
    public Builder addCredentials(
        google.events.cloud.iot.v1.DeviceCredential.Builder builderForValue) {
      copyOnWrite();
      instance.addCredentials(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The credentials used to authenticate this device. To allow credential
     * rotation without interruption, multiple device credentials can be bound to
     * this device. No more than 3 credentials can be bound to a single device at
     * a time. When new credentials are added to a device, they are verified
     * against the registry credentials. For details, see the description of the
     * `DeviceRegistry.credentials` field.
     * </pre>
     *
     * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
     */
    public Builder addCredentials(
        int index, google.events.cloud.iot.v1.DeviceCredential.Builder builderForValue) {
      copyOnWrite();
      instance.addCredentials(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The credentials used to authenticate this device. To allow credential
     * rotation without interruption, multiple device credentials can be bound to
     * this device. No more than 3 credentials can be bound to a single device at
     * a time. When new credentials are added to a device, they are verified
     * against the registry credentials. For details, see the description of the
     * `DeviceRegistry.credentials` field.
     * </pre>
     *
     * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
     */
    public Builder addAllCredentials(
        java.lang.Iterable<? extends google.events.cloud.iot.v1.DeviceCredential> values) {
      copyOnWrite();
      instance.addAllCredentials(values);
      return this;
    }
    /**
     * <pre>
     * The credentials used to authenticate this device. To allow credential
     * rotation without interruption, multiple device credentials can be bound to
     * this device. No more than 3 credentials can be bound to a single device at
     * a time. When new credentials are added to a device, they are verified
     * against the registry credentials. For details, see the description of the
     * `DeviceRegistry.credentials` field.
     * </pre>
     *
     * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
     */
    public Builder clearCredentials() {
      copyOnWrite();
      instance.clearCredentials();
      return this;
    }
    /**
     * <pre>
     * The credentials used to authenticate this device. To allow credential
     * rotation without interruption, multiple device credentials can be bound to
     * this device. No more than 3 credentials can be bound to a single device at
     * a time. When new credentials are added to a device, they are verified
     * against the registry credentials. For details, see the description of the
     * `DeviceRegistry.credentials` field.
     * </pre>
     *
     * <code>repeated .google.events.cloud.iot.v1.DeviceCredential credentials = 12;</code>
     */
    public Builder removeCredentials(int index) {
      copyOnWrite();
      instance.removeCredentials(index);
      return this;
    }

    /**
     * <pre>
     * [Output only] The last time an MQTT `PINGREQ` was received. This field
     * applies only to devices connecting through MQTT. MQTT clients usually only
     * send `PINGREQ` messages if the connection is idle, and no other messages
     * have been sent. Timestamps are periodically collected and written to
     * storage; they may be stale by a few minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_heartbeat_time = 7;</code>
     */
    @java.lang.Override
    public boolean hasLastHeartbeatTime() {
      return instance.hasLastHeartbeatTime();
    }
    /**
     * <pre>
     * [Output only] The last time an MQTT `PINGREQ` was received. This field
     * applies only to devices connecting through MQTT. MQTT clients usually only
     * send `PINGREQ` messages if the connection is idle, and no other messages
     * have been sent. Timestamps are periodically collected and written to
     * storage; they may be stale by a few minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_heartbeat_time = 7;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getLastHeartbeatTime() {
      return instance.getLastHeartbeatTime();
    }
    /**
     * <pre>
     * [Output only] The last time an MQTT `PINGREQ` was received. This field
     * applies only to devices connecting through MQTT. MQTT clients usually only
     * send `PINGREQ` messages if the connection is idle, and no other messages
     * have been sent. Timestamps are periodically collected and written to
     * storage; they may be stale by a few minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_heartbeat_time = 7;</code>
     */
    public Builder setLastHeartbeatTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setLastHeartbeatTime(value);
      return this;
      }
    /**
     * <pre>
     * [Output only] The last time an MQTT `PINGREQ` was received. This field
     * applies only to devices connecting through MQTT. MQTT clients usually only
     * send `PINGREQ` messages if the connection is idle, and no other messages
     * have been sent. Timestamps are periodically collected and written to
     * storage; they may be stale by a few minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_heartbeat_time = 7;</code>
     */
    public Builder setLastHeartbeatTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setLastHeartbeatTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * [Output only] The last time an MQTT `PINGREQ` was received. This field
     * applies only to devices connecting through MQTT. MQTT clients usually only
     * send `PINGREQ` messages if the connection is idle, and no other messages
     * have been sent. Timestamps are periodically collected and written to
     * storage; they may be stale by a few minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_heartbeat_time = 7;</code>
     */
    public Builder mergeLastHeartbeatTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeLastHeartbeatTime(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The last time an MQTT `PINGREQ` was received. This field
     * applies only to devices connecting through MQTT. MQTT clients usually only
     * send `PINGREQ` messages if the connection is idle, and no other messages
     * have been sent. Timestamps are periodically collected and written to
     * storage; they may be stale by a few minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_heartbeat_time = 7;</code>
     */
    public Builder clearLastHeartbeatTime() {  copyOnWrite();
      instance.clearLastHeartbeatTime();
      return this;
    }

    /**
     * <pre>
     * [Output only] The last time a telemetry event was received. Timestamps are
     * periodically collected and written to storage; they may be stale by a few
     * minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
     */
    @java.lang.Override
    public boolean hasLastEventTime() {
      return instance.hasLastEventTime();
    }
    /**
     * <pre>
     * [Output only] The last time a telemetry event was received. Timestamps are
     * periodically collected and written to storage; they may be stale by a few
     * minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getLastEventTime() {
      return instance.getLastEventTime();
    }
    /**
     * <pre>
     * [Output only] The last time a telemetry event was received. Timestamps are
     * periodically collected and written to storage; they may be stale by a few
     * minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
     */
    public Builder setLastEventTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setLastEventTime(value);
      return this;
      }
    /**
     * <pre>
     * [Output only] The last time a telemetry event was received. Timestamps are
     * periodically collected and written to storage; they may be stale by a few
     * minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
     */
    public Builder setLastEventTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setLastEventTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * [Output only] The last time a telemetry event was received. Timestamps are
     * periodically collected and written to storage; they may be stale by a few
     * minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
     */
    public Builder mergeLastEventTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeLastEventTime(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The last time a telemetry event was received. Timestamps are
     * periodically collected and written to storage; they may be stale by a few
     * minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
     */
    public Builder clearLastEventTime() {  copyOnWrite();
      instance.clearLastEventTime();
      return this;
    }

    /**
     * <pre>
     * [Output only] The last time a state event was received. Timestamps are
     * periodically collected and written to storage; they may be stale by a few
     * minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_state_time = 20;</code>
     */
    @java.lang.Override
    public boolean hasLastStateTime() {
      return instance.hasLastStateTime();
    }
    /**
     * <pre>
     * [Output only] The last time a state event was received. Timestamps are
     * periodically collected and written to storage; they may be stale by a few
     * minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_state_time = 20;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getLastStateTime() {
      return instance.getLastStateTime();
    }
    /**
     * <pre>
     * [Output only] The last time a state event was received. Timestamps are
     * periodically collected and written to storage; they may be stale by a few
     * minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_state_time = 20;</code>
     */
    public Builder setLastStateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setLastStateTime(value);
      return this;
      }
    /**
     * <pre>
     * [Output only] The last time a state event was received. Timestamps are
     * periodically collected and written to storage; they may be stale by a few
     * minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_state_time = 20;</code>
     */
    public Builder setLastStateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setLastStateTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * [Output only] The last time a state event was received. Timestamps are
     * periodically collected and written to storage; they may be stale by a few
     * minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_state_time = 20;</code>
     */
    public Builder mergeLastStateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeLastStateTime(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The last time a state event was received. Timestamps are
     * periodically collected and written to storage; they may be stale by a few
     * minutes.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_state_time = 20;</code>
     */
    public Builder clearLastStateTime() {  copyOnWrite();
      instance.clearLastStateTime();
      return this;
    }

    /**
     * <pre>
     * [Output only] The last time a cloud-to-device config version acknowledgment
     * was received from the device. This field is only for configurations
     * sent through MQTT.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_config_ack_time = 14;</code>
     */
    @java.lang.Override
    public boolean hasLastConfigAckTime() {
      return instance.hasLastConfigAckTime();
    }
    /**
     * <pre>
     * [Output only] The last time a cloud-to-device config version acknowledgment
     * was received from the device. This field is only for configurations
     * sent through MQTT.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_config_ack_time = 14;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getLastConfigAckTime() {
      return instance.getLastConfigAckTime();
    }
    /**
     * <pre>
     * [Output only] The last time a cloud-to-device config version acknowledgment
     * was received from the device. This field is only for configurations
     * sent through MQTT.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_config_ack_time = 14;</code>
     */
    public Builder setLastConfigAckTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setLastConfigAckTime(value);
      return this;
      }
    /**
     * <pre>
     * [Output only] The last time a cloud-to-device config version acknowledgment
     * was received from the device. This field is only for configurations
     * sent through MQTT.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_config_ack_time = 14;</code>
     */
    public Builder setLastConfigAckTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setLastConfigAckTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * [Output only] The last time a cloud-to-device config version acknowledgment
     * was received from the device. This field is only for configurations
     * sent through MQTT.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_config_ack_time = 14;</code>
     */
    public Builder mergeLastConfigAckTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeLastConfigAckTime(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The last time a cloud-to-device config version acknowledgment
     * was received from the device. This field is only for configurations
     * sent through MQTT.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_config_ack_time = 14;</code>
     */
    public Builder clearLastConfigAckTime() {  copyOnWrite();
      instance.clearLastConfigAckTime();
      return this;
    }

    /**
     * <pre>
     * [Output only] The last time a cloud-to-device config version was sent to
     * the device.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_config_send_time = 18;</code>
     */
    @java.lang.Override
    public boolean hasLastConfigSendTime() {
      return instance.hasLastConfigSendTime();
    }
    /**
     * <pre>
     * [Output only] The last time a cloud-to-device config version was sent to
     * the device.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_config_send_time = 18;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getLastConfigSendTime() {
      return instance.getLastConfigSendTime();
    }
    /**
     * <pre>
     * [Output only] The last time a cloud-to-device config version was sent to
     * the device.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_config_send_time = 18;</code>
     */
    public Builder setLastConfigSendTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setLastConfigSendTime(value);
      return this;
      }
    /**
     * <pre>
     * [Output only] The last time a cloud-to-device config version was sent to
     * the device.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_config_send_time = 18;</code>
     */
    public Builder setLastConfigSendTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setLastConfigSendTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * [Output only] The last time a cloud-to-device config version was sent to
     * the device.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_config_send_time = 18;</code>
     */
    public Builder mergeLastConfigSendTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeLastConfigSendTime(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The last time a cloud-to-device config version was sent to
     * the device.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_config_send_time = 18;</code>
     */
    public Builder clearLastConfigSendTime() {  copyOnWrite();
      instance.clearLastConfigSendTime();
      return this;
    }

    /**
     * <pre>
     * If a device is blocked, connections or requests from this device will fail.
     * Can be used to temporarily prevent the device from connecting if, for
     * example, the sensor is generating bad data and needs maintenance.
     * </pre>
     *
     * <code>bool blocked = 19;</code>
     * @return The blocked.
     */
    @java.lang.Override
    public boolean getBlocked() {
      return instance.getBlocked();
    }
    /**
     * <pre>
     * If a device is blocked, connections or requests from this device will fail.
     * Can be used to temporarily prevent the device from connecting if, for
     * example, the sensor is generating bad data and needs maintenance.
     * </pre>
     *
     * <code>bool blocked = 19;</code>
     * @param value The blocked to set.
     * @return This builder for chaining.
     */
    public Builder setBlocked(boolean value) {
      copyOnWrite();
      instance.setBlocked(value);
      return this;
    }
    /**
     * <pre>
     * If a device is blocked, connections or requests from this device will fail.
     * Can be used to temporarily prevent the device from connecting if, for
     * example, the sensor is generating bad data and needs maintenance.
     * </pre>
     *
     * <code>bool blocked = 19;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlocked() {
      copyOnWrite();
      instance.clearBlocked();
      return this;
    }

    /**
     * <pre>
     * [Output only] The time the most recent error occurred, such as a failure to
     * publish to Cloud Pub/Sub. This field is the timestamp of
     * 'last_error_status'.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_error_time = 10;</code>
     */
    @java.lang.Override
    public boolean hasLastErrorTime() {
      return instance.hasLastErrorTime();
    }
    /**
     * <pre>
     * [Output only] The time the most recent error occurred, such as a failure to
     * publish to Cloud Pub/Sub. This field is the timestamp of
     * 'last_error_status'.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_error_time = 10;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getLastErrorTime() {
      return instance.getLastErrorTime();
    }
    /**
     * <pre>
     * [Output only] The time the most recent error occurred, such as a failure to
     * publish to Cloud Pub/Sub. This field is the timestamp of
     * 'last_error_status'.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_error_time = 10;</code>
     */
    public Builder setLastErrorTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setLastErrorTime(value);
      return this;
      }
    /**
     * <pre>
     * [Output only] The time the most recent error occurred, such as a failure to
     * publish to Cloud Pub/Sub. This field is the timestamp of
     * 'last_error_status'.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_error_time = 10;</code>
     */
    public Builder setLastErrorTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setLastErrorTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * [Output only] The time the most recent error occurred, such as a failure to
     * publish to Cloud Pub/Sub. This field is the timestamp of
     * 'last_error_status'.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_error_time = 10;</code>
     */
    public Builder mergeLastErrorTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeLastErrorTime(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The time the most recent error occurred, such as a failure to
     * publish to Cloud Pub/Sub. This field is the timestamp of
     * 'last_error_status'.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_error_time = 10;</code>
     */
    public Builder clearLastErrorTime() {  copyOnWrite();
      instance.clearLastErrorTime();
      return this;
    }

    /**
     * <pre>
     * [Output only] The error message of the most recent error, such as a failure
     * to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
     * field. If no errors have occurred, this field has an empty message
     * and the status code 0 == OK. Otherwise, this field is expected to have a
     * status code other than OK.
     * </pre>
     *
     * <code>.google.rpc.Status last_error_status = 11;</code>
     */
    @java.lang.Override
    public boolean hasLastErrorStatus() {
      return instance.hasLastErrorStatus();
    }
    /**
     * <pre>
     * [Output only] The error message of the most recent error, such as a failure
     * to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
     * field. If no errors have occurred, this field has an empty message
     * and the status code 0 == OK. Otherwise, this field is expected to have a
     * status code other than OK.
     * </pre>
     *
     * <code>.google.rpc.Status last_error_status = 11;</code>
     */
    @java.lang.Override
    public com.google.rpc.Status getLastErrorStatus() {
      return instance.getLastErrorStatus();
    }
    /**
     * <pre>
     * [Output only] The error message of the most recent error, such as a failure
     * to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
     * field. If no errors have occurred, this field has an empty message
     * and the status code 0 == OK. Otherwise, this field is expected to have a
     * status code other than OK.
     * </pre>
     *
     * <code>.google.rpc.Status last_error_status = 11;</code>
     */
    public Builder setLastErrorStatus(com.google.rpc.Status value) {
      copyOnWrite();
      instance.setLastErrorStatus(value);
      return this;
      }
    /**
     * <pre>
     * [Output only] The error message of the most recent error, such as a failure
     * to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
     * field. If no errors have occurred, this field has an empty message
     * and the status code 0 == OK. Otherwise, this field is expected to have a
     * status code other than OK.
     * </pre>
     *
     * <code>.google.rpc.Status last_error_status = 11;</code>
     */
    public Builder setLastErrorStatus(
        com.google.rpc.Status.Builder builderForValue) {
      copyOnWrite();
      instance.setLastErrorStatus(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * [Output only] The error message of the most recent error, such as a failure
     * to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
     * field. If no errors have occurred, this field has an empty message
     * and the status code 0 == OK. Otherwise, this field is expected to have a
     * status code other than OK.
     * </pre>
     *
     * <code>.google.rpc.Status last_error_status = 11;</code>
     */
    public Builder mergeLastErrorStatus(com.google.rpc.Status value) {
      copyOnWrite();
      instance.mergeLastErrorStatus(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The error message of the most recent error, such as a failure
     * to publish to Cloud Pub/Sub. 'last_error_time' is the timestamp of this
     * field. If no errors have occurred, this field has an empty message
     * and the status code 0 == OK. Otherwise, this field is expected to have a
     * status code other than OK.
     * </pre>
     *
     * <code>.google.rpc.Status last_error_status = 11;</code>
     */
    public Builder clearLastErrorStatus() {  copyOnWrite();
      instance.clearLastErrorStatus();
      return this;
    }

    /**
     * <pre>
     * The most recent device configuration, which is eventually sent from
     * Cloud IoT Core to the device. If not present on creation, the
     * configuration will be initialized with an empty payload and version value
     * of `1`. To update this field after creation, use the
     * `DeviceManager.ModifyCloudToDeviceConfig` method.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.DeviceConfig config = 13;</code>
     */
    @java.lang.Override
    public boolean hasConfig() {
      return instance.hasConfig();
    }
    /**
     * <pre>
     * The most recent device configuration, which is eventually sent from
     * Cloud IoT Core to the device. If not present on creation, the
     * configuration will be initialized with an empty payload and version value
     * of `1`. To update this field after creation, use the
     * `DeviceManager.ModifyCloudToDeviceConfig` method.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.DeviceConfig config = 13;</code>
     */
    @java.lang.Override
    public google.events.cloud.iot.v1.DeviceConfig getConfig() {
      return instance.getConfig();
    }
    /**
     * <pre>
     * The most recent device configuration, which is eventually sent from
     * Cloud IoT Core to the device. If not present on creation, the
     * configuration will be initialized with an empty payload and version value
     * of `1`. To update this field after creation, use the
     * `DeviceManager.ModifyCloudToDeviceConfig` method.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.DeviceConfig config = 13;</code>
     */
    public Builder setConfig(google.events.cloud.iot.v1.DeviceConfig value) {
      copyOnWrite();
      instance.setConfig(value);
      return this;
      }
    /**
     * <pre>
     * The most recent device configuration, which is eventually sent from
     * Cloud IoT Core to the device. If not present on creation, the
     * configuration will be initialized with an empty payload and version value
     * of `1`. To update this field after creation, use the
     * `DeviceManager.ModifyCloudToDeviceConfig` method.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.DeviceConfig config = 13;</code>
     */
    public Builder setConfig(
        google.events.cloud.iot.v1.DeviceConfig.Builder builderForValue) {
      copyOnWrite();
      instance.setConfig(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The most recent device configuration, which is eventually sent from
     * Cloud IoT Core to the device. If not present on creation, the
     * configuration will be initialized with an empty payload and version value
     * of `1`. To update this field after creation, use the
     * `DeviceManager.ModifyCloudToDeviceConfig` method.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.DeviceConfig config = 13;</code>
     */
    public Builder mergeConfig(google.events.cloud.iot.v1.DeviceConfig value) {
      copyOnWrite();
      instance.mergeConfig(value);
      return this;
    }
    /**
     * <pre>
     * The most recent device configuration, which is eventually sent from
     * Cloud IoT Core to the device. If not present on creation, the
     * configuration will be initialized with an empty payload and version value
     * of `1`. To update this field after creation, use the
     * `DeviceManager.ModifyCloudToDeviceConfig` method.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.DeviceConfig config = 13;</code>
     */
    public Builder clearConfig() {  copyOnWrite();
      instance.clearConfig();
      return this;
    }

    /**
     * <pre>
     * [Output only] The state most recently received from the device. If no state
     * has been reported, this field is not present.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.DeviceState state = 16;</code>
     */
    @java.lang.Override
    public boolean hasState() {
      return instance.hasState();
    }
    /**
     * <pre>
     * [Output only] The state most recently received from the device. If no state
     * has been reported, this field is not present.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.DeviceState state = 16;</code>
     */
    @java.lang.Override
    public google.events.cloud.iot.v1.DeviceState getState() {
      return instance.getState();
    }
    /**
     * <pre>
     * [Output only] The state most recently received from the device. If no state
     * has been reported, this field is not present.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.DeviceState state = 16;</code>
     */
    public Builder setState(google.events.cloud.iot.v1.DeviceState value) {
      copyOnWrite();
      instance.setState(value);
      return this;
      }
    /**
     * <pre>
     * [Output only] The state most recently received from the device. If no state
     * has been reported, this field is not present.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.DeviceState state = 16;</code>
     */
    public Builder setState(
        google.events.cloud.iot.v1.DeviceState.Builder builderForValue) {
      copyOnWrite();
      instance.setState(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * [Output only] The state most recently received from the device. If no state
     * has been reported, this field is not present.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.DeviceState state = 16;</code>
     */
    public Builder mergeState(google.events.cloud.iot.v1.DeviceState value) {
      copyOnWrite();
      instance.mergeState(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The state most recently received from the device. If no state
     * has been reported, this field is not present.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.DeviceState state = 16;</code>
     */
    public Builder clearState() {  copyOnWrite();
      instance.clearState();
      return this;
    }

    /**
     * <pre>
     * **Beta Feature**
     * The logging verbosity for device activity. If unspecified,
     * DeviceRegistry.log_level will be used.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.LogLevel log_level = 21;</code>
     * @return The enum numeric value on the wire for logLevel.
     */
    @java.lang.Override
    public int getLogLevelValue() {
      return instance.getLogLevelValue();
    }
    /**
     * <pre>
     * **Beta Feature**
     * The logging verbosity for device activity. If unspecified,
     * DeviceRegistry.log_level will be used.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.LogLevel log_level = 21;</code>
     * @param value The logLevel to set.
     * @return This builder for chaining.
     */
    public Builder setLogLevelValue(int value) {
      copyOnWrite();
      instance.setLogLevelValue(value);
      return this;
    }
    /**
     * <pre>
     * **Beta Feature**
     * The logging verbosity for device activity. If unspecified,
     * DeviceRegistry.log_level will be used.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.LogLevel log_level = 21;</code>
     * @return The logLevel.
     */
    @java.lang.Override
    public google.events.cloud.iot.v1.LogLevel getLogLevel() {
      return instance.getLogLevel();
    }
    /**
     * <pre>
     * **Beta Feature**
     * The logging verbosity for device activity. If unspecified,
     * DeviceRegistry.log_level will be used.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.LogLevel log_level = 21;</code>
     * @param value The enum numeric value on the wire for logLevel to set.
     * @return This builder for chaining.
     */
    public Builder setLogLevel(google.events.cloud.iot.v1.LogLevel value) {
      copyOnWrite();
      instance.setLogLevel(value);
      return this;
    }
    /**
     * <pre>
     * **Beta Feature**
     * The logging verbosity for device activity. If unspecified,
     * DeviceRegistry.log_level will be used.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.LogLevel log_level = 21;</code>
     * @return This builder for chaining.
     */
    public Builder clearLogLevel() {
      copyOnWrite();
      instance.clearLogLevel();
      return this;
    }

    @java.lang.Override

    public int getMetadataCount() {
      return instance.getMetadataMap().size();
    }
    /**
     * <pre>
     * The metadata key-value pairs assigned to the device. This metadata is not
     * interpreted or indexed by Cloud IoT Core. It can be used to add contextual
     * information for the device.
     * Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
     * be less than 128 bytes in length.
     * Values are free-form strings. Each value must be less than or equal to 32
     * KB in size.
     * The total size of all keys and values must be less than 256 KB, and the
     * maximum number of key-value pairs is 500.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 17;</code>
     */
    @java.lang.Override

    public boolean containsMetadata(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      return instance.getMetadataMap().containsKey(key);
    }

    public Builder clearMetadata() {
      copyOnWrite();
      instance.getMutableMetadataMap().clear();
      return this;
    }
    /**
     * <pre>
     * The metadata key-value pairs assigned to the device. This metadata is not
     * interpreted or indexed by Cloud IoT Core. It can be used to add contextual
     * information for the device.
     * Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
     * be less than 128 bytes in length.
     * Values are free-form strings. Each value must be less than or equal to 32
     * KB in size.
     * The total size of all keys and values must be less than 256 KB, and the
     * maximum number of key-value pairs is 500.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 17;</code>
     */

    public Builder removeMetadata(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      copyOnWrite();
      instance.getMutableMetadataMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getMetadataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
      return getMetadataMap();
    }
    /**
     * <pre>
     * The metadata key-value pairs assigned to the device. This metadata is not
     * interpreted or indexed by Cloud IoT Core. It can be used to add contextual
     * information for the device.
     * Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
     * be less than 128 bytes in length.
     * Values are free-form strings. Each value must be less than or equal to 32
     * KB in size.
     * The total size of all keys and values must be less than 256 KB, and the
     * maximum number of key-value pairs is 500.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 17;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getMetadataMap());
    }
    /**
     * <pre>
     * The metadata key-value pairs assigned to the device. This metadata is not
     * interpreted or indexed by Cloud IoT Core. It can be used to add contextual
     * information for the device.
     * Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
     * be less than 128 bytes in length.
     * Values are free-form strings. Each value must be less than or equal to 32
     * KB in size.
     * The total size of all keys and values must be less than 256 KB, and the
     * maximum number of key-value pairs is 500.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 17;</code>
     */
    @java.lang.Override

    public java.lang.String getMetadataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getMetadataMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * The metadata key-value pairs assigned to the device. This metadata is not
     * interpreted or indexed by Cloud IoT Core. It can be used to add contextual
     * information for the device.
     * Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
     * be less than 128 bytes in length.
     * Values are free-form strings. Each value must be less than or equal to 32
     * KB in size.
     * The total size of all keys and values must be less than 256 KB, and the
     * maximum number of key-value pairs is 500.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 17;</code>
     */
    @java.lang.Override

    public java.lang.String getMetadataOrThrow(
        java.lang.String key) {
      java.lang.Class<?> keyClass = key.getClass();
      java.util.Map<java.lang.String, java.lang.String> map =
          instance.getMetadataMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <pre>
     * The metadata key-value pairs assigned to the device. This metadata is not
     * interpreted or indexed by Cloud IoT Core. It can be used to add contextual
     * information for the device.
     * Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
     * be less than 128 bytes in length.
     * Values are free-form strings. Each value must be less than or equal to 32
     * KB in size.
     * The total size of all keys and values must be less than 256 KB, and the
     * maximum number of key-value pairs is 500.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 17;</code>
     */
    public Builder putMetadata(
        java.lang.String key,
        java.lang.String value) {
      java.lang.Class<?> keyClass = key.getClass();
      java.lang.Class<?> valueClass = value.getClass();
      copyOnWrite();
      instance.getMutableMetadataMap().put(key, value);
      return this;
    }
    /**
     * <pre>
     * The metadata key-value pairs assigned to the device. This metadata is not
     * interpreted or indexed by Cloud IoT Core. It can be used to add contextual
     * information for the device.
     * Keys must conform to the regular expression [a-zA-Z][a-zA-Z0-9-_.+~%]+ and
     * be less than 128 bytes in length.
     * Values are free-form strings. Each value must be less than or equal to 32
     * KB in size.
     * The total size of all keys and values must be less than 256 KB, and the
     * maximum number of key-value pairs is 500.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 17;</code>
     */
    public Builder putAllMetadata(
        java.util.Map<java.lang.String, java.lang.String> values) {
      copyOnWrite();
      instance.getMutableMetadataMap().putAll(values);
      return this;
    }

    /**
     * <pre>
     * Gateway-related configuration and state.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.GatewayConfig gateway_config = 24;</code>
     */
    @java.lang.Override
    public boolean hasGatewayConfig() {
      return instance.hasGatewayConfig();
    }
    /**
     * <pre>
     * Gateway-related configuration and state.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.GatewayConfig gateway_config = 24;</code>
     */
    @java.lang.Override
    public google.events.cloud.iot.v1.GatewayConfig getGatewayConfig() {
      return instance.getGatewayConfig();
    }
    /**
     * <pre>
     * Gateway-related configuration and state.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.GatewayConfig gateway_config = 24;</code>
     */
    public Builder setGatewayConfig(google.events.cloud.iot.v1.GatewayConfig value) {
      copyOnWrite();
      instance.setGatewayConfig(value);
      return this;
      }
    /**
     * <pre>
     * Gateway-related configuration and state.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.GatewayConfig gateway_config = 24;</code>
     */
    public Builder setGatewayConfig(
        google.events.cloud.iot.v1.GatewayConfig.Builder builderForValue) {
      copyOnWrite();
      instance.setGatewayConfig(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Gateway-related configuration and state.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.GatewayConfig gateway_config = 24;</code>
     */
    public Builder mergeGatewayConfig(google.events.cloud.iot.v1.GatewayConfig value) {
      copyOnWrite();
      instance.mergeGatewayConfig(value);
      return this;
    }
    /**
     * <pre>
     * Gateway-related configuration and state.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.GatewayConfig gateway_config = 24;</code>
     */
    public Builder clearGatewayConfig() {  copyOnWrite();
      instance.clearGatewayConfig();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.iot.v1.Device)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.cloud.iot.v1.Device();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "id_",
            "name_",
            "numId_",
            "lastHeartbeatTime_",
            "lastEventTime_",
            "lastErrorTime_",
            "lastErrorStatus_",
            "credentials_",
            google.events.cloud.iot.v1.DeviceCredential.class,
            "config_",
            "lastConfigAckTime_",
            "state_",
            "metadata_",
            MetadataDefaultEntryHolder.defaultEntry,
            "lastConfigSendTime_",
            "blocked_",
            "lastStateTime_",
            "logLevel_",
            "gatewayConfig_",
          };
          java.lang.String info =
              "\u0000\u0011\u0000\u0000\u0001\u0018\u0011\u0001\u0001\u0000\u0001\u0208\u0002\u0208" +
              "\u0003\u0003\u0007\t\b\t\n\t\u000b\t\f\u001b\r\t\u000e\t\u0010\t\u00112\u0012\t\u0013" +
              "\u0007\u0014\t\u0015\f\u0018\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.cloud.iot.v1.Device> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.cloud.iot.v1.Device.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.cloud.iot.v1.Device>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.cloud.iot.v1.Device)
  private static final google.events.cloud.iot.v1.Device DEFAULT_INSTANCE;
  static {
    Device defaultInstance = new Device();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      Device.class, defaultInstance);
  }

  public static google.events.cloud.iot.v1.Device getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Device> PARSER;

  public static com.google.protobuf.Parser<Device> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

