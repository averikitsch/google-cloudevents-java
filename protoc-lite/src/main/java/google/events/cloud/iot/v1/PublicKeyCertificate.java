// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/iot/v1/data.proto

package google.events.cloud.iot.v1;

/**
 * <pre>
 * A public key certificate format and data.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.iot.v1.PublicKeyCertificate}
 */
public  final class PublicKeyCertificate extends
    com.google.protobuf.GeneratedMessageLite<
        PublicKeyCertificate, PublicKeyCertificate.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.iot.v1.PublicKeyCertificate)
    PublicKeyCertificateOrBuilder {
  private PublicKeyCertificate() {
    certificate_ = "";
  }
  public static final int FORMAT_FIELD_NUMBER = 1;
  private int format_;
  /**
   * <pre>
   * The certificate format.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.PublicKeyCertificateFormat format = 1;</code>
   * @return The enum numeric value on the wire for format.
   */
  @java.lang.Override
  public int getFormatValue() {
    return format_;
  }
  /**
   * <pre>
   * The certificate format.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.PublicKeyCertificateFormat format = 1;</code>
   * @return The format.
   */
  @java.lang.Override
  public google.events.cloud.iot.v1.PublicKeyCertificateFormat getFormat() {
    google.events.cloud.iot.v1.PublicKeyCertificateFormat result = google.events.cloud.iot.v1.PublicKeyCertificateFormat.forNumber(format_);
    return result == null ? google.events.cloud.iot.v1.PublicKeyCertificateFormat.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * The certificate format.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.PublicKeyCertificateFormat format = 1;</code>
   * @param value The enum numeric value on the wire for format to set.
   */
  private void setFormatValue(int value) {
      format_ = value;
  }
  /**
   * <pre>
   * The certificate format.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.PublicKeyCertificateFormat format = 1;</code>
   * @param value The format to set.
   */
  private void setFormat(google.events.cloud.iot.v1.PublicKeyCertificateFormat value) {
    format_ = value.getNumber();
    
  }
  /**
   * <pre>
   * The certificate format.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.PublicKeyCertificateFormat format = 1;</code>
   */
  private void clearFormat() {
    
    format_ = 0;
  }

  public static final int CERTIFICATE_FIELD_NUMBER = 2;
  private java.lang.String certificate_;
  /**
   * <pre>
   * The certificate data.
   * </pre>
   *
   * <code>string certificate = 2;</code>
   * @return The certificate.
   */
  @java.lang.Override
  public java.lang.String getCertificate() {
    return certificate_;
  }
  /**
   * <pre>
   * The certificate data.
   * </pre>
   *
   * <code>string certificate = 2;</code>
   * @return The bytes for certificate.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCertificateBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(certificate_);
  }
  /**
   * <pre>
   * The certificate data.
   * </pre>
   *
   * <code>string certificate = 2;</code>
   * @param value The certificate to set.
   */
  private void setCertificate(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    certificate_ = value;
  }
  /**
   * <pre>
   * The certificate data.
   * </pre>
   *
   * <code>string certificate = 2;</code>
   */
  private void clearCertificate() {
    
    certificate_ = getDefaultInstance().getCertificate();
  }
  /**
   * <pre>
   * The certificate data.
   * </pre>
   *
   * <code>string certificate = 2;</code>
   * @param value The bytes for certificate to set.
   */
  private void setCertificateBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    certificate_ = value.toStringUtf8();
    
  }

  public static final int X509_DETAILS_FIELD_NUMBER = 3;
  private google.events.cloud.iot.v1.X509CertificateDetails x509Details_;
  /**
   * <pre>
   * [Output only] The certificate details. Used only for X.509 certificates.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.X509CertificateDetails x509_details = 3;</code>
   */
  @java.lang.Override
  public boolean hasX509Details() {
    return x509Details_ != null;
  }
  /**
   * <pre>
   * [Output only] The certificate details. Used only for X.509 certificates.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.X509CertificateDetails x509_details = 3;</code>
   */
  @java.lang.Override
  public google.events.cloud.iot.v1.X509CertificateDetails getX509Details() {
    return x509Details_ == null ? google.events.cloud.iot.v1.X509CertificateDetails.getDefaultInstance() : x509Details_;
  }
  /**
   * <pre>
   * [Output only] The certificate details. Used only for X.509 certificates.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.X509CertificateDetails x509_details = 3;</code>
   */
  private void setX509Details(google.events.cloud.iot.v1.X509CertificateDetails value) {
    value.getClass();
  x509Details_ = value;
    
    }
  /**
   * <pre>
   * [Output only] The certificate details. Used only for X.509 certificates.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.X509CertificateDetails x509_details = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeX509Details(google.events.cloud.iot.v1.X509CertificateDetails value) {
    value.getClass();
  if (x509Details_ != null &&
        x509Details_ != google.events.cloud.iot.v1.X509CertificateDetails.getDefaultInstance()) {
      x509Details_ =
        google.events.cloud.iot.v1.X509CertificateDetails.newBuilder(x509Details_).mergeFrom(value).buildPartial();
    } else {
      x509Details_ = value;
    }
    
  }
  /**
   * <pre>
   * [Output only] The certificate details. Used only for X.509 certificates.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.X509CertificateDetails x509_details = 3;</code>
   */
  private void clearX509Details() {  x509Details_ = null;
    
  }

  public static google.events.cloud.iot.v1.PublicKeyCertificate parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.PublicKeyCertificate parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.PublicKeyCertificate parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.PublicKeyCertificate parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.PublicKeyCertificate parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.PublicKeyCertificate parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.PublicKeyCertificate parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.PublicKeyCertificate parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.PublicKeyCertificate parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.PublicKeyCertificate parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.PublicKeyCertificate parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.PublicKeyCertificate parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.cloud.iot.v1.PublicKeyCertificate prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * A public key certificate format and data.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.iot.v1.PublicKeyCertificate}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.cloud.iot.v1.PublicKeyCertificate, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.iot.v1.PublicKeyCertificate)
      google.events.cloud.iot.v1.PublicKeyCertificateOrBuilder {
    // Construct using google.events.cloud.iot.v1.PublicKeyCertificate.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The certificate format.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.PublicKeyCertificateFormat format = 1;</code>
     * @return The enum numeric value on the wire for format.
     */
    @java.lang.Override
    public int getFormatValue() {
      return instance.getFormatValue();
    }
    /**
     * <pre>
     * The certificate format.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.PublicKeyCertificateFormat format = 1;</code>
     * @param value The format to set.
     * @return This builder for chaining.
     */
    public Builder setFormatValue(int value) {
      copyOnWrite();
      instance.setFormatValue(value);
      return this;
    }
    /**
     * <pre>
     * The certificate format.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.PublicKeyCertificateFormat format = 1;</code>
     * @return The format.
     */
    @java.lang.Override
    public google.events.cloud.iot.v1.PublicKeyCertificateFormat getFormat() {
      return instance.getFormat();
    }
    /**
     * <pre>
     * The certificate format.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.PublicKeyCertificateFormat format = 1;</code>
     * @param value The enum numeric value on the wire for format to set.
     * @return This builder for chaining.
     */
    public Builder setFormat(google.events.cloud.iot.v1.PublicKeyCertificateFormat value) {
      copyOnWrite();
      instance.setFormat(value);
      return this;
    }
    /**
     * <pre>
     * The certificate format.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.PublicKeyCertificateFormat format = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearFormat() {
      copyOnWrite();
      instance.clearFormat();
      return this;
    }

    /**
     * <pre>
     * The certificate data.
     * </pre>
     *
     * <code>string certificate = 2;</code>
     * @return The certificate.
     */
    @java.lang.Override
    public java.lang.String getCertificate() {
      return instance.getCertificate();
    }
    /**
     * <pre>
     * The certificate data.
     * </pre>
     *
     * <code>string certificate = 2;</code>
     * @return The bytes for certificate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCertificateBytes() {
      return instance.getCertificateBytes();
    }
    /**
     * <pre>
     * The certificate data.
     * </pre>
     *
     * <code>string certificate = 2;</code>
     * @param value The certificate to set.
     * @return This builder for chaining.
     */
    public Builder setCertificate(
        java.lang.String value) {
      copyOnWrite();
      instance.setCertificate(value);
      return this;
    }
    /**
     * <pre>
     * The certificate data.
     * </pre>
     *
     * <code>string certificate = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearCertificate() {
      copyOnWrite();
      instance.clearCertificate();
      return this;
    }
    /**
     * <pre>
     * The certificate data.
     * </pre>
     *
     * <code>string certificate = 2;</code>
     * @param value The bytes for certificate to set.
     * @return This builder for chaining.
     */
    public Builder setCertificateBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setCertificateBytes(value);
      return this;
    }

    /**
     * <pre>
     * [Output only] The certificate details. Used only for X.509 certificates.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.X509CertificateDetails x509_details = 3;</code>
     */
    @java.lang.Override
    public boolean hasX509Details() {
      return instance.hasX509Details();
    }
    /**
     * <pre>
     * [Output only] The certificate details. Used only for X.509 certificates.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.X509CertificateDetails x509_details = 3;</code>
     */
    @java.lang.Override
    public google.events.cloud.iot.v1.X509CertificateDetails getX509Details() {
      return instance.getX509Details();
    }
    /**
     * <pre>
     * [Output only] The certificate details. Used only for X.509 certificates.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.X509CertificateDetails x509_details = 3;</code>
     */
    public Builder setX509Details(google.events.cloud.iot.v1.X509CertificateDetails value) {
      copyOnWrite();
      instance.setX509Details(value);
      return this;
      }
    /**
     * <pre>
     * [Output only] The certificate details. Used only for X.509 certificates.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.X509CertificateDetails x509_details = 3;</code>
     */
    public Builder setX509Details(
        google.events.cloud.iot.v1.X509CertificateDetails.Builder builderForValue) {
      copyOnWrite();
      instance.setX509Details(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * [Output only] The certificate details. Used only for X.509 certificates.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.X509CertificateDetails x509_details = 3;</code>
     */
    public Builder mergeX509Details(google.events.cloud.iot.v1.X509CertificateDetails value) {
      copyOnWrite();
      instance.mergeX509Details(value);
      return this;
    }
    /**
     * <pre>
     * [Output only] The certificate details. Used only for X.509 certificates.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.X509CertificateDetails x509_details = 3;</code>
     */
    public Builder clearX509Details() {  copyOnWrite();
      instance.clearX509Details();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.iot.v1.PublicKeyCertificate)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.cloud.iot.v1.PublicKeyCertificate();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "format_",
            "certificate_",
            "x509Details_",
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\f\u0002\u0208" +
              "\u0003\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.cloud.iot.v1.PublicKeyCertificate> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.cloud.iot.v1.PublicKeyCertificate.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.cloud.iot.v1.PublicKeyCertificate>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.cloud.iot.v1.PublicKeyCertificate)
  private static final google.events.cloud.iot.v1.PublicKeyCertificate DEFAULT_INSTANCE;
  static {
    PublicKeyCertificate defaultInstance = new PublicKeyCertificate();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      PublicKeyCertificate.class, defaultInstance);
  }

  public static google.events.cloud.iot.v1.PublicKeyCertificate getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<PublicKeyCertificate> PARSER;

  public static com.google.protobuf.Parser<PublicKeyCertificate> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

