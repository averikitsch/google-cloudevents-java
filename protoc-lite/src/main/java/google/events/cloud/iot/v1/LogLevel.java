// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/iot/v1/data.proto

package google.events.cloud.iot.v1;

/**
 * <pre>
 * **Beta Feature**
 * The logging verbosity for device activity. Specifies which events should be
 * written to logs. For example, if the LogLevel is ERROR, only events that
 * terminate in errors will be logged. LogLevel is inclusive; enabling INFO
 * logging will also enable ERROR logging.
 * </pre>
 *
 * Protobuf enum {@code google.events.cloud.iot.v1.LogLevel}
 */
public enum LogLevel
    implements com.google.protobuf.Internal.EnumLite {
  /**
   * <pre>
   * No logging specified. If not specified, logging will be disabled.
   * </pre>
   *
   * <code>LOG_LEVEL_UNSPECIFIED = 0;</code>
   */
  LOG_LEVEL_UNSPECIFIED(0),
  /**
   * <pre>
   * Disables logging.
   * </pre>
   *
   * <code>NONE = 10;</code>
   */
  NONE(10),
  /**
   * <pre>
   * Error events will be logged.
   * </pre>
   *
   * <code>ERROR = 20;</code>
   */
  ERROR(20),
  /**
   * <pre>
   * Informational events will be logged, such as connections and
   * disconnections.
   * </pre>
   *
   * <code>INFO = 30;</code>
   */
  INFO(30),
  /**
   * <pre>
   * All events will be logged.
   * </pre>
   *
   * <code>DEBUG = 40;</code>
   */
  DEBUG(40),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * No logging specified. If not specified, logging will be disabled.
   * </pre>
   *
   * <code>LOG_LEVEL_UNSPECIFIED = 0;</code>
   */
  public static final int LOG_LEVEL_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Disables logging.
   * </pre>
   *
   * <code>NONE = 10;</code>
   */
  public static final int NONE_VALUE = 10;
  /**
   * <pre>
   * Error events will be logged.
   * </pre>
   *
   * <code>ERROR = 20;</code>
   */
  public static final int ERROR_VALUE = 20;
  /**
   * <pre>
   * Informational events will be logged, such as connections and
   * disconnections.
   * </pre>
   *
   * <code>INFO = 30;</code>
   */
  public static final int INFO_VALUE = 30;
  /**
   * <pre>
   * All events will be logged.
   * </pre>
   *
   * <code>DEBUG = 40;</code>
   */
  public static final int DEBUG_VALUE = 40;


  @java.lang.Override
  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The number of the enum to look for.
   * @return The enum associated with the given number.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static LogLevel valueOf(int value) {
    return forNumber(value);
  }

  public static LogLevel forNumber(int value) {
    switch (value) {
      case 0: return LOG_LEVEL_UNSPECIFIED;
      case 10: return NONE;
      case 20: return ERROR;
      case 30: return INFO;
      case 40: return DEBUG;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<LogLevel>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      LogLevel> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<LogLevel>() {
          @java.lang.Override
          public LogLevel findValueByNumber(int number) {
            return LogLevel.forNumber(number);
          }
        };

  public static com.google.protobuf.Internal.EnumVerifier 
      internalGetVerifier() {
    return LogLevelVerifier.INSTANCE;
  }

  private static final class LogLevelVerifier implements 
       com.google.protobuf.Internal.EnumVerifier { 
          static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new LogLevelVerifier();
          @java.lang.Override
          public boolean isInRange(int number) {
            return LogLevel.forNumber(number) != null;
          }
        };

  private final int value;

  private LogLevel(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:google.events.cloud.iot.v1.LogLevel)
}

