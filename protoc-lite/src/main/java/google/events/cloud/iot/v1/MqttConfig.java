// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/iot/v1/data.proto

package google.events.cloud.iot.v1;

/**
 * <pre>
 * The configuration of MQTT for a device registry.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.iot.v1.MqttConfig}
 */
public  final class MqttConfig extends
    com.google.protobuf.GeneratedMessageLite<
        MqttConfig, MqttConfig.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.iot.v1.MqttConfig)
    MqttConfigOrBuilder {
  private MqttConfig() {
  }
  public static final int MQTT_ENABLED_STATE_FIELD_NUMBER = 1;
  private int mqttEnabledState_;
  /**
   * <pre>
   * If enabled, allows connections using the MQTT protocol. Otherwise, MQTT
   * connections to this registry will fail.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.MqttState mqtt_enabled_state = 1;</code>
   * @return The enum numeric value on the wire for mqttEnabledState.
   */
  @java.lang.Override
  public int getMqttEnabledStateValue() {
    return mqttEnabledState_;
  }
  /**
   * <pre>
   * If enabled, allows connections using the MQTT protocol. Otherwise, MQTT
   * connections to this registry will fail.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.MqttState mqtt_enabled_state = 1;</code>
   * @return The mqttEnabledState.
   */
  @java.lang.Override
  public google.events.cloud.iot.v1.MqttState getMqttEnabledState() {
    google.events.cloud.iot.v1.MqttState result = google.events.cloud.iot.v1.MqttState.forNumber(mqttEnabledState_);
    return result == null ? google.events.cloud.iot.v1.MqttState.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * If enabled, allows connections using the MQTT protocol. Otherwise, MQTT
   * connections to this registry will fail.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.MqttState mqtt_enabled_state = 1;</code>
   * @param value The enum numeric value on the wire for mqttEnabledState to set.
   */
  private void setMqttEnabledStateValue(int value) {
      mqttEnabledState_ = value;
  }
  /**
   * <pre>
   * If enabled, allows connections using the MQTT protocol. Otherwise, MQTT
   * connections to this registry will fail.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.MqttState mqtt_enabled_state = 1;</code>
   * @param value The mqttEnabledState to set.
   */
  private void setMqttEnabledState(google.events.cloud.iot.v1.MqttState value) {
    mqttEnabledState_ = value.getNumber();
    
  }
  /**
   * <pre>
   * If enabled, allows connections using the MQTT protocol. Otherwise, MQTT
   * connections to this registry will fail.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.MqttState mqtt_enabled_state = 1;</code>
   */
  private void clearMqttEnabledState() {
    
    mqttEnabledState_ = 0;
  }

  public static google.events.cloud.iot.v1.MqttConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.MqttConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.MqttConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.MqttConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.MqttConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.MqttConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.MqttConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.MqttConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.MqttConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.MqttConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.MqttConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.MqttConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.cloud.iot.v1.MqttConfig prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * The configuration of MQTT for a device registry.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.iot.v1.MqttConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.cloud.iot.v1.MqttConfig, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.iot.v1.MqttConfig)
      google.events.cloud.iot.v1.MqttConfigOrBuilder {
    // Construct using google.events.cloud.iot.v1.MqttConfig.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * If enabled, allows connections using the MQTT protocol. Otherwise, MQTT
     * connections to this registry will fail.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.MqttState mqtt_enabled_state = 1;</code>
     * @return The enum numeric value on the wire for mqttEnabledState.
     */
    @java.lang.Override
    public int getMqttEnabledStateValue() {
      return instance.getMqttEnabledStateValue();
    }
    /**
     * <pre>
     * If enabled, allows connections using the MQTT protocol. Otherwise, MQTT
     * connections to this registry will fail.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.MqttState mqtt_enabled_state = 1;</code>
     * @param value The mqttEnabledState to set.
     * @return This builder for chaining.
     */
    public Builder setMqttEnabledStateValue(int value) {
      copyOnWrite();
      instance.setMqttEnabledStateValue(value);
      return this;
    }
    /**
     * <pre>
     * If enabled, allows connections using the MQTT protocol. Otherwise, MQTT
     * connections to this registry will fail.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.MqttState mqtt_enabled_state = 1;</code>
     * @return The mqttEnabledState.
     */
    @java.lang.Override
    public google.events.cloud.iot.v1.MqttState getMqttEnabledState() {
      return instance.getMqttEnabledState();
    }
    /**
     * <pre>
     * If enabled, allows connections using the MQTT protocol. Otherwise, MQTT
     * connections to this registry will fail.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.MqttState mqtt_enabled_state = 1;</code>
     * @param value The enum numeric value on the wire for mqttEnabledState to set.
     * @return This builder for chaining.
     */
    public Builder setMqttEnabledState(google.events.cloud.iot.v1.MqttState value) {
      copyOnWrite();
      instance.setMqttEnabledState(value);
      return this;
    }
    /**
     * <pre>
     * If enabled, allows connections using the MQTT protocol. Otherwise, MQTT
     * connections to this registry will fail.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.MqttState mqtt_enabled_state = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMqttEnabledState() {
      copyOnWrite();
      instance.clearMqttEnabledState();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.iot.v1.MqttConfig)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.cloud.iot.v1.MqttConfig();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "mqttEnabledState_",
          };
          java.lang.String info =
              "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\f";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.cloud.iot.v1.MqttConfig> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.cloud.iot.v1.MqttConfig.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.cloud.iot.v1.MqttConfig>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.cloud.iot.v1.MqttConfig)
  private static final google.events.cloud.iot.v1.MqttConfig DEFAULT_INSTANCE;
  static {
    MqttConfig defaultInstance = new MqttConfig();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      MqttConfig.class, defaultInstance);
  }

  public static google.events.cloud.iot.v1.MqttConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<MqttConfig> PARSER;

  public static com.google.protobuf.Parser<MqttConfig> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

