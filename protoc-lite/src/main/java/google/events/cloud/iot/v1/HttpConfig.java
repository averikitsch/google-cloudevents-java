// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/cloud/iot/v1/data.proto

package google.events.cloud.iot.v1;

/**
 * <pre>
 * The configuration of the HTTP bridge for a device registry.
 * </pre>
 *
 * Protobuf type {@code google.events.cloud.iot.v1.HttpConfig}
 */
public  final class HttpConfig extends
    com.google.protobuf.GeneratedMessageLite<
        HttpConfig, HttpConfig.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.cloud.iot.v1.HttpConfig)
    HttpConfigOrBuilder {
  private HttpConfig() {
  }
  public static final int HTTP_ENABLED_STATE_FIELD_NUMBER = 1;
  private int httpEnabledState_;
  /**
   * <pre>
   * If enabled, allows devices to use DeviceService via the HTTP protocol.
   * Otherwise, any requests to DeviceService will fail for this registry.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.HttpState http_enabled_state = 1;</code>
   * @return The enum numeric value on the wire for httpEnabledState.
   */
  @java.lang.Override
  public int getHttpEnabledStateValue() {
    return httpEnabledState_;
  }
  /**
   * <pre>
   * If enabled, allows devices to use DeviceService via the HTTP protocol.
   * Otherwise, any requests to DeviceService will fail for this registry.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.HttpState http_enabled_state = 1;</code>
   * @return The httpEnabledState.
   */
  @java.lang.Override
  public google.events.cloud.iot.v1.HttpState getHttpEnabledState() {
    google.events.cloud.iot.v1.HttpState result = google.events.cloud.iot.v1.HttpState.forNumber(httpEnabledState_);
    return result == null ? google.events.cloud.iot.v1.HttpState.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * If enabled, allows devices to use DeviceService via the HTTP protocol.
   * Otherwise, any requests to DeviceService will fail for this registry.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.HttpState http_enabled_state = 1;</code>
   * @param value The enum numeric value on the wire for httpEnabledState to set.
   */
  private void setHttpEnabledStateValue(int value) {
      httpEnabledState_ = value;
  }
  /**
   * <pre>
   * If enabled, allows devices to use DeviceService via the HTTP protocol.
   * Otherwise, any requests to DeviceService will fail for this registry.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.HttpState http_enabled_state = 1;</code>
   * @param value The httpEnabledState to set.
   */
  private void setHttpEnabledState(google.events.cloud.iot.v1.HttpState value) {
    httpEnabledState_ = value.getNumber();
    
  }
  /**
   * <pre>
   * If enabled, allows devices to use DeviceService via the HTTP protocol.
   * Otherwise, any requests to DeviceService will fail for this registry.
   * </pre>
   *
   * <code>.google.events.cloud.iot.v1.HttpState http_enabled_state = 1;</code>
   */
  private void clearHttpEnabledState() {
    
    httpEnabledState_ = 0;
  }

  public static google.events.cloud.iot.v1.HttpConfig parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.HttpConfig parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.HttpConfig parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.HttpConfig parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.HttpConfig parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.cloud.iot.v1.HttpConfig parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.HttpConfig parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.HttpConfig parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.HttpConfig parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.HttpConfig parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.cloud.iot.v1.HttpConfig parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.cloud.iot.v1.HttpConfig parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.cloud.iot.v1.HttpConfig prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * The configuration of the HTTP bridge for a device registry.
   * </pre>
   *
   * Protobuf type {@code google.events.cloud.iot.v1.HttpConfig}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.cloud.iot.v1.HttpConfig, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.cloud.iot.v1.HttpConfig)
      google.events.cloud.iot.v1.HttpConfigOrBuilder {
    // Construct using google.events.cloud.iot.v1.HttpConfig.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * If enabled, allows devices to use DeviceService via the HTTP protocol.
     * Otherwise, any requests to DeviceService will fail for this registry.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.HttpState http_enabled_state = 1;</code>
     * @return The enum numeric value on the wire for httpEnabledState.
     */
    @java.lang.Override
    public int getHttpEnabledStateValue() {
      return instance.getHttpEnabledStateValue();
    }
    /**
     * <pre>
     * If enabled, allows devices to use DeviceService via the HTTP protocol.
     * Otherwise, any requests to DeviceService will fail for this registry.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.HttpState http_enabled_state = 1;</code>
     * @param value The httpEnabledState to set.
     * @return This builder for chaining.
     */
    public Builder setHttpEnabledStateValue(int value) {
      copyOnWrite();
      instance.setHttpEnabledStateValue(value);
      return this;
    }
    /**
     * <pre>
     * If enabled, allows devices to use DeviceService via the HTTP protocol.
     * Otherwise, any requests to DeviceService will fail for this registry.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.HttpState http_enabled_state = 1;</code>
     * @return The httpEnabledState.
     */
    @java.lang.Override
    public google.events.cloud.iot.v1.HttpState getHttpEnabledState() {
      return instance.getHttpEnabledState();
    }
    /**
     * <pre>
     * If enabled, allows devices to use DeviceService via the HTTP protocol.
     * Otherwise, any requests to DeviceService will fail for this registry.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.HttpState http_enabled_state = 1;</code>
     * @param value The enum numeric value on the wire for httpEnabledState to set.
     * @return This builder for chaining.
     */
    public Builder setHttpEnabledState(google.events.cloud.iot.v1.HttpState value) {
      copyOnWrite();
      instance.setHttpEnabledState(value);
      return this;
    }
    /**
     * <pre>
     * If enabled, allows devices to use DeviceService via the HTTP protocol.
     * Otherwise, any requests to DeviceService will fail for this registry.
     * </pre>
     *
     * <code>.google.events.cloud.iot.v1.HttpState http_enabled_state = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearHttpEnabledState() {
      copyOnWrite();
      instance.clearHttpEnabledState();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.cloud.iot.v1.HttpConfig)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.cloud.iot.v1.HttpConfig();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "httpEnabledState_",
          };
          java.lang.String info =
              "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\f";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.cloud.iot.v1.HttpConfig> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.cloud.iot.v1.HttpConfig.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.cloud.iot.v1.HttpConfig>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.cloud.iot.v1.HttpConfig)
  private static final google.events.cloud.iot.v1.HttpConfig DEFAULT_INSTANCE;
  static {
    HttpConfig defaultInstance = new HttpConfig();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      HttpConfig.class, defaultInstance);
  }

  public static google.events.cloud.iot.v1.HttpConfig getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<HttpConfig> PARSER;

  public static com.google.protobuf.Parser<HttpConfig> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

