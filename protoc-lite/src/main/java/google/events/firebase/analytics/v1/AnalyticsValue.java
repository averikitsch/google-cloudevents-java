// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/analytics/v1/data.proto

package google.events.firebase.analytics.v1;

/**
 * <pre>
 * Value for Event Params and UserProperty can be of type string or int or
 * float or double.
 * </pre>
 *
 * Protobuf type {@code google.events.firebase.analytics.v1.AnalyticsValue}
 */
public  final class AnalyticsValue extends
    com.google.protobuf.GeneratedMessageLite<
        AnalyticsValue, AnalyticsValue.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.firebase.analytics.v1.AnalyticsValue)
    AnalyticsValueOrBuilder {
  private AnalyticsValue() {
  }
  private int paramValueCase_ = 0;
  private java.lang.Object paramValue_;
  public enum ParamValueCase {
    STRING_VALUE(1),
    INT_VALUE(2),
    FLOAT_VALUE(3),
    DOUBLE_VALUE(4),
    PARAMVALUE_NOT_SET(0);
    private final int value;
    private ParamValueCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ParamValueCase valueOf(int value) {
      return forNumber(value);
    }

    public static ParamValueCase forNumber(int value) {
      switch (value) {
        case 1: return STRING_VALUE;
        case 2: return INT_VALUE;
        case 3: return FLOAT_VALUE;
        case 4: return DOUBLE_VALUE;
        case 0: return PARAMVALUE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public ParamValueCase
  getParamValueCase() {
    return ParamValueCase.forNumber(
        paramValueCase_);
  }

  private void clearParamValue() {
    paramValueCase_ = 0;
    paramValue_ = null;
  }

  public static final int STRING_VALUE_FIELD_NUMBER = 1;
  /**
   * <code>string string_value = 1;</code>
   * @return Whether the stringValue field is set.
   */
  @java.lang.Override
  public boolean hasStringValue() {
    return paramValueCase_ == 1;
  }
  /**
   * <code>string string_value = 1;</code>
   * @return The stringValue.
   */
  @java.lang.Override
  public java.lang.String getStringValue() {
    java.lang.String ref = "";
    if (paramValueCase_ == 1) {
      ref = (java.lang.String) paramValue_;
    }
    return ref;
  }
  /**
   * <code>string string_value = 1;</code>
   * @return The bytes for stringValue.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStringValueBytes() {
    java.lang.String ref = "";
    if (paramValueCase_ == 1) {
      ref = (java.lang.String) paramValue_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <code>string string_value = 1;</code>
   * @param value The stringValue to set.
   */
  private void setStringValue(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  paramValueCase_ = 1;
    paramValue_ = value;
  }
  /**
   * <code>string string_value = 1;</code>
   */
  private void clearStringValue() {
    if (paramValueCase_ == 1) {
      paramValueCase_ = 0;
      paramValue_ = null;
    }
  }
  /**
   * <code>string string_value = 1;</code>
   * @param value The bytes for stringValue to set.
   */
  private void setStringValueBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    paramValue_ = value.toStringUtf8();
    paramValueCase_ = 1;
  }

  public static final int INT_VALUE_FIELD_NUMBER = 2;
  /**
   * <code>int64 int_value = 2;</code>
   * @return Whether the intValue field is set.
   */
  @java.lang.Override
  public boolean hasIntValue() {
    return paramValueCase_ == 2;
  }
  /**
   * <code>int64 int_value = 2;</code>
   * @return The intValue.
   */
  @java.lang.Override
  public long getIntValue() {
    if (paramValueCase_ == 2) {
      return (java.lang.Long) paramValue_;
    }
    return 0L;
  }
  /**
   * <code>int64 int_value = 2;</code>
   * @param value The intValue to set.
   */
  private void setIntValue(long value) {
    paramValueCase_ = 2;
    paramValue_ = value;
  }
  /**
   * <code>int64 int_value = 2;</code>
   */
  private void clearIntValue() {
    if (paramValueCase_ == 2) {
      paramValueCase_ = 0;
      paramValue_ = null;
    }
  }

  public static final int FLOAT_VALUE_FIELD_NUMBER = 3;
  /**
   * <code>float float_value = 3;</code>
   * @return Whether the floatValue field is set.
   */
  @java.lang.Override
  public boolean hasFloatValue() {
    return paramValueCase_ == 3;
  }
  /**
   * <code>float float_value = 3;</code>
   * @return The floatValue.
   */
  @java.lang.Override
  public float getFloatValue() {
    if (paramValueCase_ == 3) {
      return (java.lang.Float) paramValue_;
    }
    return 0F;
  }
  /**
   * <code>float float_value = 3;</code>
   * @param value The floatValue to set.
   */
  private void setFloatValue(float value) {
    paramValueCase_ = 3;
    paramValue_ = value;
  }
  /**
   * <code>float float_value = 3;</code>
   */
  private void clearFloatValue() {
    if (paramValueCase_ == 3) {
      paramValueCase_ = 0;
      paramValue_ = null;
    }
  }

  public static final int DOUBLE_VALUE_FIELD_NUMBER = 4;
  /**
   * <code>double double_value = 4;</code>
   * @return Whether the doubleValue field is set.
   */
  @java.lang.Override
  public boolean hasDoubleValue() {
    return paramValueCase_ == 4;
  }
  /**
   * <code>double double_value = 4;</code>
   * @return The doubleValue.
   */
  @java.lang.Override
  public double getDoubleValue() {
    if (paramValueCase_ == 4) {
      return (java.lang.Double) paramValue_;
    }
    return 0D;
  }
  /**
   * <code>double double_value = 4;</code>
   * @param value The doubleValue to set.
   */
  private void setDoubleValue(double value) {
    paramValueCase_ = 4;
    paramValue_ = value;
  }
  /**
   * <code>double double_value = 4;</code>
   */
  private void clearDoubleValue() {
    if (paramValueCase_ == 4) {
      paramValueCase_ = 0;
      paramValue_ = null;
    }
  }

  public static google.events.firebase.analytics.v1.AnalyticsValue parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.analytics.v1.AnalyticsValue parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.AnalyticsValue parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.analytics.v1.AnalyticsValue parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.AnalyticsValue parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.analytics.v1.AnalyticsValue parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.AnalyticsValue parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.analytics.v1.AnalyticsValue parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.AnalyticsValue parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.analytics.v1.AnalyticsValue parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.AnalyticsValue parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.analytics.v1.AnalyticsValue parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.firebase.analytics.v1.AnalyticsValue prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Value for Event Params and UserProperty can be of type string or int or
   * float or double.
   * </pre>
   *
   * Protobuf type {@code google.events.firebase.analytics.v1.AnalyticsValue}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.firebase.analytics.v1.AnalyticsValue, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.firebase.analytics.v1.AnalyticsValue)
      google.events.firebase.analytics.v1.AnalyticsValueOrBuilder {
    // Construct using google.events.firebase.analytics.v1.AnalyticsValue.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public ParamValueCase
        getParamValueCase() {
      return instance.getParamValueCase();
    }

    public Builder clearParamValue() {
      copyOnWrite();
      instance.clearParamValue();
      return this;
    }


    /**
     * <code>string string_value = 1;</code>
     * @return Whether the stringValue field is set.
     */
    @java.lang.Override
    public boolean hasStringValue() {
      return instance.hasStringValue();
    }
    /**
     * <code>string string_value = 1;</code>
     * @return The stringValue.
     */
    @java.lang.Override
    public java.lang.String getStringValue() {
      return instance.getStringValue();
    }
    /**
     * <code>string string_value = 1;</code>
     * @return The bytes for stringValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      return instance.getStringValueBytes();
    }
    /**
     * <code>string string_value = 1;</code>
     * @param value The stringValue to set.
     * @return This builder for chaining.
     */
    public Builder setStringValue(
        java.lang.String value) {
      copyOnWrite();
      instance.setStringValue(value);
      return this;
    }
    /**
     * <code>string string_value = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearStringValue() {
      copyOnWrite();
      instance.clearStringValue();
      return this;
    }
    /**
     * <code>string string_value = 1;</code>
     * @param value The bytes for stringValue to set.
     * @return This builder for chaining.
     */
    public Builder setStringValueBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setStringValueBytes(value);
      return this;
    }

    /**
     * <code>int64 int_value = 2;</code>
     * @return Whether the intValue field is set.
     */
    @java.lang.Override
    public boolean hasIntValue() {
      return instance.hasIntValue();
    }
    /**
     * <code>int64 int_value = 2;</code>
     * @return The intValue.
     */
    @java.lang.Override
    public long getIntValue() {
      return instance.getIntValue();
    }
    /**
     * <code>int64 int_value = 2;</code>
     * @param value The intValue to set.
     * @return This builder for chaining.
     */
    public Builder setIntValue(long value) {
      copyOnWrite();
      instance.setIntValue(value);
      return this;
    }
    /**
     * <code>int64 int_value = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearIntValue() {
      copyOnWrite();
      instance.clearIntValue();
      return this;
    }

    /**
     * <code>float float_value = 3;</code>
     * @return Whether the floatValue field is set.
     */
    @java.lang.Override
    public boolean hasFloatValue() {
      return instance.hasFloatValue();
    }
    /**
     * <code>float float_value = 3;</code>
     * @return The floatValue.
     */
    @java.lang.Override
    public float getFloatValue() {
      return instance.getFloatValue();
    }
    /**
     * <code>float float_value = 3;</code>
     * @param value The floatValue to set.
     * @return This builder for chaining.
     */
    public Builder setFloatValue(float value) {
      copyOnWrite();
      instance.setFloatValue(value);
      return this;
    }
    /**
     * <code>float float_value = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearFloatValue() {
      copyOnWrite();
      instance.clearFloatValue();
      return this;
    }

    /**
     * <code>double double_value = 4;</code>
     * @return Whether the doubleValue field is set.
     */
    @java.lang.Override
    public boolean hasDoubleValue() {
      return instance.hasDoubleValue();
    }
    /**
     * <code>double double_value = 4;</code>
     * @return The doubleValue.
     */
    @java.lang.Override
    public double getDoubleValue() {
      return instance.getDoubleValue();
    }
    /**
     * <code>double double_value = 4;</code>
     * @param value The doubleValue to set.
     * @return This builder for chaining.
     */
    public Builder setDoubleValue(double value) {
      copyOnWrite();
      instance.setDoubleValue(value);
      return this;
    }
    /**
     * <code>double double_value = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDoubleValue() {
      copyOnWrite();
      instance.clearDoubleValue();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.firebase.analytics.v1.AnalyticsValue)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.firebase.analytics.v1.AnalyticsValue();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "paramValue_",
            "paramValueCase_",
          };
          java.lang.String info =
              "\u0000\u0004\u0001\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u023b\u0000\u0002" +
              "5\u0000\u00034\u0000\u00043\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.firebase.analytics.v1.AnalyticsValue> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.firebase.analytics.v1.AnalyticsValue.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.firebase.analytics.v1.AnalyticsValue>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.firebase.analytics.v1.AnalyticsValue)
  private static final google.events.firebase.analytics.v1.AnalyticsValue DEFAULT_INSTANCE;
  static {
    AnalyticsValue defaultInstance = new AnalyticsValue();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      AnalyticsValue.class, defaultInstance);
  }

  public static google.events.firebase.analytics.v1.AnalyticsValue getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<AnalyticsValue> PARSER;

  public static com.google.protobuf.Parser<AnalyticsValue> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

