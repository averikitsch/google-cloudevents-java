// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/analytics/v1/data.proto

package google.events.firebase.analytics.v1;

/**
 * <pre>
 * Message containing information regarding the bundle in which these
 * events were uploaded.
 * </pre>
 *
 * Protobuf type {@code google.events.firebase.analytics.v1.ExportBundleInfo}
 */
public  final class ExportBundleInfo extends
    com.google.protobuf.GeneratedMessageLite<
        ExportBundleInfo, ExportBundleInfo.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.firebase.analytics.v1.ExportBundleInfo)
    ExportBundleInfoOrBuilder {
  private ExportBundleInfo() {
  }
  public static final int BUNDLE_SEQUENCE_ID_FIELD_NUMBER = 1;
  private int bundleSequenceId_;
  /**
   * <pre>
   * Monotonically increasing index for each bundle set by SDK.
   * </pre>
   *
   * <code>int32 bundle_sequence_id = 1;</code>
   * @return The bundleSequenceId.
   */
  @java.lang.Override
  public int getBundleSequenceId() {
    return bundleSequenceId_;
  }
  /**
   * <pre>
   * Monotonically increasing index for each bundle set by SDK.
   * </pre>
   *
   * <code>int32 bundle_sequence_id = 1;</code>
   * @param value The bundleSequenceId to set.
   */
  private void setBundleSequenceId(int value) {
    
    bundleSequenceId_ = value;
  }
  /**
   * <pre>
   * Monotonically increasing index for each bundle set by SDK.
   * </pre>
   *
   * <code>int32 bundle_sequence_id = 1;</code>
   */
  private void clearBundleSequenceId() {
    
    bundleSequenceId_ = 0;
  }

  public static final int SERVER_TIMESTAMP_OFFSET_MICROS_FIELD_NUMBER = 2;
  private long serverTimestampOffsetMicros_;
  /**
   * <pre>
   * Timestamp offset between collection time and upload time.
   * </pre>
   *
   * <code>int64 server_timestamp_offset_micros = 2;</code>
   * @return The serverTimestampOffsetMicros.
   */
  @java.lang.Override
  public long getServerTimestampOffsetMicros() {
    return serverTimestampOffsetMicros_;
  }
  /**
   * <pre>
   * Timestamp offset between collection time and upload time.
   * </pre>
   *
   * <code>int64 server_timestamp_offset_micros = 2;</code>
   * @param value The serverTimestampOffsetMicros to set.
   */
  private void setServerTimestampOffsetMicros(long value) {
    
    serverTimestampOffsetMicros_ = value;
  }
  /**
   * <pre>
   * Timestamp offset between collection time and upload time.
   * </pre>
   *
   * <code>int64 server_timestamp_offset_micros = 2;</code>
   */
  private void clearServerTimestampOffsetMicros() {
    
    serverTimestampOffsetMicros_ = 0L;
  }

  public static google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.ExportBundleInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.analytics.v1.ExportBundleInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.analytics.v1.ExportBundleInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.firebase.analytics.v1.ExportBundleInfo prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Message containing information regarding the bundle in which these
   * events were uploaded.
   * </pre>
   *
   * Protobuf type {@code google.events.firebase.analytics.v1.ExportBundleInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.firebase.analytics.v1.ExportBundleInfo, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.firebase.analytics.v1.ExportBundleInfo)
      google.events.firebase.analytics.v1.ExportBundleInfoOrBuilder {
    // Construct using google.events.firebase.analytics.v1.ExportBundleInfo.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Monotonically increasing index for each bundle set by SDK.
     * </pre>
     *
     * <code>int32 bundle_sequence_id = 1;</code>
     * @return The bundleSequenceId.
     */
    @java.lang.Override
    public int getBundleSequenceId() {
      return instance.getBundleSequenceId();
    }
    /**
     * <pre>
     * Monotonically increasing index for each bundle set by SDK.
     * </pre>
     *
     * <code>int32 bundle_sequence_id = 1;</code>
     * @param value The bundleSequenceId to set.
     * @return This builder for chaining.
     */
    public Builder setBundleSequenceId(int value) {
      copyOnWrite();
      instance.setBundleSequenceId(value);
      return this;
    }
    /**
     * <pre>
     * Monotonically increasing index for each bundle set by SDK.
     * </pre>
     *
     * <code>int32 bundle_sequence_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearBundleSequenceId() {
      copyOnWrite();
      instance.clearBundleSequenceId();
      return this;
    }

    /**
     * <pre>
     * Timestamp offset between collection time and upload time.
     * </pre>
     *
     * <code>int64 server_timestamp_offset_micros = 2;</code>
     * @return The serverTimestampOffsetMicros.
     */
    @java.lang.Override
    public long getServerTimestampOffsetMicros() {
      return instance.getServerTimestampOffsetMicros();
    }
    /**
     * <pre>
     * Timestamp offset between collection time and upload time.
     * </pre>
     *
     * <code>int64 server_timestamp_offset_micros = 2;</code>
     * @param value The serverTimestampOffsetMicros to set.
     * @return This builder for chaining.
     */
    public Builder setServerTimestampOffsetMicros(long value) {
      copyOnWrite();
      instance.setServerTimestampOffsetMicros(value);
      return this;
    }
    /**
     * <pre>
     * Timestamp offset between collection time and upload time.
     * </pre>
     *
     * <code>int64 server_timestamp_offset_micros = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearServerTimestampOffsetMicros() {
      copyOnWrite();
      instance.clearServerTimestampOffsetMicros();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.firebase.analytics.v1.ExportBundleInfo)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.firebase.analytics.v1.ExportBundleInfo();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bundleSequenceId_",
            "serverTimestampOffsetMicros_",
          };
          java.lang.String info =
              "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0004\u0002\u0002" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.firebase.analytics.v1.ExportBundleInfo> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.firebase.analytics.v1.ExportBundleInfo.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.firebase.analytics.v1.ExportBundleInfo>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.firebase.analytics.v1.ExportBundleInfo)
  private static final google.events.firebase.analytics.v1.ExportBundleInfo DEFAULT_INSTANCE;
  static {
    ExportBundleInfo defaultInstance = new ExportBundleInfo();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      ExportBundleInfo.class, defaultInstance);
  }

  public static google.events.firebase.analytics.v1.ExportBundleInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ExportBundleInfo> PARSER;

  public static com.google.protobuf.Parser<ExportBundleInfo> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

