// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/analytics/v1/data.proto

package google.events.firebase.analytics.v1;

/**
 * <pre>
 * The data within Firebase Analytics log events.
 * </pre>
 *
 * Protobuf type {@code google.events.firebase.analytics.v1.AnalyticsLogData}
 */
public  final class AnalyticsLogData extends
    com.google.protobuf.GeneratedMessageLite<
        AnalyticsLogData, AnalyticsLogData.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.firebase.analytics.v1.AnalyticsLogData)
    AnalyticsLogDataOrBuilder {
  private AnalyticsLogData() {
    eventDim_ = emptyProtobufList();
  }
  public static final int USER_DIM_FIELD_NUMBER = 1;
  private google.events.firebase.analytics.v1.UserDimensions userDim_;
  /**
   * <pre>
   * User related dimensions.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
   */
  @java.lang.Override
  public boolean hasUserDim() {
    return userDim_ != null;
  }
  /**
   * <pre>
   * User related dimensions.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
   */
  @java.lang.Override
  public google.events.firebase.analytics.v1.UserDimensions getUserDim() {
    return userDim_ == null ? google.events.firebase.analytics.v1.UserDimensions.getDefaultInstance() : userDim_;
  }
  /**
   * <pre>
   * User related dimensions.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
   */
  private void setUserDim(google.events.firebase.analytics.v1.UserDimensions value) {
    value.getClass();
  userDim_ = value;
    
    }
  /**
   * <pre>
   * User related dimensions.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeUserDim(google.events.firebase.analytics.v1.UserDimensions value) {
    value.getClass();
  if (userDim_ != null &&
        userDim_ != google.events.firebase.analytics.v1.UserDimensions.getDefaultInstance()) {
      userDim_ =
        google.events.firebase.analytics.v1.UserDimensions.newBuilder(userDim_).mergeFrom(value).buildPartial();
    } else {
      userDim_ = value;
    }
    
  }
  /**
   * <pre>
   * User related dimensions.
   * </pre>
   *
   * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
   */
  private void clearUserDim() {  userDim_ = null;
    
  }

  public static final int EVENT_DIM_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.ProtobufList<google.events.firebase.analytics.v1.EventDimensions> eventDim_;
  /**
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  @java.lang.Override
  public java.util.List<google.events.firebase.analytics.v1.EventDimensions> getEventDimList() {
    return eventDim_;
  }
  /**
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  public java.util.List<? extends google.events.firebase.analytics.v1.EventDimensionsOrBuilder> 
      getEventDimOrBuilderList() {
    return eventDim_;
  }
  /**
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  @java.lang.Override
  public int getEventDimCount() {
    return eventDim_.size();
  }
  /**
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  @java.lang.Override
  public google.events.firebase.analytics.v1.EventDimensions getEventDim(int index) {
    return eventDim_.get(index);
  }
  /**
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  public google.events.firebase.analytics.v1.EventDimensionsOrBuilder getEventDimOrBuilder(
      int index) {
    return eventDim_.get(index);
  }
  private void ensureEventDimIsMutable() {
    com.google.protobuf.Internal.ProtobufList<google.events.firebase.analytics.v1.EventDimensions> tmp = eventDim_;
    if (!tmp.isModifiable()) {
      eventDim_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  private void setEventDim(
      int index, google.events.firebase.analytics.v1.EventDimensions value) {
    value.getClass();
  ensureEventDimIsMutable();
    eventDim_.set(index, value);
  }
  /**
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  private void addEventDim(google.events.firebase.analytics.v1.EventDimensions value) {
    value.getClass();
  ensureEventDimIsMutable();
    eventDim_.add(value);
  }
  /**
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  private void addEventDim(
      int index, google.events.firebase.analytics.v1.EventDimensions value) {
    value.getClass();
  ensureEventDimIsMutable();
    eventDim_.add(index, value);
  }
  /**
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  private void addAllEventDim(
      java.lang.Iterable<? extends google.events.firebase.analytics.v1.EventDimensions> values) {
    ensureEventDimIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, eventDim_);
  }
  /**
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  private void clearEventDim() {
    eventDim_ = emptyProtobufList();
  }
  /**
   * <pre>
   * A repeated record of event related dimensions.
   * </pre>
   *
   * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
   */
  private void removeEventDim(int index) {
    ensureEventDimIsMutable();
    eventDim_.remove(index);
  }

  public static google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.AnalyticsLogData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.analytics.v1.AnalyticsLogData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.analytics.v1.AnalyticsLogData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.firebase.analytics.v1.AnalyticsLogData prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * The data within Firebase Analytics log events.
   * </pre>
   *
   * Protobuf type {@code google.events.firebase.analytics.v1.AnalyticsLogData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.firebase.analytics.v1.AnalyticsLogData, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.firebase.analytics.v1.AnalyticsLogData)
      google.events.firebase.analytics.v1.AnalyticsLogDataOrBuilder {
    // Construct using google.events.firebase.analytics.v1.AnalyticsLogData.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     */
    @java.lang.Override
    public boolean hasUserDim() {
      return instance.hasUserDim();
    }
    /**
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     */
    @java.lang.Override
    public google.events.firebase.analytics.v1.UserDimensions getUserDim() {
      return instance.getUserDim();
    }
    /**
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     */
    public Builder setUserDim(google.events.firebase.analytics.v1.UserDimensions value) {
      copyOnWrite();
      instance.setUserDim(value);
      return this;
      }
    /**
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     */
    public Builder setUserDim(
        google.events.firebase.analytics.v1.UserDimensions.Builder builderForValue) {
      copyOnWrite();
      instance.setUserDim(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     */
    public Builder mergeUserDim(google.events.firebase.analytics.v1.UserDimensions value) {
      copyOnWrite();
      instance.mergeUserDim(value);
      return this;
    }
    /**
     * <pre>
     * User related dimensions.
     * </pre>
     *
     * <code>.google.events.firebase.analytics.v1.UserDimensions user_dim = 1;</code>
     */
    public Builder clearUserDim() {  copyOnWrite();
      instance.clearUserDim();
      return this;
    }

    /**
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    @java.lang.Override
    public java.util.List<google.events.firebase.analytics.v1.EventDimensions> getEventDimList() {
      return java.util.Collections.unmodifiableList(
          instance.getEventDimList());
    }
    /**
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    @java.lang.Override
    public int getEventDimCount() {
      return instance.getEventDimCount();
    }/**
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    @java.lang.Override
    public google.events.firebase.analytics.v1.EventDimensions getEventDim(int index) {
      return instance.getEventDim(index);
    }
    /**
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder setEventDim(
        int index, google.events.firebase.analytics.v1.EventDimensions value) {
      copyOnWrite();
      instance.setEventDim(index, value);
      return this;
    }
    /**
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder setEventDim(
        int index, google.events.firebase.analytics.v1.EventDimensions.Builder builderForValue) {
      copyOnWrite();
      instance.setEventDim(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder addEventDim(google.events.firebase.analytics.v1.EventDimensions value) {
      copyOnWrite();
      instance.addEventDim(value);
      return this;
    }
    /**
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder addEventDim(
        int index, google.events.firebase.analytics.v1.EventDimensions value) {
      copyOnWrite();
      instance.addEventDim(index, value);
      return this;
    }
    /**
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder addEventDim(
        google.events.firebase.analytics.v1.EventDimensions.Builder builderForValue) {
      copyOnWrite();
      instance.addEventDim(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder addEventDim(
        int index, google.events.firebase.analytics.v1.EventDimensions.Builder builderForValue) {
      copyOnWrite();
      instance.addEventDim(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder addAllEventDim(
        java.lang.Iterable<? extends google.events.firebase.analytics.v1.EventDimensions> values) {
      copyOnWrite();
      instance.addAllEventDim(values);
      return this;
    }
    /**
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder clearEventDim() {
      copyOnWrite();
      instance.clearEventDim();
      return this;
    }
    /**
     * <pre>
     * A repeated record of event related dimensions.
     * </pre>
     *
     * <code>repeated .google.events.firebase.analytics.v1.EventDimensions event_dim = 2;</code>
     */
    public Builder removeEventDim(int index) {
      copyOnWrite();
      instance.removeEventDim(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.firebase.analytics.v1.AnalyticsLogData)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.firebase.analytics.v1.AnalyticsLogData();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "userDim_",
            "eventDim_",
            google.events.firebase.analytics.v1.EventDimensions.class,
          };
          java.lang.String info =
              "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0001\u0000\u0001\t\u0002\u001b" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.firebase.analytics.v1.AnalyticsLogData> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.firebase.analytics.v1.AnalyticsLogData.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.firebase.analytics.v1.AnalyticsLogData>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.firebase.analytics.v1.AnalyticsLogData)
  private static final google.events.firebase.analytics.v1.AnalyticsLogData DEFAULT_INSTANCE;
  static {
    AnalyticsLogData defaultInstance = new AnalyticsLogData();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      AnalyticsLogData.class, defaultInstance);
  }

  public static google.events.firebase.analytics.v1.AnalyticsLogData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<AnalyticsLogData> PARSER;

  public static com.google.protobuf.Parser<AnalyticsLogData> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

