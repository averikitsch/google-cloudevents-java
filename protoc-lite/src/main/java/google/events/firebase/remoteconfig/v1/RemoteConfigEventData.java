// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/remoteconfig/v1/data.proto

package google.events.firebase.remoteconfig.v1;

/**
 * <pre>
 * The data within all Firebase Remote Config events.
 * </pre>
 *
 * Protobuf type {@code google.events.firebase.remoteconfig.v1.RemoteConfigEventData}
 */
public  final class RemoteConfigEventData extends
    com.google.protobuf.GeneratedMessageLite<
        RemoteConfigEventData, RemoteConfigEventData.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.firebase.remoteconfig.v1.RemoteConfigEventData)
    RemoteConfigEventDataOrBuilder {
  private RemoteConfigEventData() {
    description_ = "";
  }
  public static final int VERSION_NUMBER_FIELD_NUMBER = 1;
  private long versionNumber_;
  /**
   * <pre>
   * The version number of the version's corresponding Remote Config template.
   * </pre>
   *
   * <code>int64 version_number = 1;</code>
   * @return The versionNumber.
   */
  @java.lang.Override
  public long getVersionNumber() {
    return versionNumber_;
  }
  /**
   * <pre>
   * The version number of the version's corresponding Remote Config template.
   * </pre>
   *
   * <code>int64 version_number = 1;</code>
   * @param value The versionNumber to set.
   */
  private void setVersionNumber(long value) {
    
    versionNumber_ = value;
  }
  /**
   * <pre>
   * The version number of the version's corresponding Remote Config template.
   * </pre>
   *
   * <code>int64 version_number = 1;</code>
   */
  private void clearVersionNumber() {
    
    versionNumber_ = 0L;
  }

  public static final int UPDATE_TIME_FIELD_NUMBER = 2;
  private com.google.protobuf.Timestamp updateTime_;
  /**
   * <pre>
   * When the Remote Config template was written to the Remote Config server.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 2;</code>
   */
  @java.lang.Override
  public boolean hasUpdateTime() {
    return updateTime_ != null;
  }
  /**
   * <pre>
   * When the Remote Config template was written to the Remote Config server.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getUpdateTime() {
    return updateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : updateTime_;
  }
  /**
   * <pre>
   * When the Remote Config template was written to the Remote Config server.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 2;</code>
   */
  private void setUpdateTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  updateTime_ = value;
    
    }
  /**
   * <pre>
   * When the Remote Config template was written to the Remote Config server.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeUpdateTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (updateTime_ != null &&
        updateTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      updateTime_ =
        com.google.protobuf.Timestamp.newBuilder(updateTime_).mergeFrom(value).buildPartial();
    } else {
      updateTime_ = value;
    }
    
  }
  /**
   * <pre>
   * When the Remote Config template was written to the Remote Config server.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 2;</code>
   */
  private void clearUpdateTime() {  updateTime_ = null;
    
  }

  public static final int UPDATE_USER_FIELD_NUMBER = 3;
  private google.events.firebase.remoteconfig.v1.RemoteConfigUser updateUser_;
  /**
   * <pre>
   *  Aggregation of all metadata fields about the account that performed the
   *  update.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
   */
  @java.lang.Override
  public boolean hasUpdateUser() {
    return updateUser_ != null;
  }
  /**
   * <pre>
   *  Aggregation of all metadata fields about the account that performed the
   *  update.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
   */
  @java.lang.Override
  public google.events.firebase.remoteconfig.v1.RemoteConfigUser getUpdateUser() {
    return updateUser_ == null ? google.events.firebase.remoteconfig.v1.RemoteConfigUser.getDefaultInstance() : updateUser_;
  }
  /**
   * <pre>
   *  Aggregation of all metadata fields about the account that performed the
   *  update.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
   */
  private void setUpdateUser(google.events.firebase.remoteconfig.v1.RemoteConfigUser value) {
    value.getClass();
  updateUser_ = value;
    
    }
  /**
   * <pre>
   *  Aggregation of all metadata fields about the account that performed the
   *  update.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeUpdateUser(google.events.firebase.remoteconfig.v1.RemoteConfigUser value) {
    value.getClass();
  if (updateUser_ != null &&
        updateUser_ != google.events.firebase.remoteconfig.v1.RemoteConfigUser.getDefaultInstance()) {
      updateUser_ =
        google.events.firebase.remoteconfig.v1.RemoteConfigUser.newBuilder(updateUser_).mergeFrom(value).buildPartial();
    } else {
      updateUser_ = value;
    }
    
  }
  /**
   * <pre>
   *  Aggregation of all metadata fields about the account that performed the
   *  update.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
   */
  private void clearUpdateUser() {  updateUser_ = null;
    
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 4;
  private java.lang.String description_;
  /**
   * <pre>
   * The user-provided description of the corresponding Remote Config template.
   * </pre>
   *
   * <code>string description = 4;</code>
   * @return The description.
   */
  @java.lang.Override
  public java.lang.String getDescription() {
    return description_;
  }
  /**
   * <pre>
   * The user-provided description of the corresponding Remote Config template.
   * </pre>
   *
   * <code>string description = 4;</code>
   * @return The bytes for description.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDescriptionBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(description_);
  }
  /**
   * <pre>
   * The user-provided description of the corresponding Remote Config template.
   * </pre>
   *
   * <code>string description = 4;</code>
   * @param value The description to set.
   */
  private void setDescription(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    description_ = value;
  }
  /**
   * <pre>
   * The user-provided description of the corresponding Remote Config template.
   * </pre>
   *
   * <code>string description = 4;</code>
   */
  private void clearDescription() {
    
    description_ = getDefaultInstance().getDescription();
  }
  /**
   * <pre>
   * The user-provided description of the corresponding Remote Config template.
   * </pre>
   *
   * <code>string description = 4;</code>
   * @param value The bytes for description to set.
   */
  private void setDescriptionBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    description_ = value.toStringUtf8();
    
  }

  public static final int UPDATE_ORIGIN_FIELD_NUMBER = 5;
  private int updateOrigin_;
  /**
   * <pre>
   * Where the update action originated.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
   * @return The enum numeric value on the wire for updateOrigin.
   */
  @java.lang.Override
  public int getUpdateOriginValue() {
    return updateOrigin_;
  }
  /**
   * <pre>
   * Where the update action originated.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
   * @return The updateOrigin.
   */
  @java.lang.Override
  public google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin getUpdateOrigin() {
    google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin result = google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin.forNumber(updateOrigin_);
    return result == null ? google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Where the update action originated.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
   * @param value The enum numeric value on the wire for updateOrigin to set.
   */
  private void setUpdateOriginValue(int value) {
      updateOrigin_ = value;
  }
  /**
   * <pre>
   * Where the update action originated.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
   * @param value The updateOrigin to set.
   */
  private void setUpdateOrigin(google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin value) {
    updateOrigin_ = value.getNumber();
    
  }
  /**
   * <pre>
   * Where the update action originated.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
   */
  private void clearUpdateOrigin() {
    
    updateOrigin_ = 0;
  }

  public static final int UPDATE_TYPE_FIELD_NUMBER = 6;
  private int updateType_;
  /**
   * <pre>
   * What type of update was made.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
   * @return The enum numeric value on the wire for updateType.
   */
  @java.lang.Override
  public int getUpdateTypeValue() {
    return updateType_;
  }
  /**
   * <pre>
   * What type of update was made.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
   * @return The updateType.
   */
  @java.lang.Override
  public google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType getUpdateType() {
    google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType result = google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType.forNumber(updateType_);
    return result == null ? google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * What type of update was made.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
   * @param value The enum numeric value on the wire for updateType to set.
   */
  private void setUpdateTypeValue(int value) {
      updateType_ = value;
  }
  /**
   * <pre>
   * What type of update was made.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
   * @param value The updateType to set.
   */
  private void setUpdateType(google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType value) {
    updateType_ = value.getNumber();
    
  }
  /**
   * <pre>
   * What type of update was made.
   * </pre>
   *
   * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
   */
  private void clearUpdateType() {
    
    updateType_ = 0;
  }

  public static final int ROLLBACK_SOURCE_FIELD_NUMBER = 7;
  private long rollbackSource_;
  /**
   * <pre>
   * Only present if this version is the result of a rollback, and will be the
   * version number of the Remote Config template that was rolled-back to.
   * </pre>
   *
   * <code>int64 rollback_source = 7;</code>
   * @return The rollbackSource.
   */
  @java.lang.Override
  public long getRollbackSource() {
    return rollbackSource_;
  }
  /**
   * <pre>
   * Only present if this version is the result of a rollback, and will be the
   * version number of the Remote Config template that was rolled-back to.
   * </pre>
   *
   * <code>int64 rollback_source = 7;</code>
   * @param value The rollbackSource to set.
   */
  private void setRollbackSource(long value) {
    
    rollbackSource_ = value;
  }
  /**
   * <pre>
   * Only present if this version is the result of a rollback, and will be the
   * version number of the Remote Config template that was rolled-back to.
   * </pre>
   *
   * <code>int64 rollback_source = 7;</code>
   */
  private void clearRollbackSource() {
    
    rollbackSource_ = 0L;
  }

  public static google.events.firebase.remoteconfig.v1.RemoteConfigEventData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.remoteconfig.v1.RemoteConfigEventData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.remoteconfig.v1.RemoteConfigEventData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.remoteconfig.v1.RemoteConfigEventData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.remoteconfig.v1.RemoteConfigEventData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.remoteconfig.v1.RemoteConfigEventData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.remoteconfig.v1.RemoteConfigEventData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.remoteconfig.v1.RemoteConfigEventData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.remoteconfig.v1.RemoteConfigEventData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.remoteconfig.v1.RemoteConfigEventData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.remoteconfig.v1.RemoteConfigEventData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.remoteconfig.v1.RemoteConfigEventData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.firebase.remoteconfig.v1.RemoteConfigEventData prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * The data within all Firebase Remote Config events.
   * </pre>
   *
   * Protobuf type {@code google.events.firebase.remoteconfig.v1.RemoteConfigEventData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.firebase.remoteconfig.v1.RemoteConfigEventData, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.firebase.remoteconfig.v1.RemoteConfigEventData)
      google.events.firebase.remoteconfig.v1.RemoteConfigEventDataOrBuilder {
    // Construct using google.events.firebase.remoteconfig.v1.RemoteConfigEventData.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The version number of the version's corresponding Remote Config template.
     * </pre>
     *
     * <code>int64 version_number = 1;</code>
     * @return The versionNumber.
     */
    @java.lang.Override
    public long getVersionNumber() {
      return instance.getVersionNumber();
    }
    /**
     * <pre>
     * The version number of the version's corresponding Remote Config template.
     * </pre>
     *
     * <code>int64 version_number = 1;</code>
     * @param value The versionNumber to set.
     * @return This builder for chaining.
     */
    public Builder setVersionNumber(long value) {
      copyOnWrite();
      instance.setVersionNumber(value);
      return this;
    }
    /**
     * <pre>
     * The version number of the version's corresponding Remote Config template.
     * </pre>
     *
     * <code>int64 version_number = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearVersionNumber() {
      copyOnWrite();
      instance.clearVersionNumber();
      return this;
    }

    /**
     * <pre>
     * When the Remote Config template was written to the Remote Config server.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 2;</code>
     */
    @java.lang.Override
    public boolean hasUpdateTime() {
      return instance.hasUpdateTime();
    }
    /**
     * <pre>
     * When the Remote Config template was written to the Remote Config server.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getUpdateTime() {
      return instance.getUpdateTime();
    }
    /**
     * <pre>
     * When the Remote Config template was written to the Remote Config server.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 2;</code>
     */
    public Builder setUpdateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setUpdateTime(value);
      return this;
      }
    /**
     * <pre>
     * When the Remote Config template was written to the Remote Config server.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 2;</code>
     */
    public Builder setUpdateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setUpdateTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * When the Remote Config template was written to the Remote Config server.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 2;</code>
     */
    public Builder mergeUpdateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeUpdateTime(value);
      return this;
    }
    /**
     * <pre>
     * When the Remote Config template was written to the Remote Config server.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp update_time = 2;</code>
     */
    public Builder clearUpdateTime() {  copyOnWrite();
      instance.clearUpdateTime();
      return this;
    }

    /**
     * <pre>
     *  Aggregation of all metadata fields about the account that performed the
     *  update.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
     */
    @java.lang.Override
    public boolean hasUpdateUser() {
      return instance.hasUpdateUser();
    }
    /**
     * <pre>
     *  Aggregation of all metadata fields about the account that performed the
     *  update.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
     */
    @java.lang.Override
    public google.events.firebase.remoteconfig.v1.RemoteConfigUser getUpdateUser() {
      return instance.getUpdateUser();
    }
    /**
     * <pre>
     *  Aggregation of all metadata fields about the account that performed the
     *  update.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
     */
    public Builder setUpdateUser(google.events.firebase.remoteconfig.v1.RemoteConfigUser value) {
      copyOnWrite();
      instance.setUpdateUser(value);
      return this;
      }
    /**
     * <pre>
     *  Aggregation of all metadata fields about the account that performed the
     *  update.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
     */
    public Builder setUpdateUser(
        google.events.firebase.remoteconfig.v1.RemoteConfigUser.Builder builderForValue) {
      copyOnWrite();
      instance.setUpdateUser(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     *  Aggregation of all metadata fields about the account that performed the
     *  update.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
     */
    public Builder mergeUpdateUser(google.events.firebase.remoteconfig.v1.RemoteConfigUser value) {
      copyOnWrite();
      instance.mergeUpdateUser(value);
      return this;
    }
    /**
     * <pre>
     *  Aggregation of all metadata fields about the account that performed the
     *  update.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUser update_user = 3;</code>
     */
    public Builder clearUpdateUser() {  copyOnWrite();
      instance.clearUpdateUser();
      return this;
    }

    /**
     * <pre>
     * The user-provided description of the corresponding Remote Config template.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      return instance.getDescription();
    }
    /**
     * <pre>
     * The user-provided description of the corresponding Remote Config template.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      return instance.getDescriptionBytes();
    }
    /**
     * <pre>
     * The user-provided description of the corresponding Remote Config template.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @param value The description to set.
     * @return This builder for chaining.
     */
    public Builder setDescription(
        java.lang.String value) {
      copyOnWrite();
      instance.setDescription(value);
      return this;
    }
    /**
     * <pre>
     * The user-provided description of the corresponding Remote Config template.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearDescription() {
      copyOnWrite();
      instance.clearDescription();
      return this;
    }
    /**
     * <pre>
     * The user-provided description of the corresponding Remote Config template.
     * </pre>
     *
     * <code>string description = 4;</code>
     * @param value The bytes for description to set.
     * @return This builder for chaining.
     */
    public Builder setDescriptionBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDescriptionBytes(value);
      return this;
    }

    /**
     * <pre>
     * Where the update action originated.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
     * @return The enum numeric value on the wire for updateOrigin.
     */
    @java.lang.Override
    public int getUpdateOriginValue() {
      return instance.getUpdateOriginValue();
    }
    /**
     * <pre>
     * Where the update action originated.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
     * @param value The updateOrigin to set.
     * @return This builder for chaining.
     */
    public Builder setUpdateOriginValue(int value) {
      copyOnWrite();
      instance.setUpdateOriginValue(value);
      return this;
    }
    /**
     * <pre>
     * Where the update action originated.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
     * @return The updateOrigin.
     */
    @java.lang.Override
    public google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin getUpdateOrigin() {
      return instance.getUpdateOrigin();
    }
    /**
     * <pre>
     * Where the update action originated.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
     * @param value The enum numeric value on the wire for updateOrigin to set.
     * @return This builder for chaining.
     */
    public Builder setUpdateOrigin(google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin value) {
      copyOnWrite();
      instance.setUpdateOrigin(value);
      return this;
    }
    /**
     * <pre>
     * Where the update action originated.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateOrigin update_origin = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearUpdateOrigin() {
      copyOnWrite();
      instance.clearUpdateOrigin();
      return this;
    }

    /**
     * <pre>
     * What type of update was made.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
     * @return The enum numeric value on the wire for updateType.
     */
    @java.lang.Override
    public int getUpdateTypeValue() {
      return instance.getUpdateTypeValue();
    }
    /**
     * <pre>
     * What type of update was made.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
     * @param value The updateType to set.
     * @return This builder for chaining.
     */
    public Builder setUpdateTypeValue(int value) {
      copyOnWrite();
      instance.setUpdateTypeValue(value);
      return this;
    }
    /**
     * <pre>
     * What type of update was made.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
     * @return The updateType.
     */
    @java.lang.Override
    public google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType getUpdateType() {
      return instance.getUpdateType();
    }
    /**
     * <pre>
     * What type of update was made.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
     * @param value The enum numeric value on the wire for updateType to set.
     * @return This builder for chaining.
     */
    public Builder setUpdateType(google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType value) {
      copyOnWrite();
      instance.setUpdateType(value);
      return this;
    }
    /**
     * <pre>
     * What type of update was made.
     * </pre>
     *
     * <code>.google.events.firebase.remoteconfig.v1.RemoteConfigUpdateType update_type = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearUpdateType() {
      copyOnWrite();
      instance.clearUpdateType();
      return this;
    }

    /**
     * <pre>
     * Only present if this version is the result of a rollback, and will be the
     * version number of the Remote Config template that was rolled-back to.
     * </pre>
     *
     * <code>int64 rollback_source = 7;</code>
     * @return The rollbackSource.
     */
    @java.lang.Override
    public long getRollbackSource() {
      return instance.getRollbackSource();
    }
    /**
     * <pre>
     * Only present if this version is the result of a rollback, and will be the
     * version number of the Remote Config template that was rolled-back to.
     * </pre>
     *
     * <code>int64 rollback_source = 7;</code>
     * @param value The rollbackSource to set.
     * @return This builder for chaining.
     */
    public Builder setRollbackSource(long value) {
      copyOnWrite();
      instance.setRollbackSource(value);
      return this;
    }
    /**
     * <pre>
     * Only present if this version is the result of a rollback, and will be the
     * version number of the Remote Config template that was rolled-back to.
     * </pre>
     *
     * <code>int64 rollback_source = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearRollbackSource() {
      copyOnWrite();
      instance.clearRollbackSource();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.firebase.remoteconfig.v1.RemoteConfigEventData)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.firebase.remoteconfig.v1.RemoteConfigEventData();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "versionNumber_",
            "updateTime_",
            "updateUser_",
            "description_",
            "updateOrigin_",
            "updateType_",
            "rollbackSource_",
          };
          java.lang.String info =
              "\u0000\u0007\u0000\u0000\u0001\u0007\u0007\u0000\u0000\u0000\u0001\u0002\u0002\t" +
              "\u0003\t\u0004\u0208\u0005\f\u0006\f\u0007\u0002";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.firebase.remoteconfig.v1.RemoteConfigEventData> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.firebase.remoteconfig.v1.RemoteConfigEventData.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.firebase.remoteconfig.v1.RemoteConfigEventData>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.firebase.remoteconfig.v1.RemoteConfigEventData)
  private static final google.events.firebase.remoteconfig.v1.RemoteConfigEventData DEFAULT_INSTANCE;
  static {
    RemoteConfigEventData defaultInstance = new RemoteConfigEventData();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      RemoteConfigEventData.class, defaultInstance);
  }

  public static google.events.firebase.remoteconfig.v1.RemoteConfigEventData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<RemoteConfigEventData> PARSER;

  public static com.google.protobuf.Parser<RemoteConfigEventData> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

