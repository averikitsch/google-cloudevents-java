// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/firebasealerts/v1/cloud_event_payload.proto

package google.events.firebase.firebasealerts.v1;

/**
 * Protobuf type {@code google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload}
 */
public  final class CrashlyticsStabilityDigestPayload extends
    com.google.protobuf.GeneratedMessageLite<
        CrashlyticsStabilityDigestPayload, CrashlyticsStabilityDigestPayload.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload)
    CrashlyticsStabilityDigestPayloadOrBuilder {
  private CrashlyticsStabilityDigestPayload() {
    trendingIssues_ = emptyProtobufList();
  }
  public interface TrendingIssueDetailsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
     * </pre>
     *
     * <code>string type = 1;</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
     * </pre>
     *
     * <code>string type = 1;</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * Basic information of the Crashlytics issue
     * </pre>
     *
     * <code>.google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue = 2;</code>
     * @return Whether the issue field is set.
     */
    boolean hasIssue();
    /**
     * <pre>
     * Basic information of the Crashlytics issue
     * </pre>
     *
     * <code>.google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue = 2;</code>
     * @return The issue.
     */
    google.events.firebase.firebasealerts.v1.CrashlyticsIssue getIssue();

    /**
     * <pre>
     * The number of crashes that occurred with the issue
     * </pre>
     *
     * <code>int64 event_count = 3;</code>
     * @return The eventCount.
     */
    long getEventCount();

    /**
     * <pre>
     * The number of distinct users that were affected by the issue
     * </pre>
     *
     * <code>int64 user_count = 4;</code>
     * @return The userCount.
     */
    long getUserCount();
  }
  /**
   * Protobuf type {@code google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails}
   */
  public  static final class TrendingIssueDetails extends
      com.google.protobuf.GeneratedMessageLite<
          TrendingIssueDetails, TrendingIssueDetails.Builder> implements
      // @@protoc_insertion_point(message_implements:google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails)
      TrendingIssueDetailsOrBuilder {
    private TrendingIssueDetails() {
      type_ = "";
    }
    public static final int TYPE_FIELD_NUMBER = 1;
    private java.lang.String type_;
    /**
     * <pre>
     * The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
     * </pre>
     *
     * <code>string type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      return type_;
    }
    /**
     * <pre>
     * The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
     * </pre>
     *
     * <code>string type = 1;</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(type_);
    }
    /**
     * <pre>
     * The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
     * </pre>
     *
     * <code>string type = 1;</code>
     * @param value The type to set.
     */
    private void setType(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  
      type_ = value;
    }
    /**
     * <pre>
     * The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
     * </pre>
     *
     * <code>string type = 1;</code>
     */
    private void clearType() {
      
      type_ = getDefaultInstance().getType();
    }
    /**
     * <pre>
     * The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
     * </pre>
     *
     * <code>string type = 1;</code>
     * @param value The bytes for type to set.
     */
    private void setTypeBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      type_ = value.toStringUtf8();
      
    }

    public static final int ISSUE_FIELD_NUMBER = 2;
    private google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue_;
    /**
     * <pre>
     * Basic information of the Crashlytics issue
     * </pre>
     *
     * <code>.google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue = 2;</code>
     */
    @java.lang.Override
    public boolean hasIssue() {
      return issue_ != null;
    }
    /**
     * <pre>
     * Basic information of the Crashlytics issue
     * </pre>
     *
     * <code>.google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue = 2;</code>
     */
    @java.lang.Override
    public google.events.firebase.firebasealerts.v1.CrashlyticsIssue getIssue() {
      return issue_ == null ? google.events.firebase.firebasealerts.v1.CrashlyticsIssue.getDefaultInstance() : issue_;
    }
    /**
     * <pre>
     * Basic information of the Crashlytics issue
     * </pre>
     *
     * <code>.google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue = 2;</code>
     */
    private void setIssue(google.events.firebase.firebasealerts.v1.CrashlyticsIssue value) {
      value.getClass();
  issue_ = value;
      
      }
    /**
     * <pre>
     * Basic information of the Crashlytics issue
     * </pre>
     *
     * <code>.google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeIssue(google.events.firebase.firebasealerts.v1.CrashlyticsIssue value) {
      value.getClass();
  if (issue_ != null &&
          issue_ != google.events.firebase.firebasealerts.v1.CrashlyticsIssue.getDefaultInstance()) {
        issue_ =
          google.events.firebase.firebasealerts.v1.CrashlyticsIssue.newBuilder(issue_).mergeFrom(value).buildPartial();
      } else {
        issue_ = value;
      }
      
    }
    /**
     * <pre>
     * Basic information of the Crashlytics issue
     * </pre>
     *
     * <code>.google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue = 2;</code>
     */
    private void clearIssue() {  issue_ = null;
      
    }

    public static final int EVENT_COUNT_FIELD_NUMBER = 3;
    private long eventCount_;
    /**
     * <pre>
     * The number of crashes that occurred with the issue
     * </pre>
     *
     * <code>int64 event_count = 3;</code>
     * @return The eventCount.
     */
    @java.lang.Override
    public long getEventCount() {
      return eventCount_;
    }
    /**
     * <pre>
     * The number of crashes that occurred with the issue
     * </pre>
     *
     * <code>int64 event_count = 3;</code>
     * @param value The eventCount to set.
     */
    private void setEventCount(long value) {
      
      eventCount_ = value;
    }
    /**
     * <pre>
     * The number of crashes that occurred with the issue
     * </pre>
     *
     * <code>int64 event_count = 3;</code>
     */
    private void clearEventCount() {
      
      eventCount_ = 0L;
    }

    public static final int USER_COUNT_FIELD_NUMBER = 4;
    private long userCount_;
    /**
     * <pre>
     * The number of distinct users that were affected by the issue
     * </pre>
     *
     * <code>int64 user_count = 4;</code>
     * @return The userCount.
     */
    @java.lang.Override
    public long getUserCount() {
      return userCount_;
    }
    /**
     * <pre>
     * The number of distinct users that were affected by the issue
     * </pre>
     *
     * <code>int64 user_count = 4;</code>
     * @param value The userCount to set.
     */
    private void setUserCount(long value) {
      
      userCount_ = value;
    }
    /**
     * <pre>
     * The number of distinct users that were affected by the issue
     * </pre>
     *
     * <code>int64 user_count = 4;</code>
     */
    private void clearUserCount() {
      
      userCount_ = 0L;
    }

    public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails, Builder> implements
        // @@protoc_insertion_point(builder_implements:google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails)
        google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetailsOrBuilder {
      // Construct using google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
       * </pre>
       *
       * <code>string type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public java.lang.String getType() {
        return instance.getType();
      }
      /**
       * <pre>
       * The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
       * </pre>
       *
       * <code>string type = 1;</code>
       * @return The bytes for type.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTypeBytes() {
        return instance.getTypeBytes();
      }
      /**
       * <pre>
       * The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
       * </pre>
       *
       * <code>string type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <pre>
       * The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
       * </pre>
       *
       * <code>string type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }
      /**
       * <pre>
       * The type of the Crashlytics issue, e.g. new fatal, new nonfatal, ANR
       * </pre>
       *
       * <code>string type = 1;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTypeBytes(value);
        return this;
      }

      /**
       * <pre>
       * Basic information of the Crashlytics issue
       * </pre>
       *
       * <code>.google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue = 2;</code>
       */
      @java.lang.Override
      public boolean hasIssue() {
        return instance.hasIssue();
      }
      /**
       * <pre>
       * Basic information of the Crashlytics issue
       * </pre>
       *
       * <code>.google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue = 2;</code>
       */
      @java.lang.Override
      public google.events.firebase.firebasealerts.v1.CrashlyticsIssue getIssue() {
        return instance.getIssue();
      }
      /**
       * <pre>
       * Basic information of the Crashlytics issue
       * </pre>
       *
       * <code>.google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue = 2;</code>
       */
      public Builder setIssue(google.events.firebase.firebasealerts.v1.CrashlyticsIssue value) {
        copyOnWrite();
        instance.setIssue(value);
        return this;
        }
      /**
       * <pre>
       * Basic information of the Crashlytics issue
       * </pre>
       *
       * <code>.google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue = 2;</code>
       */
      public Builder setIssue(
          google.events.firebase.firebasealerts.v1.CrashlyticsIssue.Builder builderForValue) {
        copyOnWrite();
        instance.setIssue(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * Basic information of the Crashlytics issue
       * </pre>
       *
       * <code>.google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue = 2;</code>
       */
      public Builder mergeIssue(google.events.firebase.firebasealerts.v1.CrashlyticsIssue value) {
        copyOnWrite();
        instance.mergeIssue(value);
        return this;
      }
      /**
       * <pre>
       * Basic information of the Crashlytics issue
       * </pre>
       *
       * <code>.google.events.firebase.firebasealerts.v1.CrashlyticsIssue issue = 2;</code>
       */
      public Builder clearIssue() {  copyOnWrite();
        instance.clearIssue();
        return this;
      }

      /**
       * <pre>
       * The number of crashes that occurred with the issue
       * </pre>
       *
       * <code>int64 event_count = 3;</code>
       * @return The eventCount.
       */
      @java.lang.Override
      public long getEventCount() {
        return instance.getEventCount();
      }
      /**
       * <pre>
       * The number of crashes that occurred with the issue
       * </pre>
       *
       * <code>int64 event_count = 3;</code>
       * @param value The eventCount to set.
       * @return This builder for chaining.
       */
      public Builder setEventCount(long value) {
        copyOnWrite();
        instance.setEventCount(value);
        return this;
      }
      /**
       * <pre>
       * The number of crashes that occurred with the issue
       * </pre>
       *
       * <code>int64 event_count = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventCount() {
        copyOnWrite();
        instance.clearEventCount();
        return this;
      }

      /**
       * <pre>
       * The number of distinct users that were affected by the issue
       * </pre>
       *
       * <code>int64 user_count = 4;</code>
       * @return The userCount.
       */
      @java.lang.Override
      public long getUserCount() {
        return instance.getUserCount();
      }
      /**
       * <pre>
       * The number of distinct users that were affected by the issue
       * </pre>
       *
       * <code>int64 user_count = 4;</code>
       * @param value The userCount to set.
       * @return This builder for chaining.
       */
      public Builder setUserCount(long value) {
        copyOnWrite();
        instance.setUserCount(value);
        return this;
      }
      /**
       * <pre>
       * The number of distinct users that were affected by the issue
       * </pre>
       *
       * <code>int64 user_count = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserCount() {
        copyOnWrite();
        instance.clearUserCount();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "type_",
              "issue_",
              "eventCount_",
              "userCount_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u0208\u0002\t" +
                "\u0003\u0002\u0004\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails> parser = PARSER;
          if (parser == null) {
            synchronized (google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails)
    private static final google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails DEFAULT_INSTANCE;
    static {
      TrendingIssueDetails defaultInstance = new TrendingIssueDetails();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TrendingIssueDetails.class, defaultInstance);
    }

    public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TrendingIssueDetails> PARSER;

    public static com.google.protobuf.Parser<TrendingIssueDetails> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public static final int DIGEST_DATE_FIELD_NUMBER = 5;
  private com.google.type.Date digestDate_;
  /**
   * <pre>
   * The date that the digest gets created, issues in the digest should
   * have the same date as the digest date
   * </pre>
   *
   * <code>.google.type.Date digest_date = 5;</code>
   */
  @java.lang.Override
  public boolean hasDigestDate() {
    return digestDate_ != null;
  }
  /**
   * <pre>
   * The date that the digest gets created, issues in the digest should
   * have the same date as the digest date
   * </pre>
   *
   * <code>.google.type.Date digest_date = 5;</code>
   */
  @java.lang.Override
  public com.google.type.Date getDigestDate() {
    return digestDate_ == null ? com.google.type.Date.getDefaultInstance() : digestDate_;
  }
  /**
   * <pre>
   * The date that the digest gets created, issues in the digest should
   * have the same date as the digest date
   * </pre>
   *
   * <code>.google.type.Date digest_date = 5;</code>
   */
  private void setDigestDate(com.google.type.Date value) {
    value.getClass();
  digestDate_ = value;
    
    }
  /**
   * <pre>
   * The date that the digest gets created, issues in the digest should
   * have the same date as the digest date
   * </pre>
   *
   * <code>.google.type.Date digest_date = 5;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeDigestDate(com.google.type.Date value) {
    value.getClass();
  if (digestDate_ != null &&
        digestDate_ != com.google.type.Date.getDefaultInstance()) {
      digestDate_ =
        com.google.type.Date.newBuilder(digestDate_).mergeFrom(value).buildPartial();
    } else {
      digestDate_ = value;
    }
    
  }
  /**
   * <pre>
   * The date that the digest gets created, issues in the digest should
   * have the same date as the digest date
   * </pre>
   *
   * <code>.google.type.Date digest_date = 5;</code>
   */
  private void clearDigestDate() {  digestDate_ = null;
    
  }

  public static final int TRENDING_ISSUES_FIELD_NUMBER = 6;
  private com.google.protobuf.Internal.ProtobufList<google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails> trendingIssues_;
  /**
   * <pre>
   * A stability digest contains several trending Crashlytics issues
   * </pre>
   *
   * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
   */
  @java.lang.Override
  public java.util.List<google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails> getTrendingIssuesList() {
    return trendingIssues_;
  }
  /**
   * <pre>
   * A stability digest contains several trending Crashlytics issues
   * </pre>
   *
   * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
   */
  public java.util.List<? extends google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetailsOrBuilder> 
      getTrendingIssuesOrBuilderList() {
    return trendingIssues_;
  }
  /**
   * <pre>
   * A stability digest contains several trending Crashlytics issues
   * </pre>
   *
   * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
   */
  @java.lang.Override
  public int getTrendingIssuesCount() {
    return trendingIssues_.size();
  }
  /**
   * <pre>
   * A stability digest contains several trending Crashlytics issues
   * </pre>
   *
   * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
   */
  @java.lang.Override
  public google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails getTrendingIssues(int index) {
    return trendingIssues_.get(index);
  }
  /**
   * <pre>
   * A stability digest contains several trending Crashlytics issues
   * </pre>
   *
   * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
   */
  public google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetailsOrBuilder getTrendingIssuesOrBuilder(
      int index) {
    return trendingIssues_.get(index);
  }
  private void ensureTrendingIssuesIsMutable() {
    com.google.protobuf.Internal.ProtobufList<google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails> tmp = trendingIssues_;
    if (!tmp.isModifiable()) {
      trendingIssues_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * A stability digest contains several trending Crashlytics issues
   * </pre>
   *
   * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
   */
  private void setTrendingIssues(
      int index, google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails value) {
    value.getClass();
  ensureTrendingIssuesIsMutable();
    trendingIssues_.set(index, value);
  }
  /**
   * <pre>
   * A stability digest contains several trending Crashlytics issues
   * </pre>
   *
   * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
   */
  private void addTrendingIssues(google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails value) {
    value.getClass();
  ensureTrendingIssuesIsMutable();
    trendingIssues_.add(value);
  }
  /**
   * <pre>
   * A stability digest contains several trending Crashlytics issues
   * </pre>
   *
   * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
   */
  private void addTrendingIssues(
      int index, google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails value) {
    value.getClass();
  ensureTrendingIssuesIsMutable();
    trendingIssues_.add(index, value);
  }
  /**
   * <pre>
   * A stability digest contains several trending Crashlytics issues
   * </pre>
   *
   * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
   */
  private void addAllTrendingIssues(
      java.lang.Iterable<? extends google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails> values) {
    ensureTrendingIssuesIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, trendingIssues_);
  }
  /**
   * <pre>
   * A stability digest contains several trending Crashlytics issues
   * </pre>
   *
   * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
   */
  private void clearTrendingIssues() {
    trendingIssues_ = emptyProtobufList();
  }
  /**
   * <pre>
   * A stability digest contains several trending Crashlytics issues
   * </pre>
   *
   * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
   */
  private void removeTrendingIssues(int index) {
    ensureTrendingIssuesIsMutable();
    trendingIssues_.remove(index);
  }

  public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload)
      google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayloadOrBuilder {
    // Construct using google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The date that the digest gets created, issues in the digest should
     * have the same date as the digest date
     * </pre>
     *
     * <code>.google.type.Date digest_date = 5;</code>
     */
    @java.lang.Override
    public boolean hasDigestDate() {
      return instance.hasDigestDate();
    }
    /**
     * <pre>
     * The date that the digest gets created, issues in the digest should
     * have the same date as the digest date
     * </pre>
     *
     * <code>.google.type.Date digest_date = 5;</code>
     */
    @java.lang.Override
    public com.google.type.Date getDigestDate() {
      return instance.getDigestDate();
    }
    /**
     * <pre>
     * The date that the digest gets created, issues in the digest should
     * have the same date as the digest date
     * </pre>
     *
     * <code>.google.type.Date digest_date = 5;</code>
     */
    public Builder setDigestDate(com.google.type.Date value) {
      copyOnWrite();
      instance.setDigestDate(value);
      return this;
      }
    /**
     * <pre>
     * The date that the digest gets created, issues in the digest should
     * have the same date as the digest date
     * </pre>
     *
     * <code>.google.type.Date digest_date = 5;</code>
     */
    public Builder setDigestDate(
        com.google.type.Date.Builder builderForValue) {
      copyOnWrite();
      instance.setDigestDate(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The date that the digest gets created, issues in the digest should
     * have the same date as the digest date
     * </pre>
     *
     * <code>.google.type.Date digest_date = 5;</code>
     */
    public Builder mergeDigestDate(com.google.type.Date value) {
      copyOnWrite();
      instance.mergeDigestDate(value);
      return this;
    }
    /**
     * <pre>
     * The date that the digest gets created, issues in the digest should
     * have the same date as the digest date
     * </pre>
     *
     * <code>.google.type.Date digest_date = 5;</code>
     */
    public Builder clearDigestDate() {  copyOnWrite();
      instance.clearDigestDate();
      return this;
    }

    /**
     * <pre>
     * A stability digest contains several trending Crashlytics issues
     * </pre>
     *
     * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
     */
    @java.lang.Override
    public java.util.List<google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails> getTrendingIssuesList() {
      return java.util.Collections.unmodifiableList(
          instance.getTrendingIssuesList());
    }
    /**
     * <pre>
     * A stability digest contains several trending Crashlytics issues
     * </pre>
     *
     * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
     */
    @java.lang.Override
    public int getTrendingIssuesCount() {
      return instance.getTrendingIssuesCount();
    }/**
     * <pre>
     * A stability digest contains several trending Crashlytics issues
     * </pre>
     *
     * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
     */
    @java.lang.Override
    public google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails getTrendingIssues(int index) {
      return instance.getTrendingIssues(index);
    }
    /**
     * <pre>
     * A stability digest contains several trending Crashlytics issues
     * </pre>
     *
     * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
     */
    public Builder setTrendingIssues(
        int index, google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails value) {
      copyOnWrite();
      instance.setTrendingIssues(index, value);
      return this;
    }
    /**
     * <pre>
     * A stability digest contains several trending Crashlytics issues
     * </pre>
     *
     * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
     */
    public Builder setTrendingIssues(
        int index, google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails.Builder builderForValue) {
      copyOnWrite();
      instance.setTrendingIssues(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A stability digest contains several trending Crashlytics issues
     * </pre>
     *
     * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
     */
    public Builder addTrendingIssues(google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails value) {
      copyOnWrite();
      instance.addTrendingIssues(value);
      return this;
    }
    /**
     * <pre>
     * A stability digest contains several trending Crashlytics issues
     * </pre>
     *
     * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
     */
    public Builder addTrendingIssues(
        int index, google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails value) {
      copyOnWrite();
      instance.addTrendingIssues(index, value);
      return this;
    }
    /**
     * <pre>
     * A stability digest contains several trending Crashlytics issues
     * </pre>
     *
     * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
     */
    public Builder addTrendingIssues(
        google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails.Builder builderForValue) {
      copyOnWrite();
      instance.addTrendingIssues(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A stability digest contains several trending Crashlytics issues
     * </pre>
     *
     * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
     */
    public Builder addTrendingIssues(
        int index, google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails.Builder builderForValue) {
      copyOnWrite();
      instance.addTrendingIssues(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * A stability digest contains several trending Crashlytics issues
     * </pre>
     *
     * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
     */
    public Builder addAllTrendingIssues(
        java.lang.Iterable<? extends google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails> values) {
      copyOnWrite();
      instance.addAllTrendingIssues(values);
      return this;
    }
    /**
     * <pre>
     * A stability digest contains several trending Crashlytics issues
     * </pre>
     *
     * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
     */
    public Builder clearTrendingIssues() {
      copyOnWrite();
      instance.clearTrendingIssues();
      return this;
    }
    /**
     * <pre>
     * A stability digest contains several trending Crashlytics issues
     * </pre>
     *
     * <code>repeated .google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails trending_issues = 6;</code>
     */
    public Builder removeTrendingIssues(int index) {
      copyOnWrite();
      instance.removeTrendingIssues(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "digestDate_",
            "trendingIssues_",
            google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.TrendingIssueDetails.class,
          };
          java.lang.String info =
              "\u0000\u0002\u0000\u0000\u0005\u0006\u0002\u0000\u0001\u0000\u0005\t\u0006\u001b" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload)
  private static final google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload DEFAULT_INSTANCE;
  static {
    CrashlyticsStabilityDigestPayload defaultInstance = new CrashlyticsStabilityDigestPayload();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      CrashlyticsStabilityDigestPayload.class, defaultInstance);
  }

  public static google.events.firebase.firebasealerts.v1.CrashlyticsStabilityDigestPayload getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<CrashlyticsStabilityDigestPayload> PARSER;

  public static com.google.protobuf.Parser<CrashlyticsStabilityDigestPayload> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

