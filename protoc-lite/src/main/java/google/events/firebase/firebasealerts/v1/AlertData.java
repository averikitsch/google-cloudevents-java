// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/firebasealerts/v1/data.proto

package google.events.firebase.firebasealerts.v1;

/**
 * <pre>
 * The data within all Firebase Alerts.
 * </pre>
 *
 * Protobuf type {@code google.events.firebase.firebasealerts.v1.AlertData}
 */
public  final class AlertData extends
    com.google.protobuf.GeneratedMessageLite<
        AlertData, AlertData.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.firebase.firebasealerts.v1.AlertData)
    AlertDataOrBuilder {
  private AlertData() {
  }
  public static final int CREATE_TIME_FIELD_NUMBER = 1;
  private com.google.protobuf.Timestamp createTime_;
  /**
   * <pre>
   * Time that the event has created
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   */
  @java.lang.Override
  public boolean hasCreateTime() {
    return createTime_ != null;
  }
  /**
   * <pre>
   * Time that the event has created
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   * <pre>
   * Time that the event has created
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   */
  private void setCreateTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  createTime_ = value;
    
    }
  /**
   * <pre>
   * Time that the event has created
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeCreateTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (createTime_ != null &&
        createTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      createTime_ =
        com.google.protobuf.Timestamp.newBuilder(createTime_).mergeFrom(value).buildPartial();
    } else {
      createTime_ = value;
    }
    
  }
  /**
   * <pre>
   * Time that the event has created
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   */
  private void clearCreateTime() {  createTime_ = null;
    
  }

  public static final int END_TIME_FIELD_NUMBER = 2;
  private com.google.protobuf.Timestamp endTime_;
  /**
   * <pre>
   * Time that the event has ended. Optional, only present for alertsthat are
   * ongoing
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 2;</code>
   */
  @java.lang.Override
  public boolean hasEndTime() {
    return endTime_ != null;
  }
  /**
   * <pre>
   * Time that the event has ended. Optional, only present for alertsthat are
   * ongoing
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getEndTime() {
    return endTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : endTime_;
  }
  /**
   * <pre>
   * Time that the event has ended. Optional, only present for alertsthat are
   * ongoing
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 2;</code>
   */
  private void setEndTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  endTime_ = value;
    
    }
  /**
   * <pre>
   * Time that the event has ended. Optional, only present for alertsthat are
   * ongoing
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 2;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeEndTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (endTime_ != null &&
        endTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      endTime_ =
        com.google.protobuf.Timestamp.newBuilder(endTime_).mergeFrom(value).buildPartial();
    } else {
      endTime_ = value;
    }
    
  }
  /**
   * <pre>
   * Time that the event has ended. Optional, only present for alertsthat are
   * ongoing
   * </pre>
   *
   * <code>.google.protobuf.Timestamp end_time = 2;</code>
   */
  private void clearEndTime() {  endTime_ = null;
    
  }

  public static final int PAYLOAD_FIELD_NUMBER = 3;
  private com.google.protobuf.Struct payload_;
  /**
   * <pre>
   * Payload of the event, which includes the details of the specific alert.
   * It's a map of keys of String type and values of various types
   * </pre>
   *
   * <code>.google.protobuf.Struct payload = 3;</code>
   */
  @java.lang.Override
  public boolean hasPayload() {
    return payload_ != null;
  }
  /**
   * <pre>
   * Payload of the event, which includes the details of the specific alert.
   * It's a map of keys of String type and values of various types
   * </pre>
   *
   * <code>.google.protobuf.Struct payload = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Struct getPayload() {
    return payload_ == null ? com.google.protobuf.Struct.getDefaultInstance() : payload_;
  }
  /**
   * <pre>
   * Payload of the event, which includes the details of the specific alert.
   * It's a map of keys of String type and values of various types
   * </pre>
   *
   * <code>.google.protobuf.Struct payload = 3;</code>
   */
  private void setPayload(com.google.protobuf.Struct value) {
    value.getClass();
  payload_ = value;
    
    }
  /**
   * <pre>
   * Payload of the event, which includes the details of the specific alert.
   * It's a map of keys of String type and values of various types
   * </pre>
   *
   * <code>.google.protobuf.Struct payload = 3;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergePayload(com.google.protobuf.Struct value) {
    value.getClass();
  if (payload_ != null &&
        payload_ != com.google.protobuf.Struct.getDefaultInstance()) {
      payload_ =
        com.google.protobuf.Struct.newBuilder(payload_).mergeFrom(value).buildPartial();
    } else {
      payload_ = value;
    }
    
  }
  /**
   * <pre>
   * Payload of the event, which includes the details of the specific alert.
   * It's a map of keys of String type and values of various types
   * </pre>
   *
   * <code>.google.protobuf.Struct payload = 3;</code>
   */
  private void clearPayload() {  payload_ = null;
    
  }

  public static google.events.firebase.firebasealerts.v1.AlertData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.firebasealerts.v1.AlertData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.firebasealerts.v1.AlertData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.firebasealerts.v1.AlertData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.firebasealerts.v1.AlertData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.firebasealerts.v1.AlertData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.firebasealerts.v1.AlertData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.firebasealerts.v1.AlertData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.firebasealerts.v1.AlertData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.firebasealerts.v1.AlertData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.firebasealerts.v1.AlertData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.firebasealerts.v1.AlertData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.firebase.firebasealerts.v1.AlertData prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * The data within all Firebase Alerts.
   * </pre>
   *
   * Protobuf type {@code google.events.firebase.firebasealerts.v1.AlertData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.firebase.firebasealerts.v1.AlertData, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.firebase.firebasealerts.v1.AlertData)
      google.events.firebase.firebasealerts.v1.AlertDataOrBuilder {
    // Construct using google.events.firebase.firebasealerts.v1.AlertData.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Time that the event has created
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    @java.lang.Override
    public boolean hasCreateTime() {
      return instance.hasCreateTime();
    }
    /**
     * <pre>
     * Time that the event has created
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getCreateTime() {
      return instance.getCreateTime();
    }
    /**
     * <pre>
     * Time that the event has created
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setCreateTime(value);
      return this;
      }
    /**
     * <pre>
     * Time that the event has created
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public Builder setCreateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setCreateTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Time that the event has created
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public Builder mergeCreateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeCreateTime(value);
      return this;
    }
    /**
     * <pre>
     * Time that the event has created
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public Builder clearCreateTime() {  copyOnWrite();
      instance.clearCreateTime();
      return this;
    }

    /**
     * <pre>
     * Time that the event has ended. Optional, only present for alertsthat are
     * ongoing
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 2;</code>
     */
    @java.lang.Override
    public boolean hasEndTime() {
      return instance.hasEndTime();
    }
    /**
     * <pre>
     * Time that the event has ended. Optional, only present for alertsthat are
     * ongoing
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getEndTime() {
      return instance.getEndTime();
    }
    /**
     * <pre>
     * Time that the event has ended. Optional, only present for alertsthat are
     * ongoing
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 2;</code>
     */
    public Builder setEndTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setEndTime(value);
      return this;
      }
    /**
     * <pre>
     * Time that the event has ended. Optional, only present for alertsthat are
     * ongoing
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 2;</code>
     */
    public Builder setEndTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setEndTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Time that the event has ended. Optional, only present for alertsthat are
     * ongoing
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 2;</code>
     */
    public Builder mergeEndTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeEndTime(value);
      return this;
    }
    /**
     * <pre>
     * Time that the event has ended. Optional, only present for alertsthat are
     * ongoing
     * </pre>
     *
     * <code>.google.protobuf.Timestamp end_time = 2;</code>
     */
    public Builder clearEndTime() {  copyOnWrite();
      instance.clearEndTime();
      return this;
    }

    /**
     * <pre>
     * Payload of the event, which includes the details of the specific alert.
     * It's a map of keys of String type and values of various types
     * </pre>
     *
     * <code>.google.protobuf.Struct payload = 3;</code>
     */
    @java.lang.Override
    public boolean hasPayload() {
      return instance.hasPayload();
    }
    /**
     * <pre>
     * Payload of the event, which includes the details of the specific alert.
     * It's a map of keys of String type and values of various types
     * </pre>
     *
     * <code>.google.protobuf.Struct payload = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Struct getPayload() {
      return instance.getPayload();
    }
    /**
     * <pre>
     * Payload of the event, which includes the details of the specific alert.
     * It's a map of keys of String type and values of various types
     * </pre>
     *
     * <code>.google.protobuf.Struct payload = 3;</code>
     */
    public Builder setPayload(com.google.protobuf.Struct value) {
      copyOnWrite();
      instance.setPayload(value);
      return this;
      }
    /**
     * <pre>
     * Payload of the event, which includes the details of the specific alert.
     * It's a map of keys of String type and values of various types
     * </pre>
     *
     * <code>.google.protobuf.Struct payload = 3;</code>
     */
    public Builder setPayload(
        com.google.protobuf.Struct.Builder builderForValue) {
      copyOnWrite();
      instance.setPayload(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Payload of the event, which includes the details of the specific alert.
     * It's a map of keys of String type and values of various types
     * </pre>
     *
     * <code>.google.protobuf.Struct payload = 3;</code>
     */
    public Builder mergePayload(com.google.protobuf.Struct value) {
      copyOnWrite();
      instance.mergePayload(value);
      return this;
    }
    /**
     * <pre>
     * Payload of the event, which includes the details of the specific alert.
     * It's a map of keys of String type and values of various types
     * </pre>
     *
     * <code>.google.protobuf.Struct payload = 3;</code>
     */
    public Builder clearPayload() {  copyOnWrite();
      instance.clearPayload();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.firebase.firebasealerts.v1.AlertData)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.firebase.firebasealerts.v1.AlertData();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "createTime_",
            "endTime_",
            "payload_",
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\t\u0002\t\u0003" +
              "\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.firebase.firebasealerts.v1.AlertData> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.firebase.firebasealerts.v1.AlertData.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.firebase.firebasealerts.v1.AlertData>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.firebase.firebasealerts.v1.AlertData)
  private static final google.events.firebase.firebasealerts.v1.AlertData DEFAULT_INSTANCE;
  static {
    AlertData defaultInstance = new AlertData();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      AlertData.class, defaultInstance);
  }

  public static google.events.firebase.firebasealerts.v1.AlertData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<AlertData> PARSER;

  public static com.google.protobuf.Parser<AlertData> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

