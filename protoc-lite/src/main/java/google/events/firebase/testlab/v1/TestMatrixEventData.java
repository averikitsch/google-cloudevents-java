// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/events/firebase/testlab/v1/data.proto

package google.events.firebase.testlab.v1;

/**
 * <pre>
 * The data within all Firebase test matrix events.
 * </pre>
 *
 * Protobuf type {@code google.events.firebase.testlab.v1.TestMatrixEventData}
 */
public  final class TestMatrixEventData extends
    com.google.protobuf.GeneratedMessageLite<
        TestMatrixEventData, TestMatrixEventData.Builder> implements
    // @@protoc_insertion_point(message_implements:google.events.firebase.testlab.v1.TestMatrixEventData)
    TestMatrixEventDataOrBuilder {
  private TestMatrixEventData() {
    invalidMatrixDetails_ = "";
    testMatrixId_ = "";
  }
  public static final int CREATE_TIME_FIELD_NUMBER = 1;
  private com.google.protobuf.Timestamp createTime_;
  /**
   * <pre>
   * Time the test matrix was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   */
  @java.lang.Override
  public boolean hasCreateTime() {
    return createTime_ != null;
  }
  /**
   * <pre>
   * Time the test matrix was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getCreateTime() {
    return createTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : createTime_;
  }
  /**
   * <pre>
   * Time the test matrix was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   */
  private void setCreateTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  createTime_ = value;
    
    }
  /**
   * <pre>
   * Time the test matrix was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeCreateTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (createTime_ != null &&
        createTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      createTime_ =
        com.google.protobuf.Timestamp.newBuilder(createTime_).mergeFrom(value).buildPartial();
    } else {
      createTime_ = value;
    }
    
  }
  /**
   * <pre>
   * Time the test matrix was created.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 1;</code>
   */
  private void clearCreateTime() {  createTime_ = null;
    
  }

  public static final int STATE_FIELD_NUMBER = 2;
  private int state_;
  /**
   * <pre>
   * State of the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.TestState state = 2;</code>
   * @return The enum numeric value on the wire for state.
   */
  @java.lang.Override
  public int getStateValue() {
    return state_;
  }
  /**
   * <pre>
   * State of the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.TestState state = 2;</code>
   * @return The state.
   */
  @java.lang.Override
  public google.events.firebase.testlab.v1.TestState getState() {
    google.events.firebase.testlab.v1.TestState result = google.events.firebase.testlab.v1.TestState.forNumber(state_);
    return result == null ? google.events.firebase.testlab.v1.TestState.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * State of the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.TestState state = 2;</code>
   * @param value The enum numeric value on the wire for state to set.
   */
  private void setStateValue(int value) {
      state_ = value;
  }
  /**
   * <pre>
   * State of the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.TestState state = 2;</code>
   * @param value The state to set.
   */
  private void setState(google.events.firebase.testlab.v1.TestState value) {
    state_ = value.getNumber();
    
  }
  /**
   * <pre>
   * State of the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.TestState state = 2;</code>
   */
  private void clearState() {
    
    state_ = 0;
  }

  public static final int INVALID_MATRIX_DETAILS_FIELD_NUMBER = 3;
  private java.lang.String invalidMatrixDetails_;
  /**
   * <pre>
   * Code that describes why the test matrix is considered invalid. Only set for
   * matrices in the INVALID state.
   * </pre>
   *
   * <code>string invalid_matrix_details = 3;</code>
   * @return The invalidMatrixDetails.
   */
  @java.lang.Override
  public java.lang.String getInvalidMatrixDetails() {
    return invalidMatrixDetails_;
  }
  /**
   * <pre>
   * Code that describes why the test matrix is considered invalid. Only set for
   * matrices in the INVALID state.
   * </pre>
   *
   * <code>string invalid_matrix_details = 3;</code>
   * @return The bytes for invalidMatrixDetails.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getInvalidMatrixDetailsBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(invalidMatrixDetails_);
  }
  /**
   * <pre>
   * Code that describes why the test matrix is considered invalid. Only set for
   * matrices in the INVALID state.
   * </pre>
   *
   * <code>string invalid_matrix_details = 3;</code>
   * @param value The invalidMatrixDetails to set.
   */
  private void setInvalidMatrixDetails(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    invalidMatrixDetails_ = value;
  }
  /**
   * <pre>
   * Code that describes why the test matrix is considered invalid. Only set for
   * matrices in the INVALID state.
   * </pre>
   *
   * <code>string invalid_matrix_details = 3;</code>
   */
  private void clearInvalidMatrixDetails() {
    
    invalidMatrixDetails_ = getDefaultInstance().getInvalidMatrixDetails();
  }
  /**
   * <pre>
   * Code that describes why the test matrix is considered invalid. Only set for
   * matrices in the INVALID state.
   * </pre>
   *
   * <code>string invalid_matrix_details = 3;</code>
   * @param value The bytes for invalidMatrixDetails to set.
   */
  private void setInvalidMatrixDetailsBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    invalidMatrixDetails_ = value.toStringUtf8();
    
  }

  public static final int OUTCOME_SUMMARY_FIELD_NUMBER = 4;
  private int outcomeSummary_;
  /**
   * <pre>
   * Outcome summary of the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.OutcomeSummary outcome_summary = 4;</code>
   * @return The enum numeric value on the wire for outcomeSummary.
   */
  @java.lang.Override
  public int getOutcomeSummaryValue() {
    return outcomeSummary_;
  }
  /**
   * <pre>
   * Outcome summary of the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.OutcomeSummary outcome_summary = 4;</code>
   * @return The outcomeSummary.
   */
  @java.lang.Override
  public google.events.firebase.testlab.v1.OutcomeSummary getOutcomeSummary() {
    google.events.firebase.testlab.v1.OutcomeSummary result = google.events.firebase.testlab.v1.OutcomeSummary.forNumber(outcomeSummary_);
    return result == null ? google.events.firebase.testlab.v1.OutcomeSummary.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Outcome summary of the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.OutcomeSummary outcome_summary = 4;</code>
   * @param value The enum numeric value on the wire for outcomeSummary to set.
   */
  private void setOutcomeSummaryValue(int value) {
      outcomeSummary_ = value;
  }
  /**
   * <pre>
   * Outcome summary of the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.OutcomeSummary outcome_summary = 4;</code>
   * @param value The outcomeSummary to set.
   */
  private void setOutcomeSummary(google.events.firebase.testlab.v1.OutcomeSummary value) {
    outcomeSummary_ = value.getNumber();
    
  }
  /**
   * <pre>
   * Outcome summary of the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.OutcomeSummary outcome_summary = 4;</code>
   */
  private void clearOutcomeSummary() {
    
    outcomeSummary_ = 0;
  }

  public static final int RESULT_STORAGE_FIELD_NUMBER = 5;
  private google.events.firebase.testlab.v1.ResultStorage resultStorage_;
  /**
   * <pre>
   * Locations where test results are stored.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.ResultStorage result_storage = 5;</code>
   */
  @java.lang.Override
  public boolean hasResultStorage() {
    return resultStorage_ != null;
  }
  /**
   * <pre>
   * Locations where test results are stored.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.ResultStorage result_storage = 5;</code>
   */
  @java.lang.Override
  public google.events.firebase.testlab.v1.ResultStorage getResultStorage() {
    return resultStorage_ == null ? google.events.firebase.testlab.v1.ResultStorage.getDefaultInstance() : resultStorage_;
  }
  /**
   * <pre>
   * Locations where test results are stored.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.ResultStorage result_storage = 5;</code>
   */
  private void setResultStorage(google.events.firebase.testlab.v1.ResultStorage value) {
    value.getClass();
  resultStorage_ = value;
    
    }
  /**
   * <pre>
   * Locations where test results are stored.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.ResultStorage result_storage = 5;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeResultStorage(google.events.firebase.testlab.v1.ResultStorage value) {
    value.getClass();
  if (resultStorage_ != null &&
        resultStorage_ != google.events.firebase.testlab.v1.ResultStorage.getDefaultInstance()) {
      resultStorage_ =
        google.events.firebase.testlab.v1.ResultStorage.newBuilder(resultStorage_).mergeFrom(value).buildPartial();
    } else {
      resultStorage_ = value;
    }
    
  }
  /**
   * <pre>
   * Locations where test results are stored.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.ResultStorage result_storage = 5;</code>
   */
  private void clearResultStorage() {  resultStorage_ = null;
    
  }

  public static final int CLIENT_INFO_FIELD_NUMBER = 6;
  private google.events.firebase.testlab.v1.ClientInfo clientInfo_;
  /**
   * <pre>
   * Information provided by the client that created the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.ClientInfo client_info = 6;</code>
   */
  @java.lang.Override
  public boolean hasClientInfo() {
    return clientInfo_ != null;
  }
  /**
   * <pre>
   * Information provided by the client that created the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.ClientInfo client_info = 6;</code>
   */
  @java.lang.Override
  public google.events.firebase.testlab.v1.ClientInfo getClientInfo() {
    return clientInfo_ == null ? google.events.firebase.testlab.v1.ClientInfo.getDefaultInstance() : clientInfo_;
  }
  /**
   * <pre>
   * Information provided by the client that created the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.ClientInfo client_info = 6;</code>
   */
  private void setClientInfo(google.events.firebase.testlab.v1.ClientInfo value) {
    value.getClass();
  clientInfo_ = value;
    
    }
  /**
   * <pre>
   * Information provided by the client that created the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.ClientInfo client_info = 6;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeClientInfo(google.events.firebase.testlab.v1.ClientInfo value) {
    value.getClass();
  if (clientInfo_ != null &&
        clientInfo_ != google.events.firebase.testlab.v1.ClientInfo.getDefaultInstance()) {
      clientInfo_ =
        google.events.firebase.testlab.v1.ClientInfo.newBuilder(clientInfo_).mergeFrom(value).buildPartial();
    } else {
      clientInfo_ = value;
    }
    
  }
  /**
   * <pre>
   * Information provided by the client that created the test matrix.
   * </pre>
   *
   * <code>.google.events.firebase.testlab.v1.ClientInfo client_info = 6;</code>
   */
  private void clearClientInfo() {  clientInfo_ = null;
    
  }

  public static final int TEST_MATRIX_ID_FIELD_NUMBER = 7;
  private java.lang.String testMatrixId_;
  /**
   * <pre>
   * ID of the test matrix this event belongs to.
   * </pre>
   *
   * <code>string test_matrix_id = 7;</code>
   * @return The testMatrixId.
   */
  @java.lang.Override
  public java.lang.String getTestMatrixId() {
    return testMatrixId_;
  }
  /**
   * <pre>
   * ID of the test matrix this event belongs to.
   * </pre>
   *
   * <code>string test_matrix_id = 7;</code>
   * @return The bytes for testMatrixId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTestMatrixIdBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(testMatrixId_);
  }
  /**
   * <pre>
   * ID of the test matrix this event belongs to.
   * </pre>
   *
   * <code>string test_matrix_id = 7;</code>
   * @param value The testMatrixId to set.
   */
  private void setTestMatrixId(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    testMatrixId_ = value;
  }
  /**
   * <pre>
   * ID of the test matrix this event belongs to.
   * </pre>
   *
   * <code>string test_matrix_id = 7;</code>
   */
  private void clearTestMatrixId() {
    
    testMatrixId_ = getDefaultInstance().getTestMatrixId();
  }
  /**
   * <pre>
   * ID of the test matrix this event belongs to.
   * </pre>
   *
   * <code>string test_matrix_id = 7;</code>
   * @param value The bytes for testMatrixId to set.
   */
  private void setTestMatrixIdBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    testMatrixId_ = value.toStringUtf8();
    
  }

  public static google.events.firebase.testlab.v1.TestMatrixEventData parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.testlab.v1.TestMatrixEventData parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.testlab.v1.TestMatrixEventData parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.testlab.v1.TestMatrixEventData parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.testlab.v1.TestMatrixEventData parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static google.events.firebase.testlab.v1.TestMatrixEventData parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static google.events.firebase.testlab.v1.TestMatrixEventData parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.testlab.v1.TestMatrixEventData parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.testlab.v1.TestMatrixEventData parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.testlab.v1.TestMatrixEventData parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static google.events.firebase.testlab.v1.TestMatrixEventData parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static google.events.firebase.testlab.v1.TestMatrixEventData parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(google.events.firebase.testlab.v1.TestMatrixEventData prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * The data within all Firebase test matrix events.
   * </pre>
   *
   * Protobuf type {@code google.events.firebase.testlab.v1.TestMatrixEventData}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        google.events.firebase.testlab.v1.TestMatrixEventData, Builder> implements
      // @@protoc_insertion_point(builder_implements:google.events.firebase.testlab.v1.TestMatrixEventData)
      google.events.firebase.testlab.v1.TestMatrixEventDataOrBuilder {
    // Construct using google.events.firebase.testlab.v1.TestMatrixEventData.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Time the test matrix was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    @java.lang.Override
    public boolean hasCreateTime() {
      return instance.hasCreateTime();
    }
    /**
     * <pre>
     * Time the test matrix was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getCreateTime() {
      return instance.getCreateTime();
    }
    /**
     * <pre>
     * Time the test matrix was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public Builder setCreateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setCreateTime(value);
      return this;
      }
    /**
     * <pre>
     * Time the test matrix was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public Builder setCreateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setCreateTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Time the test matrix was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public Builder mergeCreateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeCreateTime(value);
      return this;
    }
    /**
     * <pre>
     * Time the test matrix was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    public Builder clearCreateTime() {  copyOnWrite();
      instance.clearCreateTime();
      return this;
    }

    /**
     * <pre>
     * State of the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.TestState state = 2;</code>
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override
    public int getStateValue() {
      return instance.getStateValue();
    }
    /**
     * <pre>
     * State of the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.TestState state = 2;</code>
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setStateValue(int value) {
      copyOnWrite();
      instance.setStateValue(value);
      return this;
    }
    /**
     * <pre>
     * State of the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.TestState state = 2;</code>
     * @return The state.
     */
    @java.lang.Override
    public google.events.firebase.testlab.v1.TestState getState() {
      return instance.getState();
    }
    /**
     * <pre>
     * State of the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.TestState state = 2;</code>
     * @param value The enum numeric value on the wire for state to set.
     * @return This builder for chaining.
     */
    public Builder setState(google.events.firebase.testlab.v1.TestState value) {
      copyOnWrite();
      instance.setState(value);
      return this;
    }
    /**
     * <pre>
     * State of the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.TestState state = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearState() {
      copyOnWrite();
      instance.clearState();
      return this;
    }

    /**
     * <pre>
     * Code that describes why the test matrix is considered invalid. Only set for
     * matrices in the INVALID state.
     * </pre>
     *
     * <code>string invalid_matrix_details = 3;</code>
     * @return The invalidMatrixDetails.
     */
    @java.lang.Override
    public java.lang.String getInvalidMatrixDetails() {
      return instance.getInvalidMatrixDetails();
    }
    /**
     * <pre>
     * Code that describes why the test matrix is considered invalid. Only set for
     * matrices in the INVALID state.
     * </pre>
     *
     * <code>string invalid_matrix_details = 3;</code>
     * @return The bytes for invalidMatrixDetails.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInvalidMatrixDetailsBytes() {
      return instance.getInvalidMatrixDetailsBytes();
    }
    /**
     * <pre>
     * Code that describes why the test matrix is considered invalid. Only set for
     * matrices in the INVALID state.
     * </pre>
     *
     * <code>string invalid_matrix_details = 3;</code>
     * @param value The invalidMatrixDetails to set.
     * @return This builder for chaining.
     */
    public Builder setInvalidMatrixDetails(
        java.lang.String value) {
      copyOnWrite();
      instance.setInvalidMatrixDetails(value);
      return this;
    }
    /**
     * <pre>
     * Code that describes why the test matrix is considered invalid. Only set for
     * matrices in the INVALID state.
     * </pre>
     *
     * <code>string invalid_matrix_details = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearInvalidMatrixDetails() {
      copyOnWrite();
      instance.clearInvalidMatrixDetails();
      return this;
    }
    /**
     * <pre>
     * Code that describes why the test matrix is considered invalid. Only set for
     * matrices in the INVALID state.
     * </pre>
     *
     * <code>string invalid_matrix_details = 3;</code>
     * @param value The bytes for invalidMatrixDetails to set.
     * @return This builder for chaining.
     */
    public Builder setInvalidMatrixDetailsBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setInvalidMatrixDetailsBytes(value);
      return this;
    }

    /**
     * <pre>
     * Outcome summary of the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.OutcomeSummary outcome_summary = 4;</code>
     * @return The enum numeric value on the wire for outcomeSummary.
     */
    @java.lang.Override
    public int getOutcomeSummaryValue() {
      return instance.getOutcomeSummaryValue();
    }
    /**
     * <pre>
     * Outcome summary of the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.OutcomeSummary outcome_summary = 4;</code>
     * @param value The outcomeSummary to set.
     * @return This builder for chaining.
     */
    public Builder setOutcomeSummaryValue(int value) {
      copyOnWrite();
      instance.setOutcomeSummaryValue(value);
      return this;
    }
    /**
     * <pre>
     * Outcome summary of the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.OutcomeSummary outcome_summary = 4;</code>
     * @return The outcomeSummary.
     */
    @java.lang.Override
    public google.events.firebase.testlab.v1.OutcomeSummary getOutcomeSummary() {
      return instance.getOutcomeSummary();
    }
    /**
     * <pre>
     * Outcome summary of the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.OutcomeSummary outcome_summary = 4;</code>
     * @param value The enum numeric value on the wire for outcomeSummary to set.
     * @return This builder for chaining.
     */
    public Builder setOutcomeSummary(google.events.firebase.testlab.v1.OutcomeSummary value) {
      copyOnWrite();
      instance.setOutcomeSummary(value);
      return this;
    }
    /**
     * <pre>
     * Outcome summary of the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.OutcomeSummary outcome_summary = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearOutcomeSummary() {
      copyOnWrite();
      instance.clearOutcomeSummary();
      return this;
    }

    /**
     * <pre>
     * Locations where test results are stored.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.ResultStorage result_storage = 5;</code>
     */
    @java.lang.Override
    public boolean hasResultStorage() {
      return instance.hasResultStorage();
    }
    /**
     * <pre>
     * Locations where test results are stored.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.ResultStorage result_storage = 5;</code>
     */
    @java.lang.Override
    public google.events.firebase.testlab.v1.ResultStorage getResultStorage() {
      return instance.getResultStorage();
    }
    /**
     * <pre>
     * Locations where test results are stored.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.ResultStorage result_storage = 5;</code>
     */
    public Builder setResultStorage(google.events.firebase.testlab.v1.ResultStorage value) {
      copyOnWrite();
      instance.setResultStorage(value);
      return this;
      }
    /**
     * <pre>
     * Locations where test results are stored.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.ResultStorage result_storage = 5;</code>
     */
    public Builder setResultStorage(
        google.events.firebase.testlab.v1.ResultStorage.Builder builderForValue) {
      copyOnWrite();
      instance.setResultStorage(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Locations where test results are stored.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.ResultStorage result_storage = 5;</code>
     */
    public Builder mergeResultStorage(google.events.firebase.testlab.v1.ResultStorage value) {
      copyOnWrite();
      instance.mergeResultStorage(value);
      return this;
    }
    /**
     * <pre>
     * Locations where test results are stored.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.ResultStorage result_storage = 5;</code>
     */
    public Builder clearResultStorage() {  copyOnWrite();
      instance.clearResultStorage();
      return this;
    }

    /**
     * <pre>
     * Information provided by the client that created the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.ClientInfo client_info = 6;</code>
     */
    @java.lang.Override
    public boolean hasClientInfo() {
      return instance.hasClientInfo();
    }
    /**
     * <pre>
     * Information provided by the client that created the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.ClientInfo client_info = 6;</code>
     */
    @java.lang.Override
    public google.events.firebase.testlab.v1.ClientInfo getClientInfo() {
      return instance.getClientInfo();
    }
    /**
     * <pre>
     * Information provided by the client that created the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.ClientInfo client_info = 6;</code>
     */
    public Builder setClientInfo(google.events.firebase.testlab.v1.ClientInfo value) {
      copyOnWrite();
      instance.setClientInfo(value);
      return this;
      }
    /**
     * <pre>
     * Information provided by the client that created the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.ClientInfo client_info = 6;</code>
     */
    public Builder setClientInfo(
        google.events.firebase.testlab.v1.ClientInfo.Builder builderForValue) {
      copyOnWrite();
      instance.setClientInfo(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Information provided by the client that created the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.ClientInfo client_info = 6;</code>
     */
    public Builder mergeClientInfo(google.events.firebase.testlab.v1.ClientInfo value) {
      copyOnWrite();
      instance.mergeClientInfo(value);
      return this;
    }
    /**
     * <pre>
     * Information provided by the client that created the test matrix.
     * </pre>
     *
     * <code>.google.events.firebase.testlab.v1.ClientInfo client_info = 6;</code>
     */
    public Builder clearClientInfo() {  copyOnWrite();
      instance.clearClientInfo();
      return this;
    }

    /**
     * <pre>
     * ID of the test matrix this event belongs to.
     * </pre>
     *
     * <code>string test_matrix_id = 7;</code>
     * @return The testMatrixId.
     */
    @java.lang.Override
    public java.lang.String getTestMatrixId() {
      return instance.getTestMatrixId();
    }
    /**
     * <pre>
     * ID of the test matrix this event belongs to.
     * </pre>
     *
     * <code>string test_matrix_id = 7;</code>
     * @return The bytes for testMatrixId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTestMatrixIdBytes() {
      return instance.getTestMatrixIdBytes();
    }
    /**
     * <pre>
     * ID of the test matrix this event belongs to.
     * </pre>
     *
     * <code>string test_matrix_id = 7;</code>
     * @param value The testMatrixId to set.
     * @return This builder for chaining.
     */
    public Builder setTestMatrixId(
        java.lang.String value) {
      copyOnWrite();
      instance.setTestMatrixId(value);
      return this;
    }
    /**
     * <pre>
     * ID of the test matrix this event belongs to.
     * </pre>
     *
     * <code>string test_matrix_id = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearTestMatrixId() {
      copyOnWrite();
      instance.clearTestMatrixId();
      return this;
    }
    /**
     * <pre>
     * ID of the test matrix this event belongs to.
     * </pre>
     *
     * <code>string test_matrix_id = 7;</code>
     * @param value The bytes for testMatrixId to set.
     * @return This builder for chaining.
     */
    public Builder setTestMatrixIdBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setTestMatrixIdBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:google.events.firebase.testlab.v1.TestMatrixEventData)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new google.events.firebase.testlab.v1.TestMatrixEventData();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "createTime_",
            "state_",
            "invalidMatrixDetails_",
            "outcomeSummary_",
            "resultStorage_",
            "clientInfo_",
            "testMatrixId_",
          };
          java.lang.String info =
              "\u0000\u0007\u0000\u0000\u0001\u0007\u0007\u0000\u0000\u0000\u0001\t\u0002\f\u0003" +
              "\u0208\u0004\f\u0005\t\u0006\t\u0007\u0208";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<google.events.firebase.testlab.v1.TestMatrixEventData> parser = PARSER;
        if (parser == null) {
          synchronized (google.events.firebase.testlab.v1.TestMatrixEventData.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<google.events.firebase.testlab.v1.TestMatrixEventData>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:google.events.firebase.testlab.v1.TestMatrixEventData)
  private static final google.events.firebase.testlab.v1.TestMatrixEventData DEFAULT_INSTANCE;
  static {
    TestMatrixEventData defaultInstance = new TestMatrixEventData();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      TestMatrixEventData.class, defaultInstance);
  }

  public static google.events.firebase.testlab.v1.TestMatrixEventData getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<TestMatrixEventData> PARSER;

  public static com.google.protobuf.Parser<TestMatrixEventData> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

